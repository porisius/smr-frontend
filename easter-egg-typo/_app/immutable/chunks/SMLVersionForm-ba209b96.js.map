{"version":3,"file":"SMLVersionForm-ba209b96.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { UpdateSmlArch, VersionStabilities } from '$lib/generated';\n\nexport type SMLArchData = {\n  platform: string;\n  link: string;\n};\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  arch: SMLArchData[];\n  changelog: string;\n  date: string;\n  arch: UpdateSmlArch[];\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlLinksSchema = zod.object({\n  platform: zod.string(),\n  link: zod.string().url()\n});\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  arch: zod.array(smlLinksSchema),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n\n  export let onSubmit: (data: SMLVersionData) => void;\n\n  export let editing = false;\n\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '0.0.0',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    version: '',\n    arch: [{ platform: '', link: '' }]\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: smlVersionSchema }), reporter],\n    onSubmit: (submitted: SMLVersionData) => onSubmit(trimNonSchema(submitted, smlVersionSchema))\n  });\n\n  const addArch = () => {\n    $data.arch.push({ platform: '', link: '', key: '' });\n    $data.arch = $data.arch;\n  };\n\n  const removeArch = (i: number) => {\n    $data.arch.splice(i, 1);\n    $data.arch = $data.arch;\n  };\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label=\"Version\" required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory Version\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    {#if $data.bootstrap_version !== '0.0.0'}\n      <div class=\"grid grid-flow-row gap-2\">\n        <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap Version\" required />\n        <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n    {/if}\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label=\"Stability\">\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label=\"Changelog\"\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      {#each $data.arch as data_link, i}\n        <div class=\"gap-6 auto-rows-max\">\n          <Select bind:value={data_link.platform} label=\"Platform\">\n            <Option value=\"WindowsNoEditor\">Windows Client</Option>\n            <Option value=\"WindowsServer\">Windows Server</Option>\n            <Option value=\"LinuxServer\">Linux Server</Option>\n          </Select>\n\n          <Textfield\n            name={`data_link.link`}\n            placeholder=\"URL\"\n            bind:value={data_link.link}\n            style=\"min-width: 850px;\"\n            label=\"URL\" />\n          <ValidationMessage for=\"data_link.link\" let:messages={message}>\n            <span class=\"validation-message\">{message || ''}</span>\n          </ValidationMessage>\n\n          {#if !editing}\n            <Button type=\"button\" on:click={addArch}>Add</Button>\n            <Button type=\"button\" disabled={$data.arch.length == 1} on:click={() => removeArch(i)}>Remove</Button>\n          {/if}\n        </div>\n      {/each}\n\n      <Textfield bind:value={$data.link} label=\"Link\" />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label=\"Date and Time\" required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlLinksSchema","zod.object","platform","zod.string","link","url","smlVersionSchema","version","regex","satisfactory_version","zod.number","bootstrap_version","stability","arch","zod.array","changelog","date","t_value","ctx","insert_hydration","target","span","anchor","dirty","set_data","t","textfield_props","value","message","div","textfield_changes","innerHTML","raw_value","disabled","length","button1_changes","select_props","create_if_block","select_changes","textfield0_props","textfield1_props","create_if_block_1","textfield2_props","handle_promise","promise","markdown","info","each_value","i","textfield3_props","textfield4_props","form_1","append_hydration","div9","div0","div1","div2","div5","div3","div4","div6","div7","div8","textfield0_changes","textfield1_changes","textfield2_changes","each_blocks","textfield3_changes","textfield4_changes","onSubmit","$$props","editing","initialValues","VersionStabilities","Alpha","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","addArch","$data","push","key","removeArch","splice","$$self","$$","not_equal","data_link","click_handler","preview"],"mappings":"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"}