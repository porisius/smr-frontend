{"version":3,"file":"2.CPF8mFmd.js","sources":["../../../../../../src/routes/+page.ts","../../../../../../src/lib/components/general/Doggo.svelte","../../../../../../src/lib/stores/global.ts","../../../../../../src/routes/+page.svelte"],"sourcesContent":["import { queryStore } from '@urql/svelte';\nimport { GetModsDocument, ModFields, Order } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\nimport type { PageLoad } from './$types';\n\nexport const load: PageLoad = async ({ parent }) => ({\n  ...(await loadWaitForNoFetch({\n    mods: queryStore({\n      query: GetModsDocument,\n      client: (await parent()).client,\n      variables: {\n        offset: 0,\n        limit: 4,\n        order: Order.Desc,\n        orderBy: ModFields.LastVersionDate\n      }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { spring } from 'svelte/motion';\n  import { assets } from '$app/paths';\n  import { writable } from 'svelte/store';\n\n  export let dogVisible = writable<boolean>(false);\n\n  const x = spring<number>(-2000, { stiffness: 0.004, damping: 0.25, precision: 1 });\n  const y = spring<number>(-1000, { stiffness: 0.004, damping: 0.25, precision: 1 });\n  let sprite = assets + '/images/dog_stand.gif';\n\n  let last_mouse = { clientX: -1000, clientY: 0 };\n  let patting = false;\n\n  $: actual_mouse_x = last_mouse.clientX - 350;\n  $: actual_mouse_y = last_mouse.clientY - 100;\n  $: dx = Math.abs($x - actual_mouse_x);\n  $: dy = Math.abs($y - actual_mouse_y);\n  $: isClose = dx < 80 && dy < 40;\n  $: isLookingRight = $x < actual_mouse_x;\n  $: sprite = assets + ('/images/dog_' + (isClose ? 'stand.gif' : 'boing.gif'));\n  $: head_offset = isLookingRight ? -70 : 50;\n  $: x.set(actual_mouse_x + head_offset);\n  $: y.set(actual_mouse_y);\n\n  function update_pos(event: MouseEvent) {\n    if (!patting && dogVisible) {\n      last_mouse = event;\n    }\n  }\n\n  function pat() {\n    sprite = assets + '/images/dog_aw_yis_pats.gif';\n    patting = true;\n  }\n\n  function try_pat() {\n    isClose ? pat() : null;\n  }\n\n  async function end_pat() {\n    if (patting) {\n      sprite = assets + '/images/dog_boing.gif';\n      actual_mouse_x = 3000;\n      setTimeout(() => {\n        $dogVisible = false;\n        $x = -2000;\n        $y = -1000;\n        patting = false;\n      }, 700);\n    }\n  }\n</script>\n\n<svelte:window on:mousedown={try_pat} on:mousemove={update_pos} on:mouseup={end_pat} />\n\n{#if $dogVisible}\n  <img\n    class={'doggo-flipper h-full' + (isLookingRight ? '-R' : '-L')}\n    src={sprite}\n    alt=\"Doggo!\"\n    title=\"Click to pat doggo!\"\n    style=\"width: 200px;\n                      height: auto;\n                      position: absolute;\n                        top: {$y}px;\n                        left: {$x}px;\n                        z-index: 69;\n                      \" />\n{/if}\n\n<style lang=\"postcss\">\n  .doggo-flipper-L {\n    animation: 0.1s linear 0s 1 alternate flip-L both;\n  }\n\n  .doggo-flipper-R {\n    animation: 0.1s linear 0s 1 alternate flip-R both;\n  }\n\n  @keyframes flip-R {\n    from {\n      transform: scaleX(1);\n    }\n    to {\n      transform: scaleX(-1);\n    }\n  }\n\n  @keyframes flip-L {\n    from {\n      transform: scaleX(-1);\n    }\n    to {\n      transform: scaleX(1);\n    }\n  }\n</style>\n","import { writable } from 'svelte/store';\nimport { browser } from '$app/environment';\n\nlet mobileQuery: MediaQueryList;\nif (browser) {\n  mobileQuery = window.matchMedia('(min-width: 1280px)');\n}\n\nexport const onMobile = writable<boolean>(mobileQuery && !mobileQuery.matches);\nexport const doggoNeedsPats = writable<boolean>(false);\nexport const easterEgg = writable<boolean>(false);\nif (browser) {\n  mobileQuery.addEventListener('change', (data) => {\n    onMobile && onMobile.set(!data.matches);\n  });\n}\n\nif (browser) {\n  const easterCode = [\n    'ArrowUp',\n    'ArrowUp',\n    'ArrowDown',\n    'ArrowDown',\n    'ArrowLeft',\n    'ArrowRight',\n    'ArrowLeft',\n    'ArrowRight',\n    'KeyB',\n    'KeyA',\n    'Space'\n  ];\n\n  const codeBuffer = [];\n\n  window.onkeyup = (ev) => {\n    codeBuffer.push(ev.code);\n    if (codeBuffer.length > easterCode.length) {\n      codeBuffer.shift();\n    }\n\n    if (codeBuffer.length == easterCode.length) {\n      let valid = true;\n      for (let i = 0; i < easterCode.length; i++) {\n        if (easterCode[i] !== codeBuffer[i]) {\n          valid = false;\n          break;\n        }\n      }\n      if (valid) {\n        easterEgg.set(true);\n      }\n    }\n\n    if (ev.code == 'KeyD') {\n      doggoNeedsPats.set(true);\n    }\n  };\n}\n","<script lang=\"ts\">\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import ModCard from '$lib/components/mods/ModCard.svelte';\n  import Doggo from '$lib/components/general/Doggo.svelte';\n  import { assets } from '$app/paths';\n  import { onMobile, easterEgg, doggoNeedsPats } from '$lib/stores/global';\n  import type { PageData } from './$types';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let data: PageData;\n\n  $: ({ mods } = data);\n\n  export const { t } = getTranslate();\n\n  const gridClasses = '3xl:grid-cols-4 lg:grid-cols-2 grid-cols-1';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Satisfactory Mod Repository\" title=\"Home\" />\n</svelte:head>\n\n<Doggo dogVisible={doggoNeedsPats} />\n\n<div class=\"flex min-h-full flex-col\" style=\"height: calc(100vh - 64px - 3rem)\">\n  <div class=\"mb-4 min-h-[25vh] overflow-hidden\">\n    {#if !$onMobile}\n      <a href=\"https://smm.ficsit.app\" rel=\"noopener\" target=\"_blank\">\n        <div class=\"card h-full\">\n          <div class=\"relative h-full w-full\">\n            <div class=\"banner smm-banner\" />\n            <div class=\"absolute top-0 flex h-full w-full items-center justify-center\">\n              {#if $easterEgg}\n                <img class=\"flipper-1 h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n                <img class=\"flipper-2 h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {:else}\n                <img class=\"flipped h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {/if}\n              <div class=\"text-center\">\n                <div class=\"mb-2 text-4xl\">{$t('home.satisfactory-mod-manager')}</div>\n                <div class=\"mb-4 text-xl\">\n                  Windows - Linux - Epic - Steam\n                  {#if $easterEgg || $doggoNeedsPats}{' - Doggo'}{/if}\n                </div>\n                <div class=\"flex h-1/3 justify-center 2xl:h-1/2\">\n                  <img class=\"h-full\" src={assets + '/images/smm_icon_white.webp'} alt=\"Satisfactory Mod Manager\" />\n                </div>\n              </div>\n              {#if $easterEgg}\n                <img class=\"flipper-3 h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n                <img class=\"flipper-4 h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {:else}\n                <img class=\"h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {/if}\n            </div>\n          </div>\n        </div>\n      </a>\n    {:else}\n      <a href=\"/mods\" class=\"overflow-hidden\">\n        <div class=\"card h-full\">\n          <div class=\"relative h-full w-full\">\n            <div class=\"smm-banner banner\" />\n            <div class=\"absolute top-0 flex h-full w-full items-center justify-end text-center\">\n              <img class=\"h-full\" src={assets + '/images/mods_mobile.webp'} alt=\"Ficsit Minion\" />\n            </div>\n            <div class=\"absolute top-0 flex h-4/5 w-full items-center pl-8\">\n              <div>\n                <div class=\"text-md\">\n                  {$t('home.banner.we-have-over')}\n                  <span class=\"font-bold text-amber-600\">\n                    {#if $mods.fetching || $mods.error}\n                      ...\n                    {:else}\n                      {$mods.data.getMods.count}\n                    {/if}\n                  </span>\n                  {$t('home.banner.mods')}!\n                </div>\n                <div class=\"text-md max-w-prose\">{$t('home.banner.most-are-compatible')}</div>\n              </div>\n            </div>\n            <div class=\"absolute top-0 flex h-full w-full items-end justify-center\">\n              <button class=\"btn h-1/4 w-full px-14 py-3\" style=\"background: #5a7b78; color: white\">\n                {$t('home.banner.take-a-look')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </a>\n    {/if}\n  </div>\n\n  <div class=\"mb-4 grid flex-1 grid-cols-1 gap-4 xl:grid-cols-2\">\n    <a href=\"https://discord.gg/xkVJ73E\" rel=\"noopener\" target=\"_blank\" class=\"min-h-[25vh] overflow-hidden\">\n      <div class=\"card h-full\">\n        <div class=\"relative h-full w-full\">\n          <div class=\"modding-banner banner\" />\n          <div class=\"absolute top-0 flex h-full w-full items-center justify-center\">\n            <img class=\"centered-logo\" src={assets + '/images/sf_modding_logo.webp'} alt=\"Satisfactory Modding Logo\" />\n          </div>\n          <div class=\"absolute bottom-0 w-full px-4 pb-4 text-center text-gray-400 xl:text-left\">\n            <span>{$t('home.banner.community-run-discord')}</span>\n          </div>\n        </div>\n      </div>\n    </a>\n    <a href=\"https://www.satisfactorygame.com/\" rel=\"noopener\" target=\"_blank\" class=\"min-h-[25vh] overflow-hidden\">\n      <div class=\"card h-full\">\n        <div class=\"relative h-full w-full\">\n          <div class=\"css-banner banner\" />\n          <div class=\"absolute top-0 flex h-full w-full items-center justify-center\">\n            <img\n              class=\"centered-logo\"\n              src={assets + '/images/satisfactory_logo_full_color_small.webp'}\n              alt=\"Satisfactory Logo\" />\n          </div>\n          <div class=\"absolute bottom-0 w-full px-4 pb-4 text-center text-gray-300 xl:text-right\">\n            <span>{$t('home.banner.official-website')}</span>\n          </div>\n        </div>\n      </div>\n    </a>\n  </div>\n\n  {#if $mods.fetching}\n    <div class=\"grid {gridClasses} gap-4\">\n      {#each Array(4) as _}\n        <FicsitCard fake />\n      {/each}\n    </div>\n  {:else if $mods.error}\n    <p>{$t('error.oh-no')} {$mods.error.message}</p>\n  {:else}\n    <div class=\"grid {gridClasses} gap-4\">\n      {#each $mods.data.getMods.mods as mod}\n        <ModCard {mod} />\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style lang=\"postcss\">\n  .smm-banner {\n    background-image: url('/images/smm_background.webp');\n    filter: blur(8px);\n    -webkit-filter: blur(8px);\n  }\n\n  .modding-banner {\n    background-image: url('/images/bg_nologo.webp');\n    filter: blur(8px);\n    -webkit-filter: blur(8px);\n  }\n\n  .css-banner {\n    background-image: url('/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp');\n    filter: blur(8px) brightness(0.5);\n    -webkit-filter: blur(8px) brightness(0.5);\n  }\n\n  .banner {\n    height: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  .centered-logo {\n    max-height: 50%;\n    max-width: 60%;\n  }\n\n  .flipped {\n    transform: scaleX(-1);\n  }\n\n  .flipper-1 {\n    animation: 0.11s linear 1s infinite alternate flipper;\n  }\n\n  .flipper-2 {\n    animation: 0.12s linear 1s infinite alternate flipper;\n  }\n\n  .flipper-3 {\n    animation: 0.13s linear 1s infinite alternate flipper;\n  }\n\n  .flipper-4 {\n    animation: 0.14s linear 1s infinite alternate flipper;\n  }\n\n  @keyframes flipper {\n    from {\n      transform: scaleX(-1);\n    }\n    to {\n      transform: scaleX(1);\n    }\n  }\n\n  @media (min-width: 1280px) {\n    .centered-logo {\n      max-height: 15vh;\n    }\n  }\n</style>\n"],"names":["load","async","parent","loadWaitForNoFetch","mods","queryStore","query","GetModsDocument","client","variables","offset","limit","order","Order","Desc","orderBy","ModFields","LastVersionDate","attr","img","img_class_value","null_to_empty","ctx","img_src_value","insert_hydration","target","anchor","dirty","create_if_block","dogVisible","writable","$$props","x","spring","stiffness","damping","precision","y","sprite","assets","last_mouse","clientX","clientY","patting","update_pos","event","$$invalidate","pat","try_pat","isClose","end_pat","actual_mouse_x","setTimeout","set_store_value","$dogVisible","$x","$y","actual_mouse_y","dx","Math","abs","dy","isLookingRight","head_offset","set","mobileQuery","window","matchMedia","onMobile","matches","doggoNeedsPats","easterEgg","addEventListener","data","easterCode","codeBuffer","onkeyup","ev","push","code","length","shift","valid","i","textContent","t2_value","t5_value","t8_value","t10_value","fetching","error","create_if_block_6","a","append_hydration","div8","div7","div0","div1","div5","div4","div2","span","div3","div6","button","set_data","t2","t5","t8","t10","create_if_block_5","if_block1","create_if_block_4","create_if_block_3","t_1_value","getMods","count","t_1","src_url_equal","src","img0","img0_src_value","img1","img1_src_value","each_value_1","ensure_array_like","gridClasses","div","each_blocks","t0_value","message","p","t0","each_value","Array","textContent_1","t9_value","create_if_block_2","div12","div11","a0","span0","a1","div10","div9","span1","current","t9","t","getTranslate","$$subscribe_mods"],"mappings":"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"}