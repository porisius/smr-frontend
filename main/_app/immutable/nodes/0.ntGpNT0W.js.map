{"version":3,"mappings":"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","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","VersionTarget","VersionDependency","updates","Mutation","_result","args","cache","invalidate","__typename","id","guideId","modId","versionId","smlVersionId","authExchange","async","utils","operation","appendHeaders","Authorization","get","userToken","error","message","indexOf","persistedExchange","preferGetForPersistedQueries","fetchExchange","prerender","load","client","chainer","Tolgee","use","FormatSimple","LanguageDetector","DevTools","tolgee","init","defaultNs","defaultLanguage","fallbackLanguage","apiUrl","PUBLIC_TOLGEE_API_URL","apiKey","PUBLIC_TOLGEE_API_KEY","staticData","deCommon","enCommon","frCommon","itCommon","lvCommon","mtCommon","nlCommon","ruCommon","zhHansCommon","zhHantCommon","t0_value","ctx","t2_value","t4_value","insert_hydration","target","button0","anchor","button1","button2","dirty","set_data","t0","t2","t4","p","t1","t1_value","div","current","fetching","div2","append_hydration","h2","div1","div0","signingIn","$$props","t","getTranslate","getContextClient","goTo","service","localStorage","setItem","window","location","href","conicStops","color","start","end","oauthOptions","queryStore","query","GetOAuthOptionsDocument","variables","callback_url","encodeURIComponent","origin","pathname","requestPolicy","$oauthOptions","data","getOAuthOptions","github","google","facebook","toastStore","getToastStore","first","subscribe","token","oneMonth","Date","getTime","cookie","set","domain","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","GetMeDocument","response","console","user","getMe","signInMethods","OAuthGithubDocument","OAuthGoogleDocument","OAuthFacebookDocument","writable","loginModal","derived","val","type","component","ref","LoginModal","props","modalStore","getModalStore","signInMethod","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","trigger","result","background","autohide","session","close","icon","label","attr","a","a_href_value","span0","span1","external","create_if_block","li","item","drawerStore","getDrawerStore","preloadData","click_handler","currentPath","username","t6_value","create_if_block_1","div0_style_value","avatar","t6","button","t9_value","i","nav0","ul0","nav1","ul1","nav2","ul2","li0","li1","span2","each_blocks_1","each_blocks","t9","accessibility","top","bottom","goto","base","click_handler_2","$user","value","$$invalidate","isAdmin","roles","approveMods","approveVersions","editSMLVersions","$t","getAnnouncements","importance","AnnouncementImportance","Warning","announcementrow_changes","announcements","GetAnnouncementsDocument","name","flag","toggle_class","nav","ul","getTolgee","languages","en","de","fr","it","lv","mt","nl","ru","lang","$tolgee","getLanguage","l","changeLanguage","event","placement","closeQuery","k","span","pingLauncher","t8_value","div1_style_value","div4","div3","li2","button3","t8","create_if_block_2","userMenuBox","openSidebar","open","width","script0","script0_src_value","script1","main","aside","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","initializeStores","storePopup","computePosition","autoUpdate","offset","shift","flip","arrow","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","b2","on","cookieconsent","initialise","palette","popup","content","link","dismiss","theme","position","customProtocolCheck","import","__VITE_IS_MODERN__","toLocaleLowerCase","hasLauncher","toString","setContextClient","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/modals/LoginModal.svelte","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/SidebarItem.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/lib/components/general/TranslationDropdown.svelte","../../../../../../src/lib/components/general/TopBar.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null,\n          VersionTarget: () => null,\n          VersionDependency: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => ({\n        addAuthToOperation(operation) {\n          return utils.appendHeaders(operation, {\n            Authorization: get(userToken)\n          });\n        },\n        didAuthError(error) {\n          return error.message.indexOf('user not logged in') >= 0;\n        },\n        async refreshAuth() {\n          // Token cannot be refreshed currently\n        }\n      })),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport { initializeGraphQLClient } from '$lib/core';\nimport { DevTools, FormatSimple, LanguageDetector, Tolgee } from '@tolgee/svelte';\nimport { browser } from '$app/environment';\nimport { PUBLIC_TOLGEE_API_KEY, PUBLIC_TOLGEE_API_URL } from '$env/static/public';\n\nimport deCommon from '../i18n/common/de.json';\nimport enCommon from '../i18n/common/en.json';\nimport frCommon from '../i18n/common/fr.json';\nimport itCommon from '../i18n/common/it.json';\nimport lvCommon from '../i18n/common/lv.json';\nimport mtCommon from '../i18n/common/mt.json';\nimport nlCommon from '../i18n/common/nl.json';\nimport ruCommon from '../i18n/common/ru.json';\nimport zhHansCommon from '../i18n/common/zh-Hans.json';\nimport zhHantCommon from '../i18n/common/zh-Hant.json';\n\nexport const prerender = 'auto';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n\n  let chainer = Tolgee().use(FormatSimple());\n\n  if (browser) {\n    chainer = chainer.use(LanguageDetector()).use(DevTools());\n  }\n\n  const tolgee = chainer.init({\n    defaultNs: 'common',\n\n    defaultLanguage: 'en',\n    fallbackLanguage: 'en',\n\n    apiUrl: browser ? PUBLIC_TOLGEE_API_URL : undefined,\n    apiKey: browser ? PUBLIC_TOLGEE_API_KEY : undefined,\n\n    staticData: {\n      'de:common': deCommon,\n      'en:common': enCommon,\n      'fr:common': frCommon,\n      'it:common': itCommon,\n      'lv:common': lvCommon,\n      'mt:common': mtCommon,\n      'nl:common': nlCommon,\n      'ru:common': ruCommon,\n      'zh-Hans:common': zhHansCommon,\n      'zh-Hant:common': zhHantCommon\n    }\n  });\n\n  if (!browser) {\n    await tolgee.run();\n  }\n\n  return {\n    client,\n    tolgee\n  };\n};\n","<script lang=\"ts\">\n  import { getTranslate } from '@tolgee/svelte';\n  import { ConicGradient, type ConicStop } from '@skeletonlabs/skeleton';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { GetOAuthOptionsDocument } from '$lib/generated';\n  import { browser } from '$app/environment';\n\n  export let signingIn = false;\n\n  export const { t } = getTranslate();\n\n  const client = getContextClient();\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    window.location.href = url;\n  };\n\n  const conicStops: ConicStop[] = [\n    { color: 'transparent', start: 0, end: 25 },\n    { color: 'rgb(var(--color-primary-500))', start: 75, end: 100 }\n  ];\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n</script>\n\n<div class=\"card flex flex-col gap-2 p-4\">\n  <h2 class=\"text-2xl\">{$t('user.sign-in')} / {$t('user.sign-up')}</h2>\n  <div>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>{$t('user.logging-in')}...</p>\n        <div class=\"flex justify-center\">\n          <ConicGradient stops={conicStops} spin>Loading</ConicGradient>\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>{$t('loading')}...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <button\n          class=\"variant-ghost-primary btn\"\n          on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          {$t('login-dialog.sign-in-with-github')}\n        </button>\n        <button\n          class=\"variant-ghost-primary btn\"\n          on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          {$t('login-dialog.sign-in-with-google')}\n        </button>\n        <button\n          class=\"variant-ghost-primary btn\"\n          on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          {$t('login-dialog.sign-in-with-facebook')}\n        </button>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {\n    GetMeDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore, getToastStore, type ModalSettings } from '@skeletonlabs/skeleton';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n  import { derived, get, writable } from 'svelte/store';\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  export const { t } = getTranslate();\n\n  if (browser) {\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        client\n          .query(GetMeDocument, {}, { requestPolicy: 'network-only' })\n          .toPromise()\n          .then((response) => {\n            if (response.error) {\n              console.error(response.error.message);\n            } else if (response.data) {\n              user.set(response.data.getMe);\n            }\n          });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  const signingIn = writable(false);\n  const loginModal = derived(\n    signingIn,\n    (val) =>\n      ({\n        type: 'component',\n        component: {\n          ref: LoginModal,\n          props: {\n            signingIn: val\n          }\n        }\n      }) satisfies ModalSettings\n  );\n\n  const modalStore = getModalStore();\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn.set(true);\n      modalStore.trigger(get(loginModal));\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            toastStore.trigger({\n              message: 'Error logging in: ' + result.error.message,\n              background: 'variant-filled-error',\n              autohide: false\n            });\n          } else {\n            userToken.set(result.data.session.token);\n            modalStore.close();\n          }\n        })\n        .catch()\n        .then(() => signingIn.set(false));\n    }\n  }\n</script>\n","<script lang=\"ts\">\n  import { preloadData } from '$app/navigation';\n  import { page } from '$app/stores';\n  import type { SidebarItemData } from '$lib/utils/sidebarItemData';\n  import { getDrawerStore } from '@skeletonlabs/skeleton';\n\n  export let item: SidebarItemData;\n\n  $: currentPath = $page.url.pathname;\n\n  const drawerStore = getDrawerStore();\n</script>\n\n<li>\n  {#if !item.external}\n    <a\n      href={item.url}\n      class:bg-primary-active-token={currentPath === item.url}\n      on:mouseover={() => preloadData(item.url)}\n      on:click={() => drawerStore.close()}\n      on:focus={() => preloadData(item.url)}>\n      <span class=\"material-icons\">{item.icon}</span>\n      <span class=\"flex-auto\">{item.label}</span>\n    </a>\n  {:else}\n    <a href={item.url} target=\"_blank\" rel=\"noopener\">\n      <span class=\"material-icons\">{item.icon}</span>\n      <span class=\"flex-auto\">{item.label}</span>\n    </a>\n  {/if}\n</li>\n","<script lang=\"ts\">\n  import { getDrawerStore, getModalStore, SlideToggle } from '@skeletonlabs/skeleton';\n  import { goto } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { user, userToken } from '$lib/stores/user';\n  import { getTranslate } from '@tolgee/svelte';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n  import type { SidebarItemData } from '$lib/utils/sidebarItemData';\n  import SidebarItem from './SidebarItem.svelte';\n\n  export let accessibility: boolean;\n\n  export const { t } = getTranslate();\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  let top: SidebarItemData[];\n  $: top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: $t('sidebar.home')\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: $t('sidebar.mods')\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: $t('sidebar.guides')\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: $t('sidebar.sml-versions')\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: $t('sidebar.tools')\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: $t('discord'),\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: $t('sidebar.docs'),\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: $t('sidebar.forums'),\n      external: true\n    }\n  ];\n\n  let bottom: SidebarItemData[];\n  $: bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: $t('sidebar.help')\n    },\n    {\n      url: base + '/content-policy',\n      icon: 'verified_user',\n      label: $t('content-policy')\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: $t('sidebar.privacy-policy')\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: $t('sidebar.tos')\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: $t('sidebar.api')\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: $t('sidebar.github'),\n      external: true\n    }\n  ];\n\n  const modalStore = getModalStore();\n  const drawerStore = getDrawerStore();\n</script>\n\n<div class=\"flex h-full max-w-xl flex-col justify-between overflow-y-auto p-4\">\n  <div class=\"flex h-full max-w-xl flex-col gap-4\">\n    <nav class=\"list-nav xl:hidden\">\n      <ul>\n        {#if $user === null}\n          <button\n            on:click={() => {\n              modalStore.trigger({\n                type: 'component',\n                component: {\n                  ref: LoginModal\n                }\n              });\n              drawerStore.close();\n            }}\n            class=\"w-full\">\n            <span class=\"material-icons\">login</span>\n            <span>{$t('user.sign-in')}</span>\n          </button>\n        {:else}\n          {#if isAdmin}\n            <button\n              on:click={() => {\n                goto(base + '/admin');\n                drawerStore.close();\n              }}\n              class=\"w-full\">\n              <span class=\"material-icons\">admin_panel_settings</span>\n              <span>Admin</span>\n            </button>\n          {/if}\n          <button class=\"grid w-full grid-flow-col\" on:click={() => goto(base + '/user/' + $user.id)}>\n            <div class=\"h-7 w-7 rounded-full bg-cover\" style={`background-image: url(\"${$user.avatar}\")`} />\n            <div>{$user.username}</div>\n          </button>\n\n          <button\n            on:click={() => {\n              userToken.set(null);\n              drawerStore.close();\n            }}\n            class=\"w-full\">\n            <span class=\"material-icons\">logout</span>\n            <span>{$t('user.logout')}</span>\n          </button>\n        {/if}\n      </ul>\n    </nav>\n\n    <div class=\"xl:hidden\">\n      <hr />\n    </div>\n\n    <nav class=\"list-nav\">\n      <ul>\n        {#each top as item}\n          <SidebarItem {item} />\n        {/each}\n      </ul>\n    </nav>\n  </div>\n\n  <nav class=\"list-nav\">\n    <ul>\n      {#each bottom as item}\n        <SidebarItem {item} />\n      {/each}\n\n      <li class=\"xl:hidden\">\n        <a target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n          <span class=\"material-icons\">file_download</span>\n          <span class=\"flex-auto\">{$t('sidebar.mod-manager')}</span>\n        </a>\n      </li>\n\n      <li class=\"flex flex-row items-center justify-center gap-4 px-3 pt-2\">\n        <SlideToggle\n          bind:checked={accessibility}\n          aria-label=\"Accessibility Font\"\n          name=\"accessibility_font\"\n          size=\"sm\"\n          active=\"bg-primary-500\" />\n        <span>{$t('sidebar.accessibility-font')}</span>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"mb-3 ml-3 mr-3 mt-3 flex max-h-96 flex-col gap-2 overflow-y-auto xl:mb-0 xl:ml-0\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { getTolgee, getTranslate } from '@tolgee/svelte';\n  import { writable } from 'svelte/store';\n  import { type PopupSettings, popup } from '@skeletonlabs/skeleton';\n  import { browser } from '$app/environment';\n\n  const tolgee = getTolgee(['language']);\n\n  export const { t } = getTranslate();\n\n  const languages = {\n    en: {\n      name: 'English',\n      flag: '🇺🇳'\n    },\n    de: {\n      name: 'Deutsch',\n      flag: '🇩🇪'\n    },\n    fr: {\n      name: 'Français',\n      flag: '🇫🇷'\n    },\n    it: {\n      name: 'Italiano',\n      flag: '🇮🇹'\n    },\n    lv: {\n      name: 'Latviešu',\n      flag: '🇱🇻'\n    },\n    mt: {\n      name: 'Malti',\n      flag: '🇲🇹'\n    },\n    nl: {\n      name: 'Nederlands',\n      flag: '🇳🇱'\n    },\n    ru: {\n      name: 'Pусский',\n      flag: '🇷🇺'\n    },\n    'zh-Hans': {\n      name: '简体中文',\n      flag: '🇨🇳'\n    },\n    'zh-Hant': {\n      name: '繁體中文',\n      flag: '🇹🇼'\n    }\n  } as const;\n\n  const lang = writable<string>((browser && localStorage.getItem('language')) || $tolgee.getLanguage());\n  lang.subscribe((l) => {\n    $tolgee.changeLanguage(l);\n    if (browser) {\n      localStorage.setItem('language', l);\n    }\n  });\n\n  const languageMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'languageMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n</script>\n\n<button class=\"variant-ghost-primary btn btn-sm grid grid-flow-col\" use:popup={languageMenuBox}>\n  <span>{languages[$lang].name}</span>\n  <span class=\"text-xl\">{languages[$lang].flag}</span>\n</button>\n\n<div class=\"card w-48 py-2 shadow-xl\" data-popup=\"languageMenuBox\">\n  <nav class=\"list-nav\">\n    <ul>\n      {#each Object.entries(languages) as [k, v]}\n        <li class:bg-primary-active-token={$lang === k}>\n          <button class=\"w-full\" on:click={() => lang.set(k)}>\n            <span>{v.name}</span>\n            <span class=\"text-xl text-white\">{v.flag}</span>\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <div class=\"bg-surface-100-800-token arrow\" />\n</div>\n","<script lang=\"ts\">\n  import { hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { base } from '$app/paths';\n  import TranslationDropdown from '$lib/components/general/TranslationDropdown.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { AppBar, type PopupSettings, popup, getDrawerStore, getModalStore } from '@skeletonlabs/skeleton';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  export const { t } = getTranslate();\n\n  const drawerStore = getDrawerStore();\n\n  const userMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'userMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n\n  const modalStore = getModalStore();\n\n  const openSidebar = () => {\n    drawerStore.open({\n      width: 'w-[280px]'\n    });\n  };\n</script>\n\n<AppBar variant=\"static\">\n  <svelte:fragment slot=\"lead\">\n    <button class=\"material-icons btn-sm xl:hidden\" on:click={openSidebar}>menu</button>\n    <span class=\"text-lg\">{$t('top-bar.title')}</span>\n  </svelte:fragment>\n\n  <svelte:fragment slot=\"trail\">\n    <div class=\"hidden xl:flex xl:gap-3\">\n      <TranslationDropdown />\n\n      {#if $hasLauncher}\n        <button class=\"variant-ghost-primary btn btn-sm\" on:click={pingLauncher}>\n          <span>Open Mod Manager</span>\n          <span class=\"material-icons\">launch</span>\n        </button>\n      {:else}\n        <a class=\"variant-ghost-primary btn btn-sm\" target=\"_blank\" rel=\"noopener\" href=\"https://smm.ficsit.app\">\n          <span>Download the Mod Manager</span>\n          <span class=\"material-icons\">file_download</span>\n        </a>\n      {/if}\n\n      {#if $user === null}\n        <button\n          class=\"variant-ghost-primary btn btn-sm\"\n          on:click={() =>\n            modalStore.trigger({\n              type: 'component',\n              component: {\n                ref: LoginModal\n              }\n            })}>\n          <span>{$t('user.sign-in')}</span>\n          <span class=\"material-icons\">login</span>\n        </button>\n      {:else}\n        {#if isAdmin}\n          <button class=\"variant-ghost-primary btn btn-sm\" on:click={() => goto(base + '/admin')}>\n            <span>Admin</span>\n            <span class=\"material-icons\">admin_panel_settings</span>\n          </button>\n        {/if}\n\n        <div>\n          <button class=\"variant-ghost-primary btn btn-sm grid grid-flow-col\" use:popup={userMenuBox}>\n            <div>{$user.username}</div>\n            <div class=\"h-7 w-7 rounded-full bg-cover\" style={`background-image: url(\"${$user.avatar}\")`} />\n          </button>\n\n          <div class=\"card w-48 py-2 shadow-xl\" data-popup=\"userMenuBox\">\n            <nav class=\"list-nav\">\n              <ul>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n                    <span>{$t('top-bar.user.profile')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/settings')}>\n                    <span>{$t('top-bar.user.settings')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => userToken.set(null)}>\n                    <span>{$t('user.logout')}</span>\n                  </button>\n                </li>\n              </ul>\n            </nav>\n            <div class=\"bg-surface-100-800-token arrow\" />\n          </div>\n        </div>\n      {/if}\n    </div>\n  </svelte:fragment>\n</AppBar>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG } from '$env/static/public';\n  import type { LayoutData } from './$types';\n  import { TolgeeProvider } from '@tolgee/svelte';\n  import { initializeStores, AppShell, Modal, storePopup, Drawer, Toast } from '@skeletonlabs/skeleton';\n  import TopBar from '$lib/components/general/TopBar.svelte';\n  import './_global.postcss';\n  import { computePosition, autoUpdate, offset, shift, flip, arrow } from '@floating-ui/dom';\n\n  export let data: LayoutData;\n\n  const { client, tolgee } = data;\n\n  initializeStores();\n  storePopup.set({ computePosition, autoUpdate, offset, shift, flip, arrow });\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      tolgee.on('initialLoad', () => {\n        if ('cookieconsent' in window) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          // cspell:ignore initialise\n          window.cookieconsent.initialise({\n            palette: {\n              popup: {\n                background: '#000'\n              },\n              button: {\n                background: '#f1d600'\n              }\n            },\n            content: {\n              message: tolgee.t('cookieconsent.message'),\n              link: tolgee.t('cookieconsent.link'),\n              dismiss: tolgee.t('cookieconsent.dismiss')\n            },\n            theme: 'edgeless',\n            position: 'bottom-right'\n          });\n        }\n      });\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<TolgeeProvider {tolgee}>\n  <Toast />\n  <Modal />\n\n  <Drawer>\n    <Sidebar bind:accessibility />\n  </Drawer>\n\n  <AppShell>\n    <svelte:fragment slot=\"header\">\n      <TopBar />\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"sidebarLeft\">\n      <aside class=\"hidden h-full xl:block\">\n        <Sidebar bind:accessibility />\n      </aside>\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"pageHeader\">\n      <AnnouncementHeader />\n    </svelte:fragment>\n\n    <div class=\"app-content w-full overflow-auto\">\n      <main class=\"main-content min-h-100% xl:py-6 xl:pr-3\">\n        <slot />\n      </main>\n    </div>\n  </AppShell>\n\n  <LoginDialog />\n</TolgeeProvider>\n"],"file":"_app/immutable/nodes/0.ntGpNT0W.js"}