{"version":3,"file":"9.2901d737.js","sources":["../../../../../../src/routes/admin/unapproved-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveVersionDocument, DenyVersionDocument, GetUnapprovedVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { API_REST } from '$lib/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  let page = 1;\n\n  $: versions = queryStore({\n    query: GetUnapprovedVersionsDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  let totalVersions = 0;\n  $: if ($versions?.data?.getUnapprovedVersions?.count) {\n    totalVersions = $versions.data.getUnapprovedVersions.count;\n  }\n\n  const approveVersion = (versionId: string) => {\n    client\n      .mutation(ApproveVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n\n  const denyVersion = (versionId: string) => {\n    client\n      .mutation(DenyVersionDocument, { versionId })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mod versions\" title=\"Admin: Unapproved Versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} bind:currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Mod</Cell>\n          <Cell>Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getUnapprovedVersions.versions as version}\n          <Row>\n            <Cell>{version.mod.name}</Cell>\n            <Cell>{version.version}</Cell>\n            <Cell>{prettyDate(version.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => approveVersion(version.id)}>Approve</Button>\n                <Button variant=\"outlined\" on:click={() => denyVersion(version.id)}>Deny</Button>\n                <Button\n                  variant=\"outlined\"\n                  href={API_REST + '/mod/' + version.mod_id + '/versions/' + version.id + '/download'}>\n                  Download\n                </Button>\n                <Button variant=\"outlined\" href={base + '/mod/' + version.mod_id + '/version/' + version.id}>\n                  View\n                </Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <PageControls totalPages={Math.ceil(totalVersions / perPage)} bind:currentPage={page} />\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration","target","div1","anchor","append_hydration","div0","dirty","pagecontrols_changes","mod","name","set_data","t","t_value","version","prettyDate","created_at","href","API_REST","mod_id","id","base","div","button2_changes","each_value","data","getUnapprovedVersions","versions","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_3","create_if_block","client","getContextClient","page","totalVersions","approveVersion","versionId","mutation","ApproveVersionDocument","toPromise","then","pause","resume","denyVersion","DenyVersionDocument","value","$$subscribe_versions","$$invalidate","queryStore","query","GetUnapprovedVersionsDocument","variables","filter","offset","limit","$versions","count"],"mappings":"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"}