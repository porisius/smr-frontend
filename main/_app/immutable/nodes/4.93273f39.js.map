{"version":3,"file":"4.93273f39.js","sources":["../../../../../../src/routes/admin/sml-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { DeleteSmlVersionDocument, GetSmlVersionsAdminDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  let page = 1;\n\n  $: versions = queryStore({\n    query: GetSmlVersionsAdminDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  let totalVersions = 0;\n  $: if ($versions?.data?.getSMLVersions?.count) {\n    totalVersions = $versions.data.getSMLVersions.count;\n  }\n\n  const deleteVersion = (smlVersionID: string) => {\n    client\n      .mutation(DeleteSmlVersionDocument, { smlVersionID })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"SML Versions\" title=\"Admin: SML Versions\" />\n</svelte:head>\n\n<div class=\"mb-5 ml-auto flex justify-between\">\n  <Button variant=\"outlined\" href=\"{base}/admin/sml-versions/new\">New SML Version</Button>\n\n  {#if totalVersions}\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} bind:currentPage={page} />\n    </div>\n  {/if}\n</div>\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Satisfactory Version</Cell>\n          <Cell>Bootstrap Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{version.bootstrap_version}</Cell>\n            <Cell>{prettyDate(version.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => deleteVersion(version.id)}>Delete</Button>\n                <Button variant=\"outlined\" href={base + '/admin/sml-versions/' + version.id + '/edit'}>Edit</Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} bind:currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration","target","div","anchor","dirty","pagecontrols_changes","t_value","version","set_data","t","stability","satisfactory_version","bootstrap_version","prettyDate","created_at","href","base","id","button1_changes","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","div1","append_hydration","div0","create_if_block_3","create_if_block","client","getContextClient","page","totalVersions","deleteVersion","smlVersionID","mutation","DeleteSmlVersionDocument","toPromise","then","versions","pause","resume","value","$$subscribe_versions","$$invalidate","queryStore","query","GetSmlVersionsAdminDocument","variables","filter","offset","limit","$versions","count"],"mappings":"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"}