{"version":3,"file":"27.bb644025.js","sources":["../../../../../../src/routes/sml-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { GetSmlVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  let expandedVersions = new Set<string>();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  let page = 1;\n\n  // TODO Pagination\n  $: versions = queryStore({\n    query: GetSmlVersionsDocument,\n    client,\n    variables: {\n      offset: (page - 1) * perPage,\n      limit: perPage\n    }\n  });\n\n  let totalVersions = 0;\n  $: if ($versions?.data?.getSMLVersions?.count) {\n    totalVersions = $versions.data.getSMLVersions.count;\n  }\n\n  const toggleRow = (versionId: string) => {\n    if (expandedVersions.has(versionId)) {\n      expandedVersions.delete(versionId);\n    } else {\n      expandedVersions.add(versionId);\n    }\n    expandedVersions = expandedVersions;\n  };\n</script>\n\n<svelte:head>\n  <title>SML Versions - SMR</title>\n  <MetaDescriptors description=\"Versions of the Satisfactory Mod Loader\" title=\"Satisfactory Mod Loader versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} bind:currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Game Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row on:click={() => toggleRow(version.id)}>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{prettyDate(version.date)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" href={version.link}>View</Button>\n              </div>\n            </Cell>\n          </Row>\n\n          {#if expandedVersions.has(version.id)}\n            <Row>\n              <Cell colspan={5} class=\"p-2 markdown-content\">\n                {#await markdown(version.changelog) then changelogRendered}\n                  {@html changelogRendered}\n                {/await}\n              </Cell>\n            </Row>\n          {/if}\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} bind:currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration","target","div1","anchor","append_hydration","div0","dirty","pagecontrols_changes","t_value","version","set_data","t","stability","satisfactory_version","prettyDate","date","href","link","div","button_changes","html_tag","p","raw_value","markdown","changelog","info","handle_promise","promise","show_if","has","id","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_4","create_if_block","client","getContextClient","expandedVersions","Set","page","totalVersions","toggleRow","versionId","delete","add","value","$$subscribe_versions","$$invalidate","versions","queryStore","query","GetSmlVersionsDocument","variables","offset","limit","$versions","count"],"mappings":"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"}