{"version":3,"file":"8.f365fd85.js","sources":["../../../../../../src/routes/admin/unapproved-mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveModDocument, DenyModDocument, GetUnapprovedModsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  let page = 1;\n\n  $: mods = queryStore({\n    query: GetUnapprovedModsDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  let totalMods = 0;\n  $: if ($mods?.data?.getUnapprovedMods?.count) {\n    totalMods = $mods.data.getUnapprovedMods.count;\n  }\n\n  const approveMod = (modId: string) => {\n    client\n      .mutation(ApproveModDocument, { modId })\n      .toPromise()\n      .then(() => {\n        mods.pause();\n        mods.resume();\n      });\n  };\n\n  const denyMod = (modId: string) => {\n    client\n      .mutation(DenyModDocument, { modId })\n      .toPromise()\n      .then(() => {\n        mods.pause();\n        mods.resume();\n      });\n  };\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mods\" title=\"Admin: Unapproved Mods\" />\n</svelte:head>\n\n{#if totalMods}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalMods / perPage)} bind:currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $mods.fetching}\n    <Content>Loading...</Content>\n  {:else if $mods.error}\n    <Content>Oh no... {$mods.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Mod</Cell>\n          <Cell>Description</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $mods.data.getUnapprovedMods.mods as mod}\n          <Row>\n            <Cell>{mod.name}</Cell>\n            <Cell>{mod.short_description}</Cell>\n            <Cell>{prettyDate(mod.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => approveMod(mod.id)}>Approve</Button>\n                <Button variant=\"outlined\" on:click={() => denyMod(mod.id)}>Deny</Button>\n                <Button variant=\"outlined\" href={base + '/mod/' + mod.id}>View</Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalMods}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalMods / perPage)} bind:currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration","target","div1","anchor","append_hydration","div0","dirty","pagecontrols_changes","t_value","name","set_data","t","short_description","prettyDate","created_at","href","base","id","div","button2_changes","each_value","data","getUnapprovedMods","mods","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_3","create_if_block","client","getContextClient","page","totalMods","approveMod","modId","mutation","ApproveModDocument","toPromise","then","pause","resume","denyMod","DenyModDocument","value","mod","$$subscribe_mods","$$invalidate","queryStore","query","GetUnapprovedModsDocument","variables","filter","offset","limit","$mods","count"],"mappings":"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"}