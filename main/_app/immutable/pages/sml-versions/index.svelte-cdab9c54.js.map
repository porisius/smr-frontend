{"version":3,"file":"index.svelte-cdab9c54.js","sources":["../../../../../../../src/routes/sml-versions/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { GetSmlVersionsDocument } from '$lib/generated';\n  import { operationStore, query } from '@urql/svelte';\n  import { writable } from 'svelte/store';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  let expandedVersions = new Set<string>();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  // TODO Pagination\n  const versions = operationStore(GetSmlVersionsDocument, { offset: 0, limit: perPage });\n\n  const page = writable(1);\n  let totalVersions: number;\n\n  page.subscribe((p) => {\n    $versions.variables.offset = (p - 1) * perPage;\n    $versions.reexecute();\n  });\n\n  $: totalVersions = $versions?.data?.getSMLVersions?.count;\n\n  query(versions);\n\n  const toggleRow = (versionId: string) => {\n    if (expandedVersions.has(versionId)) {\n      expandedVersions.delete(versionId);\n    } else {\n      expandedVersions.add(versionId);\n    }\n    expandedVersions = expandedVersions;\n  };\n</script>\n\n<svelte:head>\n  <title>SML Versions - SMR</title>\n  <MetaDescriptors description=\"Versions of the Satisfactory Mod Loader\" title=\"Satisfactory Mod Loader versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Game Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row on:click={() => toggleRow(version.id)}>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{prettyDate(version.date)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" href={version.link}>View</Button>\n              </div>\n            </Cell>\n          </Row>\n\n          {#if expandedVersions.has(version.id)}\n            <Row>\n              <Cell colspan={5} class=\"p-2 markdown-content\">\n                {#await markdown(version.changelog) then changelogRendered}\n                  {@html changelogRendered}\n                {/await}\n              </Cell>\n            </Row>\n          {/if}\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration","target","div1","anchor","append_hydration","div0","dirty","pagecontrols_changes","t_value","version","set_data","t","stability","satisfactory_version","prettyDate","date","href","link","div","button_changes","html_tag","p","raw_value","markdown","changelog","info","handle_promise","promise","show_if","has","id","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_4","create_if_block","expandedVersions","Set","versions","operationStore","GetSmlVersionsDocument","offset","limit","page","writable","totalVersions","subscribe","$versions","variables","reexecute","query","toggleRow","versionId","delete","add","$$invalidate","count"],"mappings":"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"}