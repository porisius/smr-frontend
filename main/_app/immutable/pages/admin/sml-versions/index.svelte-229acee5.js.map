{"version":3,"file":"index.svelte-229acee5.js","sources":["../../../../../../../../src/routes/admin/sml-versions/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { DeleteSmlVersionDocument, GetSmlVersionsAdminDocument } from '$lib/generated';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { writable } from 'svelte/store';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const versions = operationStore(GetSmlVersionsAdminDocument, {\n    filter: {\n      offset: 0,\n      limit: perPage\n    }\n  });\n\n  const page = writable(1);\n  let totalVersions: number;\n\n  page.subscribe((p) => ($versions.variables.filter.offset = (p - 1) * perPage));\n\n  $: totalVersions = $versions?.data?.getSMLVersions?.count;\n\n  const deleteVersionMut = mutation({\n    query: DeleteSmlVersionDocument\n  });\n\n  const deleteVersion = (smlVersionID: string) => {\n    deleteVersionMut({ smlVersionID }).then(() => {\n      versions.reexecute();\n    });\n  };\n\n  query(versions);\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"SML Versions\" title=\"Admin: SML Versions\" />\n</svelte:head>\n\n<div class=\"mb-5 ml-auto flex justify-between\">\n  <Button variant=\"outlined\" href=\"{base}/admin/sml-versions/new\">New SML Version</Button>\n\n  {#if totalVersions}\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  {/if}\n</div>\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Satisfactory Version</Cell>\n          <Cell>Bootstrap Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{version.bootstrap_version}</Cell>\n            <Cell>{prettyDate(version.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => deleteVersion(version.id)}>Delete</Button>\n                <Button variant=\"outlined\" href={base + '/admin/sml-versions/' + version.id + '/edit'}>Edit</Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration","target","div","anchor","dirty","pagecontrols_changes","t_value","version","set_data","t","stability","satisfactory_version","bootstrap_version","prettyDate","created_at","href","base","id","button1_changes","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","div1","append_hydration","div0","create_if_block_3","create_if_block","versions","operationStore","GetSmlVersionsAdminDocument","filter","offset","limit","page","writable","totalVersions","subscribe","p","set_store_value","$versions","variables","deleteVersionMut","mutation","query","DeleteSmlVersionDocument","deleteVersion","smlVersionID","then","reexecute","$$invalidate","count"],"mappings":"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"}