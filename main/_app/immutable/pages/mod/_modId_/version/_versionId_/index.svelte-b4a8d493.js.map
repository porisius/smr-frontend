{"version":3,"file":"index.svelte-b4a8d493.js","sources":["../../../../../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../../../../../src/routes/mod/[modId]/version/[versionId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { markdown } from '$lib/utils/markdown';\n  import Card, { Content } from '@smui/card';\n\n  export let changelog!: string;\n</script>\n\n<Card class=\"h-fit\">\n  <Content>\n    <div class=\"markdown-content\">\n      {#await markdown(changelog) then changelogRendered}\n        <p>{@html changelogRendered}</p>\n      {/await}\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n\n  export let version!: Pick<Version, 'created_at' | 'sml_version' | 'size' | 'stability' | 'downloads' | 'hash'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg break-words\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>Downloads:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>SML Version:</strong> {version.sml_version}</span><br />\n      <span><strong>Stability:</strong> {version.stability}</span><br />\n      <span><strong>Size:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>Hash:</strong> {version.hash}</span>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetModVersionDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n\n  const versionQ = operationStore(GetModVersionDocument, { version: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    versionQ.variables.version = input.params.versionId;\n    return loadWaitForNoFetch({\n      version: versionQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation } from '@urql/svelte';\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import { API_REST } from '$lib/core';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { writable } from 'svelte/store';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import Button, { Label, Icon } from '@smui/button';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import { installMod } from '$lib/stores/launcher';\n\n  export let modId!: string;\n  export let versionId!: string;\n  export let version: typeof versionQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const deleteVersion = mutation({\n    query: DeleteVersionDocument\n  });\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteVersionFn = () => {\n    deleteVersion({ versionId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting version: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/mod/' + modId);\n      }\n    });\n  };\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            Edit\n          </Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n\n        <Button variant=\"outlined\" href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}>\n          Download\n        </Button>\n        <Button variant=\"outlined\" on:click={() => installMod(version.data.getVersion.mod.mod_reference)}>\n          <Label>Install</Label>\n          <Icon class=\"material-icons\">download</Icon>\n        </Button>\n\n        <Button variant=\"outlined\" href={base + '/mod/' + modId}>\n          <Label>Mod</Label>\n          <Icon class=\"material-icons\">extension</Icon>\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} />\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title id=\"simple-title\">Delete Version?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this version</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteVersionFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["ctx","insert_hydration","target","p","anchor","innerHTML","raw_value","handle_promise","promise","markdown","info","div","dirty","changelog","$$props","prettyDate","created_at","prettyNumber","downloads","t12_value","sml_version","t16_value","stability","prettyBytes","size","t24_value","hash","append_hydration","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","br4","span5","strong5","set_data","t4","t4_value","t8","t8_value","t12","t16","t20","t20_value","t24","version","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","t2_value","create_if_block_4","API_REST","base","create_if_block_3","div4","div1","h1","div0","div3","div2","current","t0","t2","versiondescription_changes","error","message","t1","t1_value","span","fetching","create_if_block_5","versionQ","operationStore","GetModVersionDocument","undefined","load","paramsToProps","async","variables","input","params","versionId","loadWaitForNoFetch","modId","errorMessage","errorToast","deleteVersion","mutation","query","DeleteVersionDocument","deleteDialogOpen","writable","deleteVersionFn","then","value","console","$$invalidate","goto","set","installMod","mod_reference","$deleteDialogOpen","canUserEdit","$user","roles","deleteContent","$version","authors","findIndex","author","user_id","id"],"mappings":"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"}