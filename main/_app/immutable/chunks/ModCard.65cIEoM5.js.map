{"version":3,"file":"ModCard.65cIEoM5.js","sources":["../../../../../../src/lib/components/mods/compatibility/CompatibilityButton.svelte","../../../../../../src/lib/components/mods/ModCard.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityIcon from './CompatibilityIcon.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore } from '@skeletonlabs/skeleton';\n  import CompatibilityModal from '$lib/modals/CompatibilityModal.svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n\n  const modalStore = getModalStore();\n  const openCompatibility = () => {\n    modalStore.trigger({\n      type: 'component',\n      component: {\n        ref: CompatibilityModal,\n        props: {\n          compatibility\n        }\n      }\n    });\n  };\n</script>\n\n<button\n  class=\"variant-soft-surface btn m-0 min-w-0 px-1 py-0 text-xs\"\n  title={$t('compatibility-info.button')}\n  on:click={openCompatibility}>\n  <CompatibilityIcon compatibility={compatibility?.EA} />\n  <CompatibilityIcon compatibility={compatibility?.EXP} EXP={true} />\n</button>\n","<script lang=\"ts\">\n  import type { Mod, Maybe, Version } from '$lib/generated';\n  import { base } from '$app/paths';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyNumber } from '$lib/utils/formatting';\n  import OutdatedBanner from '$lib/components/mods/compatibility/OutdatedBanner.svelte';\n  import CompatibilityButton from '$lib/components/mods/compatibility/CompatibilityButton.svelte';\n  import TagList from '$lib/components/utils/TagList.svelte';\n\n  export let mod: Pick<\n    Mod,\n    'id' | 'mod_reference' | 'name' | 'logo' | 'views' | 'downloads' | 'short_description' | 'compatibility' | 'tags'\n  > & {\n    latestVersions: {\n      alpha?: Maybe<Pick<Version, 'id' | 'sml_version'>>;\n      beta?: Maybe<Pick<Version, 'id' | 'sml_version'>>;\n      release?: Maybe<Pick<Version, 'id' | 'sml_version'>>;\n    };\n  };\n\n  $: installable =\n    'latestVersions' in mod ? mod.latestVersions.alpha || mod.latestVersions.beta || mod.latestVersions.release : false;\n</script>\n\n<FicsitCard\n  name={mod.name}\n  link={base + '/mod/' + mod.mod_reference}\n  logo={mod.logo}\n  description={mod.short_description}>\n  <div slot=\"stats\" class=\"flex flex-row items-center gap-2\">\n    <span><span class=\"material-icons mr-1 align-middle text-sm\">visibility</span>{prettyNumber(mod.views)}</span>\n    <span><span class=\"material-icons mr-1 align-middle text-sm\">download</span>{prettyNumber(mod.downloads)}</span>\n    <CompatibilityButton compatibility={mod.compatibility} />\n  </div>\n  <div slot=\"tags\">\n    <TagList tags={mod.tags} />\n  </div>\n  <svelte:fragment slot=\"actions\">\n    {#if installable}\n      <button class=\"variant-soft-surface btn btn-sm\" title=\"Install\" on:click={() => installMod(mod.mod_reference)}>\n        <span class=\"material-icons\">download</span>\n      </button>\n    {/if}\n  </svelte:fragment>\n  <div slot=\"outer\">\n    <OutdatedBanner compatibility={mod.compatibility} />\n  </div>\n</FicsitCard>\n"],"names":["compatibility","ctx","EA","EXP","attr","button","button_title_value","insert_hydration","target","anchor","dirty","compatibilityicon0_changes","compatibilityicon1_changes","current","$$props","t","getTranslate","modalStore","getModalStore","openCompatibility","trigger","type","component","ref","CompatibilityModal","props","prettyNumber","views","downloads","div","append_hydration","span1","span0","span3","span2","set_data","t1","t1_value","t4","t4_value","compatibilitybutton_changes","taglist","TagList","tags","taglist_changes","create_if_block","outdatedbanner_changes","name","link","base","mod_reference","logo","description","short_description","ficsitcard_changes","mod","installMod","$$invalidate","installable","latestVersions","alpha","beta","release"],"mappings":"8hBA6BoCA,cAAAC,GAAeC,GAAAA,EAAAA,CAAAA,CAAAA,kBACfF,cAAAC,MAAeE,QAAU,EAAA,CAAA,CAAA,uQAHpDC,EAAAA,EAAAC,EAAA,QAAAC,EAAAL,GAAG,EAAA,2BAAA,CAAA,SAFZM,CAAAA,EAMQC,EAAAH,EAAAI,yDAHIR,EAAiB,CAAA,CAAA,6BACOS,EAAA,IAAAC,EAAAX,cAAAC,GAAeC,GAAAA,yBACfQ,EAAA,IAAAE,EAAAZ,cAAAC,MAAeE,gBAH1CU,CAAAA,GAAAH,EAAA,GAAAJ,KAAAA,EAAAL,KAAG,2BAA2B,4QApB1BD,GAAqCc,EAEjC,KAAA,CAAAC,EAAAA,CAAMC,EAAAA,EAAAA,MAEf,MAAAC,EAAaC,IACbC,EAAiB,KACrBF,EAAWG,QAAO,CAChBC,KAAM,YACNC,UAAS,CACPC,IAAKC,GACLC,MACE,CAAAzB,0PCayE0B,EAAazB,EAAG,CAAA,EAAC0B,KAAK,EAAA,0BACxBD,EAAazB,EAAG,GAAC2B,SAAS,EAAA,mCACnE5B,cAAAC,KAAID,+tBAH1CO,CAAAA,EAIKC,EAAAqB,EAAApB,GAHHqB,EAA6GD,EAAAE,GAAvGD,EAAwEC,EAAAC,iBAC9EF,EAA+GD,EAAAI,GAAzGH,EAAsEG,EAAAC,4DADGR,EAAazB,EAAG,CAAA,EAAC0B,OAAK,KAAAQ,EAAAC,EAAAC,qBACxBX,EAAazB,EAAG,CAAC2B,EAAAA,SAAAA,EAAS,KAAAO,EAAAG,EAAAC,cACnE7B,EAAA,IAAA8B,EAAAxC,cAAAC,KAAID,wIAGzByC,OAAAA,EAAA,IAAAC,GAAA,CAAAjB,MAAA,CAAAkB,KAAA1C,KAAI0C,kKADrBpC,CAAAA,EAEKC,EAAAqB,EAAApB,CAAAA,sCADYC,EAAA,IAAAkC,EAAAD,KAAA1C,GAAI0C,EAAAA,gaAIjBpC,EAEQC,EAAAH,EAAAI,qFAHLR,EAAW,CAAA4C,GAAAA,EAAA5C,wFAAXA,EAAW,CAAA,8IAOeD,cAAAC,GAAID,EAAAA,aAAAA,CAAAA,CAAAA,8JADrCO,EAEKC,EAAAqB,EAAApB,uCAD4BC,EAAA,IAAAoC,EAAA9C,cAAAC,KAAID,6JApB/B+C,KAAA9C,GAAI8C,EAAAA,KACJC,KAAAC,EAAO,QAAUhD,KAAIiD,cACrBC,KAAAlD,KAAIkD,KACGC,YAAAnD,GAAIoD,EAAAA,sLAHX3C,EAAA,IAAA4C,EAAAP,KAAA9C,GAAI8C,EAAAA,MACJrC,EAAA,IAAA4C,EAAAN,KAAAC,EAAO,QAAUhD,KAAIiD,eACrBxC,EAAA,IAAA4C,EAAAH,KAAAlD,KAAIkD,MACGzC,EAAA,IAAA4C,EAAAF,YAAAnD,GAAIoD,EAAAA,6KAnBNE,CAAAA,EASVzC,cAqBmF0C,EAAWD,EAAIL,0FAnBhGO,EAAA,EAAAC,EACD,mBAAoBH,EAAMA,EAAII,eAAeC,OAASL,EAAII,eAAeE,MAAQN,EAAII,eAAeG,QAAU"}