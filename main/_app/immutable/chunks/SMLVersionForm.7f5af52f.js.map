{"version":3,"file":"SMLVersionForm.7f5af52f.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { VersionStabilities } from '$lib/generated';\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  changelog: string;\n  date: string;\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n\n  export let onSubmit: (data: SMLVersionData) => void;\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    version: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: smlVersionSchema }), reporter],\n    onSubmit: (submitted: SMLVersionData) => onSubmit(trimNonSchema(submitted, smlVersionSchema))\n  });\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label=\"Version\" required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory Version\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap Version\" required />\n      <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label=\"Stability\">\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label=\"Changelog\"\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label=\"Date and Time\" required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.link} label=\"Link\" required />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlVersionSchema","zod.object","version","zod.string","regex","satisfactory_version","zod.number","bootstrap_version","stability","link","url","changelog","date","t_value","ctx","insert_hydration","target","span","anchor","dirty","set_data","t","div","innerHTML","raw_value","textfield0_props","value","message","textfield1_props","textfield2_props","select_props","textfield3_props","handle_promise","promise","markdown","info","textfield4_props","textfield5_props","form_1","append_hydration","div10","div0","div1","div2","div3","div6","div4","div5","div7","div8","div9","textfield0_changes","textfield1_changes","textfield2_changes","select_changes","textfield3_changes","textfield4_changes","textfield5_changes","onSubmit","$$props","initialValues","VersionStabilities","Alpha","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"kfAaA,MAAMA,GACJ,qMAEWC,GAAmBC,GAAW,CACzCC,QAASC,GAAAA,EAAaC,MAAML,EAC5BM,EAAAA,qBAAsBC,GACtBC,EAAAA,kBAAmBJ,GAAaC,EAAAA,MAAML,IACtCS,UAAWL,GAAAA,EACXM,KAAMN,GAAaO,EAAAA,IAAAA,EACnBC,UAAWR,GACXS,EAAAA,KAAMT,4BCgBkCU,GAAAC,OAAW,IAAE,oKAA/CC,EAAsDC,EAAAC,EAAAC,iBAApB,CAAAC,EAAA,OAAAN,KAAAA,GAAAC,OAAW,IAAE,KAAAM,GAAAC,EAAAR,wCAObA,GAAAC,OAAW,IAAE,oKAA/CC,EAAsDC,EAAAC,EAAAC,iBAApB,CAAAC,EAAA,OAAAN,KAAAA,GAAAC,OAAW,IAAE,KAAAM,GAAAC,EAAAR,CAAAA,uCAObA,GAAAC,OAAW,IAAE,oKAA/CC,EAAsDC,EAAAC,EAAAC,kBAApBC,EAAA,OAAAN,KAAAA,GAAAC,OAAW,IAAE,KAAAM,GAAAC,EAAAR,uDAMzB,qBAAA,8EACD,oBAAA,6EACG,uBAAA,83BAGUA,GAAAC,OAAW,IAAE,oKAA/CC,EAAsDC,EAAAC,EAAAC,CAAAA,iBAApBC,EAAA,OAAAN,KAAAA,GAAAC,OAAW,IAAE,KAAAM,GAAAC,EAAAR,wCAcXA,GAAAC,IAAW,GAAA,IAAE,mKAA/CC,CAAAA,EAAsDC,EAAAC,EAAAC,CAAAA,iBAApBC,EAAA,OAAAN,KAAAA,GAAAC,IAAW,GAAA,IAAE,KAAAM,GAAAC,EAAAR,qFAMJC,EAAe,EAAA,EAAA,iKAA1DC,CAAAA,EAAgEC,EAAAM,EAAAJ,qCAArBJ,EAAe,EAAA,EAAA,MAAAQ,EAAAC,UAAAC,mFAQ1BX,GAAAC,OAAW,IAAE,oKAA/CC,EAAsDC,EAAAC,EAAAC,kBAApBC,EAAA,OAAAN,KAAAA,GAAAC,OAAW,IAAE,KAAAM,GAAAC,EAAAR,CAAAA,uCAObA,GAAAC,IAAW,GAAA,IAAE,oKAA/CC,EAAsDC,EAAAC,EAAAC,iBAApB,CAAAC,EAAA,OAAAN,KAAAA,GAAAC,IAAW,GAAA,IAAE,KAAAM,GAAAC,EAAAR,CAAAA,sDAKPC,EAAU,gBAAVA,EAAU,CAAA,CAAA,qCAAVA,EAAU,0OAnE7B,EAAAA,GAAMZ,EAAAA,UAAAA,SAANuB,GAAAC,MAAAZ,GAAMZ,EAAAA,2HACkByB,CAAAA,KAAO,CAAA,GAAAA,CAAAA,cAAPA,CAAAA,IAAOA,EAAA,MAAA,8GAM/Bb,KAAMT,uBAAoB,SAA1BuB,GAAAF,MAAAZ,KAAMT,qJAC+BsB,CAAAA,KAAO,CAAA,GAAAA,CAAAA,cAAPA,CAAOA,IAAAA,EAAA,MAAA,2FAM5C,EAAAb,GAAMP,EAAAA,oBAAAA,SAANsB,GAAAH,MAAAZ,GAAMP,EAAAA,+IAC4BoB,MAAO,CAAA,GAAAA,eAAPA,CAAAA,IAAOA,EAAA,MAAA,CAAA,CAAA,+GAM5Cb,KAAMN,qBAANsB,GAAAJ,MAAAZ,GAAMN,EAAAA,+HAKuBmB,MAAO,CAAA,GAAAA,eAAPA,KAAOA,EAAA,MAAA,sIAaxC,EAAA,EAHAb,KAAMH,YAAS,SAAfoB,GAAAL,MAAAZ,KAAMH,+HAI6BgB,CAAO,KAAA,CAAA,GAAAA,CAAAA,cAAPA,KAAOA,EAAA,MAAA,8GAMhDK,GAAAC,GAAAC,GAASpB,EAAO,CAAA,CAAA,EAAAqB,oEAOH,EAAArB,GAAMF,EAAAA,OAAAA,SAANwB,GAAAV,MAAAZ,GAAMF,EAAAA,qHACee,MAAO,CAAA,GAAAA,eAAPA,CAAAA,IAAOA,EAAA,MAAA,CAAA,CAAA,+EAM5B,OAAAb,KAAML,OAAI,SAAV4B,GAAAX,MAAAZ,KAAML,qHACekB,CAAO,KAAA,CAAA,GAAAA,CAAAA,cAAPA,KAAOA,EAAA,MAAA,4dAhB3C,+4BAAA,60BAhDdZ,EAyEMC,EAAAsB,EAAApB,GAxEJqB,EAuEKD,EAAAE,GAtEHD,EAKKC,EAAAC,yCAELF,EAKKC,EAAAE,yCAELH,EAAAA,EAKKC,EAAAG,yCAELJ,EAAAA,EASKC,EAAAI,2CAELL,EAmBKC,EAAAK,CAlBHN,EAAAA,EAWKM,EAAAC,2CACLP,EAKKM,EAAAE,CAAAA,EAJHR,EAAoBQ,EAAA9B,EAAAA,gFAOxBsB,EAAAA,EAKKC,EAAAQ,2CAELT,EAKKC,EAAAS,2CAELV,EAEKC,EAAAU,EAAAA,kGApEoBC,EAAAzB,MAAAZ,KAAMZ,wHAONkD,GAAA1B,MAAAZ,GAAMT,EAAAA,sIAONgD,GAAA3B,MAAAZ,KAAMP,2KAOT+C,GAAA5B,MAAAZ,KAAMN,8HAeV+C,GAAA7B,MAAAZ,GAAMH,EAAAA,yGAUZQ,EAAA,GAAAc,MAAAA,GAAAC,GAASpB,EAAO,CAAA,CAAA,IAAAkB,GAAAC,GAAAE,CAAAA,0CAOHqB,GAAA9B,MAAAZ,KAAMF,yHAON6C,GAAA/B,MAAAZ,KAAML,45BApFtBiD,CAAAA,EAAwCC,iBACxCC,EAAa,CACtBnD,KAAM,GACNF,kBAAmB,GACnBK,KAAM,GACND,UAAW,GACXN,qBAAsB,EACtBG,UAAWqD,GAAmBC,MAC9B5D,QAAS,EAAA,CAAA,IAEA6D,CAAAA,WAAAA,EAAa,QAAQJ,EAAAA,aAExBK,EAAIC,KAAEA,CAAAA,EAASC,GAAU,CAChBN,gBACfO,QAASC,GAAS,CAAGC,OAAQrE,KAAqBsE,EAClDZ,EAAAA,SAAWa,GAA8Bb,EAASc,GAAcD,EAAWvE,yCASlDyE,EAAAC,GAAAC,UAAAC,EAAM1E,QAAOwB,CAAA,IAAbkD,EAAM1E,QAAOwB,0BAOb+C,EAAAC,GAAAC,UAAAC,EAAMvE,qBAAoBqB,CAAAA,IAA1BkD,EAAMvE,qBAAoBqB,0BAO1B,CAAA+C,EAAAC,GAAAC,UAAAC,EAAMrE,kBAAiBmB,KAAvBkD,EAAMrE,kBAAiBmB,0BAO1B+C,EAAAC,GAAAC,UAAAC,EAAMpE,UAASkB,CAAA,IAAfkD,EAAMpE,UAASkB,2BAenB+C,EAAAC,GAAAC,UAAAC,EAAMjE,UAASe,CAAAA,IAAfkD,EAAMjE,UAASe,yBAiBR,CAAA+C,EAAAC,GAAAC,UAAAC,EAAMhE,KAAIc,CAAA,IAAVkD,EAAMhE,KAAIc,0BAOV+C,EAAAC,GAAAC,UAAAC,EAAMnE,KAAIiB,KAAVkD,EAAMnE,KAAIiB,uLAlElCmD,EAAWD,EAAMjE,WAAwB"}