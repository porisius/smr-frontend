{"version":3,"file":"SMLVersionForm-de4f067b.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { VersionStabilities } from '$lib/generated';\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  changelog: string;\n  date: string;\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n\n  export let onSubmit: (data: SMLVersionData) => void;\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    version: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: smlVersionSchema }), reporter],\n    onSubmit: (submitted: SMLVersionData) => onSubmit(trimNonSchema(submitted, smlVersionSchema))\n  });\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label=\"Version\" required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory Version\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap Version\" required />\n      <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label=\"Stability\">\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label=\"Changelog\"\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label=\"Date and Time\" required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.link} label=\"Link\" required />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlVersionSchema","zod.object","version","zod.string","regex","satisfactory_version","zod.number","bootstrap_version","stability","link","url","changelog","date","t_value","ctx","insert_hydration","target","span","anchor","dirty","set_data","t","div","innerHTML","raw_value","textfield0_props","value","message","textfield1_props","textfield2_props","select_props","textfield3_props","handle_promise","promise","markdown","info","textfield4_props","textfield5_props","form_1","append_hydration","div10","div0","div1","div2","div3","div6","div4","div5","div7","div8","div9","textfield0_changes","textfield1_changes","textfield2_changes","select_changes","textfield3_changes","textfield4_changes","textfield5_changes","onSubmit","$$props","initialValues","VersionStabilities","Alpha","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"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"}