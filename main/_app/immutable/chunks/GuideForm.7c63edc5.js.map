{"version":3,"file":"GuideForm.7c63edc5.js","sources":["../../../../../../src/lib/models/guides.ts","../../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: guideSchema }), reporter],\n    onSubmit: (submitted: GuideData) => onSubmit(trimNonSchema(submitted, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield textarea class=\"vertical-textarea\" bind:value={$data.guide} label=\"Guide\" required input$rows={10} />\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["guideSchema","zod.object","name","zod.string","min","max","short_description","guide","t_value","ctx","insert_hydration","target","span","anchor","dirty","set_data","t","div","innerHTML","raw_value","textfield0_props","value","message","textfield1_props","textfield2_props","handle_promise","promise","markdown","info","form_1","append_hydration","div6","div0","div1","div4","div2","div3","div5","textfield0_changes","textfield1_changes","textfield2_changes","onSubmit","$$props","initialValues","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"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"}