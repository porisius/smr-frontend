const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/_app/immutable/entry/app.DxuT6_fy.js",s+"/_app/immutable/nodes/0.BlFVdsyH.js",s+"/_app/immutable/assets/0.11uRDOst.css",s+"/_app/immutable/nodes/1.zUNSobJi.js",s+"/_app/immutable/nodes/10.BMi0SkvK.js",s+"/_app/immutable/nodes/11.Dl6bcZpX.js",s+"/_app/immutable/nodes/12.DQzwVbQk.js",s+"/_app/immutable/nodes/13.DPXa_HkK.js",s+"/_app/immutable/nodes/14.C66mn8mp.js",s+"/_app/immutable/assets/14.DGIivzJm.css",s+"/_app/immutable/nodes/15.BfUh504b.js",s+"/_app/immutable/nodes/16.nr8G3I8Y.js",s+"/_app/immutable/nodes/17.DT2NftUu.js",s+"/_app/immutable/nodes/18.ChR0Gd9B.js",s+"/_app/immutable/nodes/19.CjNwHzdY.js",s+"/_app/immutable/nodes/2.sCxcBAVo.js",s+"/_app/immutable/assets/2.XYLHkkhT.css",s+"/_app/immutable/nodes/20.BqDfunfO.js",s+"/_app/immutable/assets/20.B8PWU8N1.css",s+"/_app/immutable/nodes/21.ChiOSL4U.js",s+"/_app/immutable/nodes/22.C0qduEhk.js",s+"/_app/immutable/nodes/23.C2A0VPXV.js",s+"/_app/immutable/assets/8.DfdhIHyO.css",s+"/_app/immutable/nodes/24.DA1XKmhL.js",s+"/_app/immutable/nodes/25.Dn0O9j-f.js",s+"/_app/immutable/nodes/26.Cx6ygEcq.js",s+"/_app/immutable/nodes/27.BL46PHB4.js",s+"/_app/immutable/nodes/3.oLsnUoI-.js",s+"/_app/immutable/assets/3.tHiLzZcV.css",s+"/_app/immutable/nodes/4.io2trsCJ.js",s+"/_app/immutable/nodes/5.7n0GKD8P.js",s+"/_app/immutable/nodes/6.DCdVYuXc.js",s+"/_app/immutable/nodes/7.D8GPxbHM.js",s+"/_app/immutable/nodes/8.CHMT96rb.js",s+"/_app/immutable/nodes/9.CFmu97bT.js",s+"/_app/immutable/assets/AnnouncementRow.CbfVDtZE.css",s+"/_app/immutable/chunks/AnnouncementRow.B_11uNBo.js",s+"/_app/immutable/chunks/CompatibilityModal.SmZKHcZ1.js",s+"/_app/immutable/chunks/EditCompatibilityForm.BNaSdTdw.js",s+"/_app/immutable/assets/FicsitCard.Bep6FE4g.css",s+"/_app/immutable/chunks/FicsitCard.CZ_KFIkt.js",s+"/_app/immutable/chunks/GuideCard.CH71pLl2.js",s+"/_app/immutable/assets/GuideForm.DcQdjkdL.css",s+"/_app/immutable/chunks/GuideForm.CtVUJe_j.js",s+"/_app/immutable/chunks/MetaDescriptors.C9ccx7n9.js",s+"/_app/immutable/chunks/ModCard.DctN9kYX.js",s+"/_app/immutable/chunks/ModCompatibilityEdit.BlBpFOGJ.js",s+"/_app/immutable/chunks/ModForm.BtiXhpPS.js",s+"/_app/immutable/chunks/Page404.BBMKgOZR.js",s+"/_app/immutable/assets/TagList.C9F31gTP.css",s+"/_app/immutable/chunks/TagList.CXI5Pk8m.js",s+"/_app/immutable/chunks/VersionDependenciesGrid.ud4sEjRx.js",s+"/_app/immutable/assets/VersionForm.fNMkQdp2.css",s+"/_app/immutable/chunks/VersionForm.AuBImqo3.js",s+"/_app/immutable/chunks/api.Dn0ikjHb.js",s+"/_app/immutable/chunks/extras.BloPo73J.js",s+"/_app/immutable/chunks/formatting.DRqZGGFY.js",s+"/_app/immutable/chunks/forms.CieaMtBO.js",s+"/_app/immutable/chunks/forms.Cj_xqNX8.js",s+"/_app/immutable/chunks/gql.DGDorg1Q.js",s+"/_app/immutable/chunks/graphql.CNu7qPRc.js",s+"/_app/immutable/chunks/jszip.VyYNC7iL.js",s+"/_app/immutable/chunks/launcher.DzPapFIP.js",s+"/_app/immutable/chunks/markdown.DrnYx0na.js",s+"/_app/immutable/chunks/preload-helper.9YLJ1q38.js",s+"/_app/immutable/chunks/uplugin.CJgXNBTt.js",s+"/_app/immutable/chunks/user.DPgsvCcd.js",s+"/_app/immutable/assets/vendor.Cirlo5Z8.css",s+"/_app/immutable/chunks/vendor.BJcisrmX.js",s+"/_app/immutable/entry/start.Dz0bHrxI.js",s+"/_app/immutable/chunks/custom_protocol.u56lozG6.js"],b=[s+"/assets/android-chrome-192x192.png",s+"/assets/android-chrome-512x512.png",s+"/assets/apple-touch-icon.png",s+"/assets/browserconfig.xml",s+"/assets/favicon-16x16.png",s+"/assets/favicon-32x32.png",s+"/assets/favicon.ico",s+"/assets/fonts/flow-rounded.woff",s+"/assets/mstile-150x150.png",s+"/assets/safari-pinned-tab.svg",s+"/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp",s+"/images/bg_nologo.webp",s+"/images/dog_aw_yis_pats.gif",s+"/images/dog_boing.gif",s+"/images/dog_stand.gif",s+"/images/mods_mobile.webp",s+"/images/no_image.webp",s+"/images/satisfactory_logo_full_color_small.webp",s+"/images/sf_modding_logo.webp",s+"/images/smm_background.webp",s+"/images/smm_hand.webp",s+"/images/smm_icon_white.webp",s+"/manifest.json",s+"/robots.txt"],n="1726457047612",m=self,o=`cache${n}`,c=l.concat(b),_=new Set(c);m.addEventListener("install",a=>{a.waitUntil(caches.open(o).then(e=>e.addAll(c)).then(()=>{m.skipWaiting()}))});m.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(async e=>{for(const t of e)t!==o&&await caches.delete(t);m.clients.claim()}))});async function d(a){const e=await caches.open(`offline${n}`);try{const t=await fetch(a);return e.put(a,t.clone()),t}catch(t){const p=await e.match(a);if(p)return p;throw t}}m.addEventListener("fetch",a=>{if(a.request.method!=="GET"||a.request.headers.has("range"))return;const e=new URL(a.request.url),t=e.protocol.startsWith("http"),p=e.hostname===self.location.hostname&&e.port!==self.location.port,i=e.host===self.location.host&&_.has(e.pathname),u=a.request.cache==="only-if-cached"&&!i;t&&!p&&!u&&i&&!a.request.url.includes("start")&&a.respondWith((async()=>i&&await caches.match(a.request)||d(a.request))())});
