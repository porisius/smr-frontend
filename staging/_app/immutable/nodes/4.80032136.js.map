{"version":3,"file":"4.80032136.js","sources":["../../../../../../src/routes/admin/sml-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { DeleteSmlVersionDocument, GetSmlVersionsAdminDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const page = 1;\n\n  $: versions = queryStore({\n    query: GetSmlVersionsAdminDocument,\n    client,\n    variables: {\n      filter: {\n        offset: (page - 1) * perPage,\n        limit: perPage\n      }\n    }\n  });\n\n  $: totalVersions = $versions?.data?.getSMLVersions?.count;\n\n  const deleteVersion = (smlVersionID: string) => {\n    client\n      .mutation(DeleteSmlVersionDocument, { smlVersionID })\n      .toPromise()\n      .then(() => {\n        versions.pause();\n        versions.resume();\n      });\n  };\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"SML Versions\" title=\"Admin: SML Versions\" />\n</svelte:head>\n\n<div class=\"mb-5 ml-auto flex justify-between\">\n  <Button variant=\"outlined\" href=\"{base}/admin/sml-versions/new\">New SML Version</Button>\n\n  {#if totalVersions}\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  {/if}\n</div>\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Satisfactory Version</Cell>\n          <Cell>Bootstrap Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{version.bootstrap_version}</Cell>\n            <Cell>{prettyDate(version.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => deleteVersion(version.id)}>Delete</Button>\n                <Button variant=\"outlined\" href={base + '/admin/sml-versions/' + version.id + '/edit'}>Edit</Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","page","insert_hydration_dev","target","div","anchor","dirty","pagecontrols_changes","t_value","version","set_data_dev","t","stability","satisfactory_version","bootstrap_version","prettyDate","created_at","href","base","id","button1_changes","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","div1","append_hydration_dev","div0","create_if_block_3","create_if_block","client","getContextClient","deleteVersion","smlVersionID","mutation","DeleteSmlVersionDocument","toPromise","then","versions","pause","resume","$$invalidate","totalVersions","$versions","count","$$subscribe_versions","queryStore","query","GetSmlVersionsAdminDocument","variables","filter","offset","limit"],"mappings":"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"}