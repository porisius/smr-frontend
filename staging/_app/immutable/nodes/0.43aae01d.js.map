{"version":3,"mappings":"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","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","VersionTarget","VersionDependency","updates","Mutation","deleteGuide","_result","args","cache","invalidate","__typename","id","guideId","deleteMod","modId","approveMod","denyMod","approveVersion","versionId","denyVersion","deleteSMLVersion","smlVersionId","deleteVersion","updateVersion","authExchange","async","utils","token","get","userToken","addAuthToOperation","operation","appendHeaders","Authorization","didAuthError","error","message","indexOf","persistedExchange","preferGetForPersistedQueries","fetchExchange","load","e","client","t0_value","ctx","t2_value","dirty","set_data_dev","t0","t2","insert_hydration_dev","target","p","anchor","t1","t1_value","div","current","t_1_value","t_1","fetching","span","getContextClient","t","getTranslate","getMe","queryStore","query","GetMeDocument","variables","requestPolicy","pause","first","subscribe","oneMonth","Date","getTime","cookie","set","domain","window","location","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","resume","unsub","response","console","data","user","signInMethods","github","OAuthGithubDocument","google","OAuthGoogleDocument","facebook","OAuthFacebookDocument","errorMessage","errorToast","signingIn","signInMethod","localStorage","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","loginDialogOpen","result","$$invalidate","session","oauthOptions","GetOAuthOptionsDocument","callback_url","encodeURIComponent","origin","pathname","goTo","service","setItem","goto","$oauthOptions","getOAuthOptions","$loginDialogOpen","value","create_if_block_5","startsWith","attr_dev","div_style_value","avatar","username","href","item_changes","icon","label","external","i","each_blocks","create_if_block","create_if_block_3","open","$$props","drawerVariant","hideTopElements","accessibility","base","click_handler_2","$user","preloadData","item","currentPath","isAdmin","roles","approveMods","approveVersions","editSMLVersions","top","$t","bottom","t_value","div2","div2_class_value","append_hydration_dev","div1","div0","b","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","importance","isMonospace","finalMessage","replaceAll","getAnnouncements","announcementrow_changes","announcements","GetAnnouncementsDocument","select_changes","tolgee","getTolgee","languages","en","de","fr","lv","lang","writable","$tolgee","getLanguage","l","changeLanguage","$lang","if_block","create_if_block_4","pingLauncher","create_if_block_2","div1_style_value","onMobile","mobile","menu","sidebarOpen","$sidebarOpen","setOpen","SMUI_action_handler","$$value","script0","script0_src_value","script1","$$inline","main","create_if_block_1","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","Tolgee","use","DevTools","FormatSimple","LanguageDetector","init","defaultNs","defaultLanguage","fallbackLanguage","apiUrl","PUBLIC_TOLGEE_API_URL","apiKey","PUBLIC_TOLGEE_API_KEY","staticData","enCommon","deCommon","frCommon","lvCommon","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","bU","__VITE_IS_MODERN__","cookieconsent","initialise","palette","popup","background","button","theme","position","customProtocolCheck","__vitePreload","import","toLocaleLowerCase","hasLauncher","toString","setContextClient","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementRow.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/lib/components/general/TranslationDropdown.svelte","../../../../../../src/lib/components/general/TopBar.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null,\n          VersionTarget: () => null,\n          VersionDependency: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => {\n        const token = get(userToken);\n        return {\n          addAuthToOperation(operation) {\n            return utils.appendHeaders(operation, {\n              Authorization: token\n            });\n          },\n          didAuthError(error) {\n            return error.message.indexOf('user not logged in') >= 0;\n          },\n          async refreshAuth() {\n            // Token cannot be refreshed currently\n          }\n        };\n      }),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport './_global.postcss';\nimport { initializeGraphQLClient } from '$lib/core';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n  return {\n    client\n  };\n};\n","<script lang=\"ts\">\n  import { loginDialogOpen } from '$lib/stores/global';\n  import {\n    GetMeDocument,\n    GetOAuthOptionsDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { goto } from '$app/navigation';\n  import Toast from '../general/Toast.svelte';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import Dialog, { Title, Content } from '@smui/dialog';\n  import Button from '@smui/button';\n  import CircularProgress from '@smui/circular-progress';\n  import { getTranslate } from '@tolgee/svelte';\n\n  const client = getContextClient();\n\n  export const { t } = getTranslate();\n\n  if (browser) {\n    const getMe = queryStore({\n      query: GetMeDocument,\n      client,\n      variables: {},\n      requestPolicy: 'network-only',\n      pause: true\n    });\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.pause();\n        getMe.resume();\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              // TODO Toast or something\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  let errorMessage = '';\n  let errorToast = false;\n  let signingIn = false;\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      loginDialogOpen.set(true);\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            errorMessage = 'Error logging in: ' + result.error.message;\n            errorToast = true;\n          } else {\n            userToken.set(result.data.session.token);\n            loginDialogOpen.set(false);\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n\n  $: if ($loginDialogOpen) {\n    oauthOptions.pause();\n    oauthOptions.resume();\n  }\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n</script>\n\n<Dialog bind:open={$loginDialogOpen}>\n  <Title>{$t('user.sign-in')} / {$t('user.sign-up')}</Title>\n  <Content>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>{$t('user.logging-in')}...</p>\n        <div class=\"flex justify-center\">\n          <CircularProgress class=\"h-10 w-10\" indeterminate />\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>{$t('loading')}...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <Button variant=\"outlined\" on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          {$t('login-dialog.sign-in-with-github')}\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          {$t('login-dialog.sign-in-with-google')}\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          {$t('login-dialog.sign-in-with-facebook')}\n        </Button>\n      {/if}\n    </div>\n  </Content>\n</Dialog>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n","<script lang=\"ts\">\n  import Switch from '@smui/switch';\n  import FormField from '@smui/form-field';\n  import Drawer, { Content } from '@smui/drawer';\n  import List, { Item, Text, Graphic, Separator } from '@smui/list';\n  import { goto, preloadData } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { loginDialogOpen } from '$lib/stores/global';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let open: boolean;\n  export let drawerVariant: 'modal' | 'dismissible';\n  export let hideTopElements: boolean;\n  export let accessibility: boolean;\n\n  export const { t } = getTranslate();\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  $: top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: $t('sidebar.home')\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: $t('sidebar.mods')\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: $t('sidebar.guides')\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: $t('sidebar.sml-versions')\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: $t('sidebar.tools')\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: $t('discord'),\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: $t('sidebar.docs'),\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: $t('sidebar.forums'),\n      external: true\n    }\n  ];\n\n  $: bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: $t('sidebar.help')\n    },\n    {\n      url: base + '/content-policy',\n      icon: 'verified_user',\n      label: $t('content-policy')\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: $t('sidebar.privacy-policy')\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: $t('sidebar.tos')\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: $t('sidebar.api')\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: $t('sidebar.github'),\n      external: true\n    }\n  ];\n</script>\n\n<Drawer variant={drawerVariant} fixed={false} bind:open>\n  <Content>\n    <div class=\"drawer-content\">\n      {#if hideTopElements}\n        <List>\n          {#if $user === null}\n            <Item on:click={() => loginDialogOpen.set(true)}>\n              <Graphic class=\"material-icons\">login</Graphic>\n              <Text>{$t('user.sign-in')}</Text>\n            </Item>\n          {:else}\n            {#if isAdmin}\n              <Item on:click={() => goto(base + '/admin')} activated={currentPath.startsWith('/admin')}>\n                <Graphic class=\"material-icons\">admin_panel_settings</Graphic>\n                <Text>Admin</Text>\n              </Item>\n            {/if}\n\n            <Item on:click={() => goto(base + '/user/' + $user.id)} activated={currentPath.startsWith('/user')}>\n              <Graphic>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Graphic>\n              <Text>{$user.username}</Text>\n            </Item>\n\n            <Item on:click={() => userToken.set(null)}>\n              <Graphic class=\"material-icons\">logout</Graphic>\n              <Text>{$t('user.logout')}</Text>\n            </Item>\n          {/if}\n        </List>\n\n        <Separator />\n      {/if}\n\n      <List>\n        {#each top as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => preloadData(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n      </List>\n\n      <List>\n        {#each bottom as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => preloadData(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n\n        {#if hideTopElements}\n          <Item target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n            <Graphic class=\"material-icons\">file_download</Graphic>\n            <Text>{$t('sidebar.mod-manager')}</Text>\n          </Item>\n        {/if}\n\n        <Item>\n          <FormField align=\"end\">\n            <Switch bind:checked={accessibility} aria-label=\"Accessibility Font\" />\n            <span slot=\"label\">{$t('sidebar.accessibility-font')}</span>\n          </FormField>\n        </Item>\n      </List>\n    </div>\n  </Content>\n</Drawer>\n\n<style lang=\"postcss\">\n  .drawer-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { Icon } from '@smui/icon-button';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden\">\n  <div class=\"p-1 striped text-black\">\n    <Icon class=\"material-icons text-2xl align-middle\">{iconNames[importance]}</Icon>\n    <div\n      class=\"align-middle text-l inline-block break-words max-w-full\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>{finalMessage}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"max-h-96 overflow-y-auto\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n\n<style></style>\n","<script lang=\"ts\">\n  import { getTolgee, getTranslate } from '@tolgee/svelte';\n  import Select, { Option } from '@smui/select';\n  import { writable } from 'svelte/store';\n\n  const tolgee = getTolgee(['language']);\n\n  export const { t } = getTranslate();\n\n  const languages = {\n    en: 'English',\n    de: 'Deutsch',\n    fr: 'Français',\n    lv: 'Latviešu'\n  };\n\n  const lang = writable<string>(localStorage.getItem('language') || $tolgee.getLanguage());\n  lang.subscribe((l) => {\n    $tolgee.changeLanguage(l);\n    localStorage.setItem('language', l);\n  });\n</script>\n\n<div class=\"darker-please mr-3 max-h-1/2\">\n  <Select bind:value={$lang} label={$t('appbar.language-dropdown')} variant=\"outlined\">\n    {#each Object.entries(languages) as lang}\n      <Option value={lang[0]}>{lang[1]}</Option>\n    {/each}\n  </Select>\n</div>\n","<script lang=\"ts\">\n  import { hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import { user, userToken } from '$lib/stores/user';\n  import { loginDialogOpen, onMobile, sidebarOpen } from '$lib/stores/global';\n  import { goto } from '$app/navigation';\n  import { base } from '$app/paths';\n  import TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\n  import List, { Item, Text } from '@smui/list';\n  import TranslationDropdown from '$lib/components/general/TranslationDropdown.svelte';\n  import Menu from '@smui/menu';\n  import IconButton from '@smui/icon-button';\n  import Button, { Icon, Label } from '@smui/button';\n  import { browser } from '$app/environment';\n  import { getTranslate } from '@tolgee/svelte';\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  export const { t } = getTranslate();\n\n  let drawerVariant: 'modal' | undefined = 'modal';\n  let hideTopElements = true;\n  if (browser) {\n    onMobile.subscribe((mobile) => {\n      drawerVariant = mobile ? 'modal' : undefined;\n      hideTopElements = mobile;\n    });\n  }\n\n  let menu: Menu;\n</script>\n\n<TopAppBar variant=\"static\">\n  <Row>\n    <Section>\n      {#if drawerVariant === 'modal'}\n        <IconButton class=\"material-icons\" on:click={() => sidebarOpen.set(!$sidebarOpen)}>menu</IconButton>\n      {/if}\n      <Title>{$t('top-bar.title')}</Title>\n    </Section>\n    {#if !hideTopElements}\n      <Section align=\"end\" toolbar>\n        <TranslationDropdown />\n\n        {#if $hasLauncher}\n          <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={pingLauncher}>\n            <Label>Launcher Detected</Label>\n            <Icon class=\"material-icons\">file_download</Icon>\n          </Button>\n        {:else}\n          <Button\n            color=\"secondary\"\n            variant=\"outlined\"\n            class=\"mr-3\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"https://smm.ficsit.app\">\n            <Label>Mod Manager</Label>\n            <Icon class=\"material-icons\">file_download</Icon>\n          </Button>\n        {/if}\n\n        {#if $user === null}\n          <Button color=\"secondary\" variant=\"outlined\" on:click={() => loginDialogOpen.set(true)}>\n            <Label>{$t('user.sign-in')}</Label>\n            <Icon class=\"material-icons\">login</Icon>\n          </Button>\n        {:else}\n          {#if isAdmin}\n            <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={() => goto(base + '/admin')}>\n              <Label>Admin</Label>\n              <Icon class=\"material-icons\">admin_panel_settings</Icon>\n            </Button>\n          {/if}\n\n          <div>\n            <Button variant=\"outlined\" color=\"secondary\" on:click={() => menu.setOpen(true)} class=\"grid grid-flow-col\">\n              <div class=\"mr-3\">{$user.username}</div>\n              <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n            </Button>\n\n            <Menu bind:this={menu}>\n              <List>\n                <Item on:SMUI:action={() => goto(base + '/user/' + $user.id)}>\n                  <Text>{$t('top-bar.user.profile')}</Text>\n                </Item>\n                <Item on:SMUI:action={() => goto(base + '/settings')}>\n                  <Text>{$t('top-bar.user.settings')}</Text>\n                </Item>\n                <Item on:SMUI:action={() => userToken.set(null)}>\n                  <Text>{$t('user.logout')}</Text>\n                </Item>\n              </List>\n            </Menu>\n          </div>\n        {/if}\n      </Section>\n    {/if}\n  </Row>\n</TopAppBar>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import { AppContent, Scrim } from '@smui/drawer';\n  import { onMobile, sidebarOpen } from '$lib/stores/global';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG, PUBLIC_TOLGEE_API_URL, PUBLIC_TOLGEE_API_KEY } from '$env/static/public';\n  import type { LayoutData } from './$types';\n  import { TolgeeProvider, Tolgee, DevTools, FormatSimple, LanguageDetector } from '@tolgee/svelte';\n\n  import enCommon from '../i18n/common/en.json';\n  import deCommon from '../i18n/common/de.json';\n  import frCommon from '../i18n/common/fr.json';\n  import lvCommon from '../i18n/common/lv.json';\n  import TopBar from '$lib/components/general/TopBar.svelte';\n\n  export let data: LayoutData;\n\n  const { client } = data;\n\n  const tolgee = Tolgee()\n    .use(DevTools())\n    .use(FormatSimple())\n    .use(LanguageDetector())\n    .init({\n      defaultNs: 'common',\n\n      defaultLanguage: 'en',\n      fallbackLanguage: 'en',\n\n      apiUrl: PUBLIC_TOLGEE_API_URL,\n      apiKey: PUBLIC_TOLGEE_API_KEY,\n\n      staticData: {\n        'en:common': enCommon,\n        'de:common': deCommon,\n        'fr:common': frCommon,\n        'lv:common': lvCommon\n      }\n    });\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      if ('cookieconsent' in window) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        window.cookieconsent.initialise({\n          palette: {\n            popup: {\n              background: '#000'\n            },\n            button: {\n              background: '#f1d600'\n            }\n          },\n          theme: 'edgeless',\n          position: 'bottom-right'\n        });\n      }\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n\n  let drawerVariant: 'modal' | undefined = 'modal';\n  let hideTopElements = true;\n  if (browser) {\n    onMobile.subscribe((mobile) => {\n      drawerVariant = mobile ? 'modal' : undefined;\n      hideTopElements = mobile;\n    });\n  }\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<TolgeeProvider {tolgee}>\n  <div class=\"app-container\">\n    <TopBar />\n\n    <div class=\"drawer-container\">\n      <Sidebar bind:open={$sidebarOpen} bind:accessibility bind:drawerVariant bind:hideTopElements />\n\n      {#if drawerVariant === 'modal'}\n        <Scrim fixed={false} />\n      {/if}\n\n      <AppContent class=\"app-content w-full overflow-auto\">\n        <AnnouncementHeader />\n        <main class=\"main-content min-h-100% py-6 px-3\">\n          <slot />\n        </main>\n      </AppContent>\n    </div>\n  </div>\n\n  <LoginDialog />\n</TolgeeProvider>\n\n<style lang=\"postcss\">\n  .app-container {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    height: 100vh;\n    max-height: 100vh;\n    width: 100vw;\n    max-width: 100vw;\n  }\n\n  .drawer-container {\n    display: flex;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n</style>\n"],"file":"_app/immutable/nodes/0.43aae01d.js"}