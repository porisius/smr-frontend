{"version":3,"file":"26.2e2e6e19.js","sources":["../../../../../../src/routes/sml-versions/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { GetSmlVersionsDocument } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  const client = getContextClient();\n\n  let expandedVersions = new Set<string>();\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const page = 1;\n\n  // TODO Pagination\n  $: versions = queryStore({\n    query: GetSmlVersionsDocument,\n    client,\n    variables: {\n      offset: (page - 1) * perPage,\n      limit: perPage\n    }\n  });\n\n  $: totalVersions = $versions?.data?.getSMLVersions?.count;\n\n  const toggleRow = (versionId: string) => {\n    if (expandedVersions.has(versionId)) {\n      expandedVersions.delete(versionId);\n    } else {\n      expandedVersions.add(versionId);\n    }\n    expandedVersions = expandedVersions;\n  };\n</script>\n\n<svelte:head>\n  <title>SML Versions - SMR</title>\n  <MetaDescriptors description=\"Versions of the Satisfactory Mod Loader\" title=\"Satisfactory Mod Loader versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Version</Cell>\n          <Cell>Stability</Cell>\n          <Cell>Game Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getSMLVersions.sml_versions as version}\n          <Row on:click={() => toggleRow(version.id)}>\n            <Cell>{version.version}</Cell>\n            <Cell>{version.stability}</Cell>\n            <Cell>{version.satisfactory_version}</Cell>\n            <Cell>{prettyDate(version.date)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" href={version.link}>View</Button>\n              </div>\n            </Cell>\n          </Row>\n\n          {#if expandedVersions.has(version.id)}\n            <Row>\n              <Cell colspan={5} class=\"p-2 markdown-content\">\n                {#await markdown(version.changelog) then changelogRendered}\n                  {@html changelogRendered}\n                {/await}\n              </Cell>\n            </Row>\n          {/if}\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","page","insert_hydration_dev","target","div1","anchor","append_hydration_dev","div0","dirty","pagecontrols_changes","t_value","version","set_data_dev","t","stability","satisfactory_version","prettyDate","date","href","link","div","button_changes","html_tag","p","raw_value","markdown","changelog","info","handle_promise","promise","show_if","has","id","each_value","data","getSMLVersions","sml_versions","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_4","create_if_block","client","getContextClient","expandedVersions","Set","toggleRow","versionId","delete","add","$$invalidate","totalVersions","$versions","count","$$subscribe_versions","versions","queryStore","query","GetSmlVersionsDocument","variables","offset","limit"],"mappings":"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"}