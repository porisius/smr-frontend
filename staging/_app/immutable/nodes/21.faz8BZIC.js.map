{"version":3,"file":"21.faz8BZIC.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, GetTagsDocument, ModFields, Order, type Tag } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import { base } from '$app/paths';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { browser } from '$app/environment';\n  import { getTranslate } from '@tolgee/svelte';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = (browser && $storePage.url.searchParams.get('q')) || '';\n\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  let perPage = 32;\n  let page = parseInt((browser && $storePage.url.searchParams.get('p')) || '0', 10) || 0;\n\n  let selectedTags: string[] = [];\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: page * perPage, limit: perPage, search, order, orderBy, tagIDs: selectedTags.sort() }\n  });\n\n  $: allTags = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {\n      limit: 100\n    }\n  });\n\n  let totalMods: number;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 0;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  export const { t } = getTranslate();\n\n  $: orderFields = [\n    [$t('sort-order.name'), 'name'],\n    [$t('sort-order.views'), 'views'],\n    [$t('sort-order.downloads'), 'downloads'],\n    [$t('sort-order.hotness'), 'hotness'],\n    [$t('sort-order.popularity'), 'popularity'],\n    [$t('sort-order.created_at'), 'created_at'],\n    [$t('sort-order.last_version_date'), 'last_version_date'],\n    ...(search !== '' && search !== null ? [[$t('sort-order.search'), 'search']] : [])\n  ];\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalMods,\n    amounts: [8, 16, 32, 64, 100]\n  } satisfies PaginationSettings;\n\n  const toggleTag = (tagId: string) => {\n    if (selectedTags.indexOf(tagId) >= 0) {\n      const i = selectedTags.indexOf(tagId);\n      selectedTags = [...selectedTags.slice(0, i), ...selectedTags.slice(i + 1)];\n    } else {\n      selectedTags = [...selectedTags, tagId];\n    }\n  };\n\n  const sortedTags = (tags: Tag[]): Tag[] => tags.toSorted((a, b) => a.name.localeCompare(b.name));\n\n  let tagsOpen = false;\n</script>\n\n<div class=\"mb-5 ml-auto flex flex-col gap-4\">\n  {#if showSearch}\n    <div class=\"flex grow flex-col items-center justify-center gap-4 sm:px-4\">\n      <div class=\"flex grow flex-row flex-wrap items-center justify-center gap-3 sm:px-4\">\n        <div>\n          <button\n            type=\"button\"\n            class=\"text-md variant-filled-surface btn btn-sm\"\n            class:variant-ghost-primary={tagsOpen}\n            on:click={() => (tagsOpen = !tagsOpen)}>\n            <span class=\"text-orange-500\">#</span>tags\n          </button>\n        </div>\n        <div>\n          <select bind:value={orderBy} class=\"select\">\n            {#each orderFields as orderField}\n              <option value={orderField[1]}>{orderField[0]}</option>\n            {/each}\n          </select>\n        </div>\n        <div>\n          <select bind:value={order} class=\"select\">\n            <option value=\"asc\">{$t('ascending')}</option>\n            <option value=\"desc\">{$t('descending')}</option>\n          </select>\n        </div>\n\n        <div class=\"input-group input-group-divider w-fit grid-cols-[1fr_auto] rounded-container-token\">\n          <input\n            bind:value={searchField}\n            class=\"border-0 bg-transparent p-1.5 ring-0\"\n            name=\"search\"\n            placeholder=\"Search\" />\n          <button class=\"material-icons variant-filled-primary\">arrow_forward</button>\n        </div>\n      </div>\n      {#if tagsOpen}\n        <div class=\"flex flex-grow flex-row flex-wrap items-center justify-center gap-1\">\n          {#if $allTags.error}\n            <p>Oh no... {$allTags.error.message}</p>\n          {:else if !$allTags.fetching}\n            {#each sortedTags($allTags.data.getTags) as tag}\n              <button\n                class=\"chip hover:variant-filled-surface [&:not(:hover)]:variant-soft\"\n                class:selected={selectedTags.indexOf(tag.id) >= 0}\n                on:click={() => toggleTag(tag.id)}>\n                <div class=\"lowercase text-neutral-300\">\n                  <span class=\"text-orange-500\">#</span>{tag.name}\n                </div>\n              </button>\n            {/each}\n          {/if}\n        </div>\n      {/if}\n    </div>\n  {/if}\n\n  <div class=\"flex flex-wrap justify-between\">\n    {#if newMod && $user !== null}\n      <a class=\"variant-ghost-primary btn self-end\" href=\"{base}/new-mod\">{$t('mods.new')}</a>\n    {/if}\n\n    <div class=\"self-end\">\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"ml-auto mt-5 flex justify-end\">\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n<style lang=\"postcss\">\n  .selected {\n    @apply variant-ghost-primary hover:variant-ringed-primary;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["t4_value","ctx","t5_value","length","i","create_if_block_4","add_render_callback","call","select0","select1","insert_hydration_dev","target","div5","anchor","append_hydration_dev","div4","div0","button0","span","div1","div2","option0","option1","div3","input","button1","dirty","set_data_dev","t4","t5","t_1_value","option","__value","option_value_value","t_1","error","create_if_block_5","fetching","create_if_block_6","div","each_value_2","ensure_array_like_dev","data","getTags","message","p","t1","t1_value","name","toggle_class","button","indexOf","id","base","a","each_value_1","getMods","mods","each_blocks","each_value","Array","create_if_block_3","create_if_block_2","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","perPage","page","parseInt","selectedTags","totalMods","searchField","timer","t","getTranslate","toggleTag","tagId","$$invalidate","slice","sortedTags","tags","toSorted","b","localeCompare","tagsOpen","click_handler","select_value","this","value","tag","paginationSettings","page_handler","detail","amount_handler","page_handler_1","amount_handler_1","clearTimeout","setTimeout","Search","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","tagIDs","sort","URL","window","location","origin","pathname","append","toString","goto","keepFocus","$mods","count","gridClasses","orderFields","$t","size","amounts","$$subscribe_allTags","allTags","GetTagsDocument"],"mappings":"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"}