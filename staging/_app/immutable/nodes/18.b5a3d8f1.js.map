{"version":3,"file":"18.b5a3d8f1.js","sources":["../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.ts","../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\nimport { queryStore } from '@urql/svelte';\nimport { GetModVersionDocument } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\n\nexport const load: PageLoad = async ({ params, parent }) => ({\n  ...params,\n  ...(await loadWaitForNoFetch({\n    version: queryStore({\n      query: GetModVersionDocument,\n      client: (await parent()).client,\n      variables: { version: params.versionId }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { markdown } from '$lib/utils/markdown';\n  import Card, { Content } from '@smui/card';\n\n  export let changelog!: string;\n</script>\n\n<Card class=\"h-fit\">\n  <Content>\n    <div class=\"markdown-content\">\n      {#await markdown(changelog) then changelogRendered}\n        <p>{@html changelogRendered}</p>\n      {/await}\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let version!: Pick<Version, 'created_at' | 'sml_version' | 'size' | 'stability' | 'downloads' | 'hash'>;\n\n  export const { t } = getTranslate();\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg break-words\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>{$t('entry.created-at')}:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>{$t('downloads')}:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>SML {$t('version')}:</strong> {version.sml_version}</span><br />\n      <span><strong>{$t('stability')}:</strong> {version.stability}</span><br />\n      <span><strong>{$t('size')}:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>{$t('hash')}:</strong> {version.hash}</span>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { API_REST } from '$lib/core';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { writable } from 'svelte/store';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import Button, { Label, Icon } from '@smui/button';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import Menu from '@smui/menu';\n  import List, { Item } from '@smui/list';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyArch } from '$lib/utils/formatting';\n  import { getContextClient } from '@urql/svelte';\n  import type { PageData } from './$types';\n\n  export let data: PageData;\n\n  const { modId, versionId, version } = data;\n\n  const client = getContextClient();\n\n  let errorMessage = '';\n  let errorToast = false;\n  let menu: Menu;\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteVersionFn = () => {\n    client\n      .mutation(DeleteVersionDocument, { versionId })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          errorMessage = 'Error deleting version: ' + value.error.message;\n          errorToast = true;\n        } else {\n          // TODO Toast or something\n          goto(base + '/mod/' + modId);\n        }\n      });\n  };\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            Edit\n          </Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n        {#if $version.data.getVersion.arch.length != 0}\n          <Button variant=\"outlined\" on:click={() => menu.setOpen(true)}>\n            <Label>Download</Label>\n            <Icon class=\"material-icons\" style=\"margin: 0;\">arrow_drop_down</Icon>\n          </Button>\n          <Menu bind:this={menu} anchorCorner=\"BOTTOM_LEFT\">\n            <List>\n              {#each $version.data.getVersion.arch as arch}\n                <Item>\n                  <Button\n                    variant=\"outlined\"\n                    class=\"w-full\"\n                    href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/' + arch.platform + '/download'}\n                    >Download {prettyArch(arch.platform)}</Button>\n                </Item>\n              {/each}\n            </List>\n          </Menu>\n        {:else}\n          <Button variant=\"outlined\" href={base + '/mod/' + modId + '/version/' + versionId}>View</Button>\n          <Button variant=\"outlined\" href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}\n            >Download</Button>\n        {/if}\n        <Button variant=\"outlined\" on:click={() => installMod($version.data.getVersion.mod.mod_reference)}>\n          <Label>Install</Label>\n          <Icon class=\"material-icons\">download</Icon>\n        </Button>\n\n        <Button variant=\"outlined\" href={base + '/mod/' + modId}>\n          <Label>Mod</Label>\n          <Icon class=\"material-icons\">extension</Icon>\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} />\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title id=\"simple-title\">Delete Version?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this version</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteVersionFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["load","async","params","parent","loadWaitForNoFetch","version","queryStore","query","GetModVersionDocument","client","variables","versionId","ctx","insert_hydration_dev","target","p","anchor","innerHTML","raw_value","handle_promise","promise","markdown","info","div","dirty","changelog","$$props","t2_value","prettyDate","created_at","t7_value","prettyNumber","downloads","t13_value","t16_value","sml_version","t18_value","t21_value","stability","t23_value","prettyBytes","size","t28_value","t31_value","hash","append_hydration_dev","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","br4","span5","strong5","set_data_dev","t2","t5","t5_value","t7","t10","t10_value","t13","t16","t18","t21","t23","t26","t26_value","t28","t31","t","getTranslate","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","create_if_block_5","arch","length","base","create_if_block_3","div4","div1","h1","div0","div3","div2","current","t0","versiondescription_changes","error","message","t1","t1_value","href","API_REST","prettyArch","platform","button_changes","each_value","i","each_blocks","span","fetching","create_if_block_6","modId","getContextClient","errorMessage","errorToast","menu","deleteDialogOpen","writable","deleteVersionFn","mutation","DeleteVersionDocument","toPromise","then","value","console","$$invalidate","goto","set","setOpen","$$value","installMod","$version","mod_reference","$deleteDialogOpen","canUserEdit","$user","roles","deleteContent","authors","findIndex","author","user_id","id"],"mappings":"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"}