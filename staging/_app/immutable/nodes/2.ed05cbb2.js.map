{"version":3,"file":"2.ed05cbb2.js","sources":["../../../../../../src/routes/+page.ts","../../../../../../src/lib/components/general/Doggo.svelte","../../../../../../src/lib/stores/global.ts","../../../../../../src/routes/+page.svelte"],"sourcesContent":["import { queryStore } from '@urql/svelte';\nimport { GetModsDocument, ModFields, Order } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\nimport type { PageLoad } from './$types';\n\nexport const load: PageLoad = async ({ parent }) => ({\n  ...(await loadWaitForNoFetch({\n    mods: queryStore({\n      query: GetModsDocument,\n      client: (await parent()).client,\n      variables: {\n        offset: 0,\n        limit: 4,\n        order: Order.Desc,\n        orderBy: ModFields.LastVersionDate\n      }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { spring } from 'svelte/motion';\n  import { assets } from '$app/paths';\n  import { writable } from 'svelte/store';\n\n  export let dogVisible = writable<boolean>(false);\n\n  const x = spring<number>(-2000, { stiffness: 0.004, damping: 0.25, precision: 1 });\n  const y = spring<number>(-1000, { stiffness: 0.004, damping: 0.25, precision: 1 });\n  let sprite = assets + '/images/dog_stand.gif';\n\n  let last_mouse = { clientX: -1000, clientY: 0 };\n  let patting = false;\n\n  $: actual_mouse_x = last_mouse.clientX - 350;\n  $: actual_mouse_y = last_mouse.clientY - 100;\n  $: dx = Math.abs($x - actual_mouse_x);\n  $: dy = Math.abs($y - actual_mouse_y);\n  $: isClose = dx < 80 && dy < 40;\n  $: isLookingRight = $x < actual_mouse_x;\n  $: sprite = assets + ('/images/dog_' + (isClose ? 'stand.gif' : 'boing.gif'));\n  $: head_offset = isLookingRight ? -70 : 50;\n  $: x.set(actual_mouse_x + head_offset);\n  $: y.set(actual_mouse_y);\n\n  function update_pos(event: MouseEvent) {\n    if (!patting && dogVisible) {\n      last_mouse = event;\n    }\n  }\n\n  function pat() {\n    sprite = assets + '/images/dog_aw_yis_pats.gif';\n    patting = true;\n  }\n\n  function try_pat() {\n    isClose ? pat() : null;\n  }\n\n  async function end_pat() {\n    if (patting) {\n      sprite = assets + '/images/dog_boing.gif';\n      actual_mouse_x = 3000;\n      setTimeout(() => {\n        $dogVisible = false;\n        $x = -2000;\n        $y = -1000;\n        patting = false;\n      }, 700);\n    }\n  }\n</script>\n\n<svelte:window on:mousedown={try_pat} on:mousemove={update_pos} on:mouseup={end_pat} />\n\n{#if $dogVisible}\n  <img\n    class={'h-full doggo-flipper' + (isLookingRight ? '-R' : '-L')}\n    src={sprite}\n    alt=\"Doggo!\"\n    title=\"Click to pat doggo!\"\n    style=\"width: 200px;\n                      height: auto;\n                      position: absolute;\n                        top: {$y}px;\n                        left: {$x}px;\n                        z-index: 69;\n                      \" />\n{/if}\n\n<style lang=\"postcss\">\n  .doggo-flipper-L {\n    animation: 0.1s linear 0s 1 alternate flip-L both;\n  }\n\n  .doggo-flipper-R {\n    animation: 0.1s linear 0s 1 alternate flip-R both;\n  }\n\n  @keyframes flip-R {\n    from {\n      transform: scaleX(1);\n    }\n    to {\n      transform: scaleX(-1);\n    }\n  }\n\n  @keyframes flip-L {\n    from {\n      transform: scaleX(-1);\n    }\n    to {\n      transform: scaleX(1);\n    }\n  }\n</style>\n","import { writable } from 'svelte/store';\nimport { browser } from '$app/environment';\n\nlet mobileQuery: MediaQueryList;\nif (browser) {\n  mobileQuery = window.matchMedia('(min-width: 1280px)');\n}\n\nexport const onMobile = writable<boolean>(mobileQuery && !mobileQuery.matches);\nexport const doggoNeedsPats = writable<boolean>(false);\nexport const easterEgg = writable<boolean>(false);\nif (browser) {\n  mobileQuery.addEventListener('change', (data) => {\n    onMobile && onMobile.set(!data.matches);\n  });\n}\n\nif (browser) {\n  const easterCode = [\n    'ArrowUp',\n    'ArrowUp',\n    'ArrowDown',\n    'ArrowDown',\n    'ArrowLeft',\n    'ArrowRight',\n    'ArrowLeft',\n    'ArrowRight',\n    'KeyB',\n    'KeyA',\n    'Space'\n  ];\n\n  const codeBuffer = [];\n\n  window.onkeyup = (ev) => {\n    codeBuffer.push(ev.code);\n    if (codeBuffer.length > easterCode.length) {\n      codeBuffer.shift();\n    }\n\n    if (codeBuffer.length == easterCode.length) {\n      let valid = true;\n      for (let i = 0; i < easterCode.length; i++) {\n        if (easterCode[i] !== codeBuffer[i]) {\n          valid = false;\n          break;\n        }\n      }\n      if (valid) {\n        easterEgg.set(true);\n      }\n    }\n\n    if (ev.code == 'KeyD') {\n      doggoNeedsPats.set(true);\n    }\n  };\n}\n","<script lang=\"ts\">\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import ModCard from '$lib/components/mods/ModCard.svelte';\n  import Doggo from '$lib/components/general/Doggo.svelte';\n  import { assets } from '$app/paths';\n  import { onMobile, easterEgg, doggoNeedsPats } from '$lib/stores/global';\n  import type { PageData } from './$types';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let data: PageData;\n\n  const { mods } = data;\n\n  export const { t } = getTranslate();\n\n  const gridClasses = '3xl:grid-cols-4 lg:grid-cols-2 grid-cols-1';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Satisfactory Mod Repository\" title=\"Home\" />\n</svelte:head>\n\n<Doggo dogVisible={doggoNeedsPats} />\n\n<div class=\"flex flex-col min-h-full\" style=\"height: calc(100vh - 64px - 3rem)\">\n  <div class=\"mb-4 min-h-[25vh] overflow-hidden\">\n    {#if !$onMobile}\n      <a href=\"https://smm.ficsit.app\" rel=\"noopener\" target=\"_blank\">\n        <div class=\"card h-full\">\n          <div class=\"relative h-full w-full\">\n            <div class=\"banner smm-banner\" />\n            <div class=\"flex absolute w-full h-full top-0 items-center justify-center\">\n              {#if $easterEgg}\n                <img class=\"h-full flipper-1\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n                <img class=\"h-full flipper-2\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {:else}\n                <img class=\"h-full flipped\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {/if}\n              <div class=\"text-center\">\n                <div class=\"text-4xl mb-2\">{$t('home.satisfactory-mod-manager')}</div>\n                <div class=\"text-xl mb-4\">\n                  Windows - Linux - Epic - Steam\n                  {#if $easterEgg || $doggoNeedsPats}{' - Doggo'}{/if}\n                </div>\n                <div class=\"2xl:h-1/2 h-1/3 flex justify-center\">\n                  <img class=\"h-full\" src={assets + '/images/smm_icon_white.webp'} alt=\"Satisfactory Mod Manager\" />\n                </div>\n              </div>\n              {#if $easterEgg}\n                <img class=\"h-full flipper-3\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n                <img class=\"h-full flipper-4\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {:else}\n                <img class=\"h-full\" src={assets + '/images/smm_hand.webp'} alt=\"Ficsit Minion\" />\n              {/if}\n            </div>\n          </div>\n        </div>\n      </a>\n    {:else}\n      <a href=\"/mods\" class=\"overflow-hidden\">\n        <div class=\"card h-full\">\n          <div class=\"relative h-full w-full\">\n            <div class=\"smm-banner banner\" />\n            <div class=\"flex absolute w-full h-full top-0 items-center justify-end text-center\">\n              <img class=\"h-full\" src={assets + '/images/mods_mobile.webp'} alt=\"Ficsit Minion\" />\n            </div>\n            <div class=\"flex absolute w-full h-4/5 top-0 items-center pl-8\">\n              <div>\n                <div class=\"text-md\">\n                  {$t('home.banner.we-have-over')}\n                  <span class=\"text-amber-600 font-bold\">\n                    {#if $mods.fetching || $mods.error}\n                      ...\n                    {:else}\n                      {$mods.data.getMods.count}\n                    {/if}\n                  </span>\n                  {$t('home.banner.mods')}!\n                </div>\n                <div class=\"text-md max-w-prose\">{$t('home.banner.most-are-compatible')}</div>\n              </div>\n            </div>\n            <div class=\"flex absolute w-full h-full top-0 items-end justify-center\">\n              <button class=\"btn h-1/4 py-3 px-14 w-full\" style=\"background: #5a7b78; color: white\">\n                {$t('home.banner.take-a-look')}\n              </button>\n            </div>\n          </div>\n        </div>\n      </a>\n    {/if}\n  </div>\n\n  <div class=\"grid xl:grid-cols-2 grid-cols-1 gap-4 flex-1 mb-4\">\n    <a href=\"https://discord.gg/xkVJ73E\" rel=\"noopener\" target=\"_blank\" class=\"overflow-hidden min-h-[25vh]\">\n      <div class=\"card h-full\">\n        <div class=\"relative h-full w-full\">\n          <div class=\"modding-banner banner\" />\n          <div class=\"flex absolute w-full h-full top-0 items-center justify-center\">\n            <img class=\"centered-logo\" src={assets + '/images/sf_modding_logo.webp'} alt=\"Satisfactory Modding Logo\" />\n          </div>\n          <div class=\"absolute bottom-0 pb-4 px-4 w-full text-gray-400 text-center xl:text-left\">\n            <span>{$t('home.banner.community-run-discord')}</span>\n          </div>\n        </div>\n      </div>\n    </a>\n    <a href=\"https://www.satisfactorygame.com/\" rel=\"noopener\" target=\"_blank\" class=\"overflow-hidden min-h-[25vh]\">\n      <div class=\"card h-full\">\n        <div class=\"relative h-full w-full\">\n          <div class=\"css-banner banner\" />\n          <div class=\"flex absolute w-full h-full top-0 items-center justify-center\">\n            <img\n              class=\"centered-logo\"\n              src={assets + '/images/satisfactory_logo_full_color_small.webp'}\n              alt=\"Satisfactory Logo\" />\n          </div>\n          <div class=\"absolute bottom-0 pb-4 px-4 w-full text-gray-300 text-center xl:text-right\">\n            <span>{$t('home.banner.official-website')}</span>\n          </div>\n        </div>\n      </div>\n    </a>\n  </div>\n\n  {#if $mods.fetching}\n    <div class=\"grid {gridClasses} gap-4\">\n      {#each Array(4) as _}\n        <FicsitCard fake />\n      {/each}\n    </div>\n  {:else if $mods.error}\n    <p>{$t('error.oh-no')} {$mods.error.message}</p>\n  {:else}\n    <div class=\"grid {gridClasses} gap-4\">\n      {#each $mods.data.getMods.mods as mod}\n        <ModCard {mod} />\n      {/each}\n    </div>\n  {/if}\n</div>\n\n<style lang=\"postcss\">\n  .smm-banner {\n    background-image: url('/images/smm_background.webp');\n    filter: blur(8px);\n    -webkit-filter: blur(8px);\n  }\n\n  .modding-banner {\n    background-image: url('/images/bg_nologo.webp');\n    filter: blur(8px);\n    -webkit-filter: blur(8px);\n  }\n\n  .css-banner {\n    background-image: url('/images/Satisfactory_KeyArt_1_1024x1024_NoLogo.webp');\n    filter: blur(8px) brightness(0.5);\n    -webkit-filter: blur(8px) brightness(0.5);\n  }\n\n  .banner {\n    height: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n\n  .centered-logo {\n    max-height: 50%;\n    max-width: 60%;\n  }\n\n  .flipped {\n    transform: scaleX(-1);\n  }\n\n  .flipper-1 {\n    animation: 0.11s linear 1s infinite alternate flipper;\n  }\n\n  .flipper-2 {\n    animation: 0.12s linear 1s infinite alternate flipper;\n  }\n\n  .flipper-3 {\n    animation: 0.13s linear 1s infinite alternate flipper;\n  }\n\n  .flipper-4 {\n    animation: 0.14s linear 1s infinite alternate flipper;\n  }\n\n  @keyframes flipper {\n    from {\n      transform: scaleX(-1);\n    }\n    to {\n      transform: scaleX(1);\n    }\n  }\n\n  @media (min-width: 1280px) {\n    .centered-logo {\n      max-height: 15vh;\n    }\n  }\n</style>\n"],"names":["load","async","parent","loadWaitForNoFetch","mods","queryStore","query","GetModsDocument","client","variables","offset","limit","order","Order","Desc","orderBy","ModFields","LastVersionDate","attr_dev","img","img_class_value","null_to_empty","ctx","img_src_value","insert_hydration_dev","target","anchor","dirty","create_if_block","dogVisible","writable","$$props","x","spring","stiffness","damping","precision","y","sprite","assets","last_mouse","clientX","clientY","patting","update_pos","event","$$invalidate","pat","try_pat","isClose","end_pat","actual_mouse_x","setTimeout","set_store_value","$dogVisible","$x","$y","actual_mouse_y","dx","Math","abs","dy","isLookingRight","head_offset","set","mobileQuery","window","matchMedia","onMobile","matches","doggoNeedsPats","easterEgg","addEventListener","data","easterCode","codeBuffer","onkeyup","ev","push","code","length","shift","valid","i","t2_value","t5_value","t8_value","t10_value","fetching","error","create_if_block_6","src_url_equal","src","a","append_hydration_dev","div8","div7","div0","div1","div5","div4","div2","span","div3","div6","button","set_data_dev","t2","t5","t8","t10","create_if_block_5","if_block1","create_if_block_4","create_if_block_3","t_1_value","getMods","count","t_1","img0","img0_src_value","img1","img1_src_value","each_value_1","ensure_array_like_dev","gridClasses","div","each_blocks","t0_value","message","p","t0","each_value","Array","t9_value","create_if_block_2","div12","div11","a0","span0","a1","div10","div9","span1","current","t9","t","getTranslate"],"mappings":"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"}