{"version":3,"file":"25.7105795a.js","sources":["../../../../../../src/routes/settings/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { getContextClient } from '@urql/svelte';\n  import { UpdateUserDocument } from '$lib/generated';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { goto } from '$app/navigation';\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { user } from '$lib/stores/user';\n  import * as zod from 'zod';\n  import type { Form } from '@felte/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import Textfield from '@smui/textfield';\n  import type { Writable } from 'svelte/store';\n  import Button from '@smui/button';\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const client = getContextClient();\n\n  export const userSchema = zod.object({\n    avatar: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n    username: zod.string().min(3).max(32)\n  });\n\n  let form: Form<{ [key: string]: string }>['form'];\n  let data: Writable<{ username: string }>;\n\n  $: {\n    if ($user && !data) {\n      const createdForm = createForm<{ username: string }>({\n        initialValues: {\n          username: $user.username\n        },\n        extend: [validator({ schema: userSchema }), reporter],\n        onSubmit: (submitted: { username: string; avatar: unknown }) => {\n          console.log('submitted', submitted);\n          client\n            .mutation(UpdateUserDocument, {\n              user: trimNonSchema(submitted, userSchema),\n              userId: $user.id\n            })\n            .toPromise()\n            .then((value) => {\n              if (value.error) {\n                console.error(value.error.message);\n                errorMessage = 'Error editing user: ' + value.error.message;\n                errorToast = true;\n              } else {\n                // TODO Toast or something\n                goto(base + '/user/' + value.data.updateUser.id);\n              }\n            });\n        }\n      });\n\n      form = createdForm.form;\n      data = createdForm.data;\n    }\n  }\n\n  $: if (!errorToast) {\n    errorMessage = '';\n  }\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Change your user settings\" title=\"Settings\" />\n</svelte:head>\n\n<h1 class=\"text-4xl my-4 font-bold\">Settings</h1>\n\n<Card>\n  <Content>\n    {#if $user === null}\n      <p>Please log in</p>\n    {:else}\n      <form use:form>\n        <div class=\"grid grid-flow-row gap-6\">\n          <div class=\"grid grid-flow-row gap-2\">\n            <label for=\"avatar\">Avatar:</label>\n            <input\n              id=\"avatar\"\n              class=\"base-input\"\n              name=\"avatar\"\n              type=\"file\"\n              accept=\"image/png,image/jpeg,image/gif\"\n              placeholder=\"Avatar\" />\n            <ValidationMessage for=\"avatar\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div class=\"grid grid-flow-row gap-2\">\n            <Textfield bind:value={$data.username} label=\"Username\" required />\n            <ValidationMessage for=\"username\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div>\n            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n          </div>\n        </div>\n      </form>\n    {/if}\n  </Content>\n</Card>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n"],"names":["message","ctx","username","textfield_props","value","insert_hydration_dev","target","form_1","anchor","append_hydration_dev","div3","div0","label","input","div1","div2","textfield_changes","p","t_value","span","dirty","set_data_dev","t","h1","errorMessage","errorToast","client","getContextClient","userSchema","zod.object","avatar","zod.optional","zod.any","refine","logo","zod.string","min","max","form","data","$$self","$$","not_equal","$data","$user","createdForm","createForm","initialValues","extend","validator","schema","reporter","onSubmit","submitted","console","log","mutation","UpdateUserDocument","user","trimNonSchema","userId","id","toPromise","then","error","$$invalidate","goto","base","updateUser"],"mappings":"06BA4F0DA,CAAO,KAAA,CAAA,GAAAA,eAAPA,CAAAA,IAAOA,EAAA,KAAA,CAAA,CAAA,4FAM9B,EAAAC,GAAMC,EAAAA,WAAAA,SAANC,GAAAC,MAAAH,KAAMC,wIACmBF,CAAAA,KAAO,CAAA,GAAAA,eAAPA,CAAOA,IAAAA,EAAA,KAAA,CAAA,CAAA,mNAfnC,mTAAA,SAAA,wxBAH1BK,CAAAA,EA2BMC,EAAAC,EAAAC,CAAAA,EA1BJC,EAyBKF,EAAAG,CAxBHD,EAAAA,EAYKC,EAAAC,CAAAA,EAXHF,EAAkCE,EAAAC,CAAAA,cAClCH,EAAAA,EAMwBE,EAAAE,6BAM1BJ,EAKKC,EAAAI,yCAELL,EAEKC,EAAAK,2JARoBC,EAAAZ,MAAAH,KAAMC,2iBAnBhC,wEAAA,uFAAHG,EAAmBC,EAAAW,EAAAT,gLAcuBU,GAAAjB,IAAW,GAAA,IAAE,4NAA/CI,EAAsDC,EAAAa,EAAAX,CAAAA,yBAApB,CAAAY,EAAA,MAAAF,KAAAA,GAAAjB,IAAW,GAAA,IAAE,KAAAoB,EAAAC,EAAAJ,uMAObA,GAAAjB,IAAW,GAAA,IAAE,4NAA/CI,EAAsDC,EAAAa,EAAAX,CAAAA,0BAApBY,EAAA,MAAAF,KAAAA,GAAAjB,OAAW,IAAE,KAAAoB,EAAAC,EAAAJ,CAAAA,kOAKR,MAAA,uBAAA,MAAA,gQA3B5C,CAAA,OAAAjB,OAAU,KAAI,w/BAoCdA,EAAY,CAAA,CAAA,4DAAZA,EAAY,0EAAnBI,CAAAA,EAA0BC,EAAAa,EAAAX,oCAAnBP,EAAY,oaADAA,EAAU,CAAA,IAAA,mBAAVA,EAAU,8HAvCK,UAAA,kMAAA,UAAA,oMAApCI,EAAgDC,EAAAiB,EAAAf,CAAAA,sMAuC3BP,EAAU,mgBA9FzB,IAAAuB,EAAe,GACfC,EAAa,GAEX,MAAAC,EAASC,GAAAA,EAEFC,EAAaC,GAAU,CAClCC,OAAQC,GAAaC,GAAUC,EAAAA,OAAQC,GAAS,SAAUA,GAAQ,SAAUA,GAAQ,SAAUA,IAC9FhC,SAAUiC,GAAAA,EAAaC,IAAI,CAAA,EAAGC,IAAI,UAGhCC,EACAC,gKAoE6BC,EAAAC,GAAAC,UAAAC,EAAMzC,SAAQE,CAAAA,IAAduC,EAAMzC,SAAQE,0BAe5BqB,EAAUrB,8kBAhFvBwC,GAAUL,CAAAA,EAAI,CACV,MAAAM,EAAcC,GAAU,CAC5BC,cACE,CAAA7C,SAAU0C,EAAM1C,UAElB8C,QAASC,GAAS,CAAGC,OAAQtB,CAAAA,CAAAA,EAAeuB,EAC5CC,EAAAA,SAAWC,IACTC,QAAQC,IAAI,YAAaF,CAAAA,EACzB3B,EACG8B,SAASC,GAAkB,CAC1BC,KAAMC,GAAcN,EAAWzB,CAC/BgC,EAAAA,OAAQhB,EAAMiB,EAEfC,CAAAA,EAAAA,UAAAA,EACAC,KAAM3D,GAAAA,CACDA,EAAM4D,OACRV,QAAQU,MAAM5D,EAAM4D,MAAMhE,OAAAA,EAC1BiE,EAAA,EAAAzC,EAAe,uBAAyBpB,EAAM4D,MAAMhE,OAAAA,EACpDiE,EAAA,EAAAxC,EAAa,KAGbyC,GAAKC,GAAO,SAAW/D,EAAMmC,KAAK6B,WAAWP,aAMvDvB,EAAOO,EAAYP,YACnBC,EAAOM,EAAYN,IAAAA,CAAAA,iBAIfd,GACNwC,EAAA,EAAAzC,EAAe,EAAA"}