{"version":3,"file":"17.DT2NftUu.js","sources":["../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.ts","../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../src/routes/mod/[modId]/version/[versionId]/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\nimport { queryStore } from '@urql/svelte';\nimport { GetModVersionDocument } from '$lib/generated';\nimport { loadWaitForNoFetch } from '$lib/utils/gql';\n\nexport const load: PageLoad = async ({ params, parent }) => ({\n  ...params,\n  ...(await loadWaitForNoFetch({\n    version: queryStore({\n      query: GetModVersionDocument,\n      client: (await parent()).client,\n      variables: { version: params.versionId }\n    })\n  }))\n});\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n  import { markdown } from '$lib/utils/markdown';\n  import AnnouncementRow from '../announcements/AnnouncementRow.svelte';\n\n  export let changelog!: string;\n  export let approved: boolean;\n</script>\n\n<div>\n  {#if !approved}\n    <div class=\"p-4\">\n      <AnnouncementRow\n        importance={AnnouncementImportance.Warning}\n        message=\"This version has not yet been approved by the virus scanner and is hidden until this process is complete. If this message isn't gone in the next few minutes, ask for manual approval on the Discord.\" />\n    </div>\n  {/if}\n  <div class=\"card h-fit p-4\">\n    <section>\n      <div class=\"markdown-content break-words\">\n        {#await markdown(changelog) then changelogRendered}\n          <!-- eslint-disable -->\n          <p>{@html changelogRendered}</p>\n        {/await}\n      </div>\n    </section>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let version!: Pick<Version, 'created_at' | 'game_version' | 'size' | 'stability' | 'downloads' | 'hash'>;\n\n  export const { t } = getTranslate();\n</script>\n\n<div class=\"card p-4\">\n  <section>\n    <div class=\"break-words text-lg\">\n      <h3 class=\"my-4 text-2xl font-bold\">Info</h3>\n      <span><strong>{$t('entry.created-at')}:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>{$t('downloads')}:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>{$t('game-versions')}:</strong> {version.game_version}</span><br />\n      <span><strong>{$t('stability')}:</strong> {version.stability}</span><br />\n      <span><strong>{$t('size')}:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>{$t('hash')}:</strong> {version.hash}</span>\n    </div>\n  </section>\n</div>\n","<script lang=\"ts\">\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import { API_REST } from '$lib/core';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyTarget } from '$lib/utils/formatting';\n  import VersionTargetSupportGrid from '$lib/components/versions/VersionTargetSupportGrid.svelte';\n  import VersionDependenciesGrid from '$lib/components/versions/VersionDependenciesGrid.svelte';\n  import { getContextClient } from '@urql/svelte';\n  import type { PageData } from './$types';\n  import { getModalStore, getToastStore, type ModalSettings, popup } from '@skeletonlabs/skeleton';\n  import Page404 from '$lib/components/general/Page404.svelte';\n\n  export let data: PageData;\n\n  const { modId, versionId, version } = data;\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteVersionFn = () => {\n    client\n      .mutation(DeleteVersionDocument, { versionId })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          toastStore.trigger({\n            message: 'Error deleting version: ' + value.error.message,\n            background: 'variant-filled-error',\n            autohide: false\n          });\n        } else {\n          toastStore.trigger({\n            message: `Version deleted`,\n            background: 'variant-filled-success',\n            timeout: 5000\n          });\n          goto(base + '/mod/' + modId);\n        }\n      });\n  };\n\n  const deleteModal: ModalSettings = {\n    type: 'confirm',\n    title: 'Delete Version?',\n    body: 'Are you sure you wish to delete this version?',\n    response: (r: boolean) => {\n      if (r) {\n        deleteVersionFn();\n      }\n    }\n  };\n\n  const modalStore = getModalStore();\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex h-auto flex-wrap items-center justify-between\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <button\n            class=\"variant-ghost-primary btn\"\n            on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            <span class=\"material-icons pr-2\">edit_document</span>\n            Edit\n          </button>\n          <button class=\"variant-ghost-primary btn\" on:click={() => modalStore.trigger(deleteModal)}>\n            <span class=\"material-icons pr-2\">delete</span>\n            Delete</button>\n        {/if}\n        {#if $version.data.getVersion.targets.length != 0}\n          <button\n            class=\"variant-ghost-primary btn\"\n            title=\"Download a specific release target of this mod\"\n            use:popup={{\n              event: 'focus-click',\n              target: 'versionArchDropdown',\n              placement: 'bottom',\n              closeQuery: 'a'\n            }}>\n            <span>Download...</span>\n            <span class=\"material-icons\" style=\"margin: 0;\">arrow_drop_down</span>\n          </button>\n\n          <div class=\"card z-10 w-72 shadow-xl\" data-popup=\"versionArchDropdown\">\n            <nav class=\"list-nav\">\n              <ul>\n                {#each $version.data.getVersion.targets as target}\n                  <li>\n                    <a\n                      class=\"w-full\"\n                      href={API_REST +\n                        '/mod/' +\n                        modId +\n                        '/versions/' +\n                        versionId +\n                        '/' +\n                        target.targetName +\n                        '/download'}>\n                      <span>Download {prettyTarget(target.targetName)}</span>\n                    </a>\n                  </li>\n                {/each}\n              </ul>\n            </nav>\n          </div>\n        {:else}\n          <a class=\"variant-ghost-primary btn\" href={base + '/mod/' + modId + '/version/' + versionId}>View</a>\n          <a\n            class=\"variant-ghost-primary btn\"\n            href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}>Download</a>\n        {/if}\n        <button\n          class=\"variant-ghost-primary btn\"\n          title=\"Install via Satisfactory Mod Manager\"\n          on:click={() => installMod($version.data.getVersion.mod.mod_reference)}>\n          <span class=\"material-icons\">download</span>\n          <span>Install</span>\n        </button>\n        <a\n          class=\"variant-ghost-primary btn\"\n          href={base + '/mod/' + modId}\n          title=\"View the description page for this mod\">\n          <span class=\"material-icons\">extension</span>\n          <span>Back to Mod</span>\n        </a>\n      </div>\n    </div>\n    <div class=\"grid-auto-max grid auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} approved={$version.data.getVersion.approved} />\n      <div class=\"grid auto-rows-min grid-cols-1 gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n        <VersionTargetSupportGrid targets={$version.data.getVersion.targets} />\n        <VersionDependenciesGrid dependencies={$version.data.getVersion.dependencies} />\n      </div>\n    </div>\n  </div>\n{:else}\n  <Page404 />\n{/if}\n"],"names":["load","async","params","parent","loadWaitForNoFetch","version","queryStore","query","GetModVersionDocument","client","variables","versionId","importance","AnnouncementImportance","Warning","insert_hydration_dev","target","div","anchor","ctx","p","html_tag","raw_value","create_if_block","handle_promise","promise","markdown","info","div2","append_hydration_dev","div1","section","div0","dirty","changelog","$$props","approved","t2_value","prettyDate","created_at","t7_value","prettyNumber","downloads","t12_value","t15_value","game_version","t17_value","t20_value","stability","t22_value","prettyBytes","size","t27_value","t30_value","hash","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","br4","span5","strong5","set_data_dev","t2","t5","t5_value","t7","t10","t10_value","t12","t15","t17","t20","t22","t25","t25_value","t27","t30","t","getTranslate","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","create_if_block_4","targets","length","create_if_block_3","dependencies","base","div4","h1","button","a","div3","current","t0","versiondescription_changes","versiontargetsupportgrid_changes","versiondependenciesgrid_changes","error","message","t1","t1_value","button0","button1","attr_dev","a0","API_REST","a1","each_value","ensure_array_like_dev","i","nav","ul","event","placement","closeQuery","prettyTarget","targetName","a_href_value","li","span","fetching","create_if_block_5","modId","getContextClient","toastStore","getToastStore","deleteVersionFn","mutation","DeleteVersionDocument","toPromise","then","value","console","trigger","background","autohide","timeout","goto","deleteModal","type","body","response","r","modalStore","getModalStore","installMod","$version","mod_reference","$$invalidate","canUserEdit","$user","roles","deleteContent","authors","findIndex","author","user_id","id"],"mappings":"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"}