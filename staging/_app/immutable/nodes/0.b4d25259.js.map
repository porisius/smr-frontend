{"version":3,"mappings":"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","names":["initializeGraphQLClient","fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfo","VersionTarget","VersionDependency","updates","Mutation","_result","args","cache","invalidate","__typename","id","guideId","modId","versionId","smlVersionId","authExchange","async","utils","token","get","userToken","operation","appendHeaders","Authorization","error","message","indexOf","refreshAuth","persistedExchange","preferGetForPersistedQueries","fetchExchange","prerender","load","client","chainer","Tolgee","use","FormatSimple","LanguageDetector","DevTools","tolgee","init","defaultNs","defaultLanguage","fallbackLanguage","apiUrl","PUBLIC_TOLGEE_API_URL","apiKey","PUBLIC_TOLGEE_API_KEY","staticData","enCommon","deCommon","frCommon","lvCommon","mtCommon","zhHansCommon","zhHantCommon","a","t0_value","ctx","t2_value","t4_value","insert_hydration_dev","target","button0","anchor","button1","button2","dirty","set_data_dev","t0","t2","t4","p","t1","t1_value","div","current","fetching","div2","append_hydration_dev","h2","div1","div0","signingIn","$$props","t","getTranslate","getContextClient","goTo","service","localStorage","setItem","goto","conicStops","color","start","end","oauthOptions","queryStore","query","GetOAuthOptionsDocument","variables","callback_url","encodeURIComponent","window","location","origin","pathname","requestPolicy","$oauthOptions","data","getOAuthOptions","github","google","facebook","toastStore","getToastStore","getMe","GetMeDocument","pause","first","subscribe","oneMonth","Date","getTime","cookie","set","domain","hostname","expires","mutation","LogoutDocument","undefined","toPromise","catch","then","remove","resume","unsub","response","console","user","signInMethods","OAuthGithubDocument","OAuthGoogleDocument","OAuthFacebookDocument","modalStore","getModalStore","signInMethod","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","trigger","loginModal","result","background","autohide","session","close","$$invalidate","type","component","ref","LoginModal","props","username","t6_value","create_if_block_3","attr_dev","div0_style_value","avatar","span0","span1","t6","button","icon","label","a_href_value","external","create_if_block_1","li","create_if_block","t9_value","create_if_block_2","i","nav0","ul0","hr","nav1","ul1","nav2","ul2","li0","li1","span2","t9","accessibility","click_handler","base","click_handler_2","$user","preloadData","item","value","currentPath","isAdmin","roles","approveMods","approveVersions","editSMLVersions","top","$t","bottom","div2_class_value","span","b","monospacePrefix","iconNames","AnnouncementImportance","Info","Alert","Warning","Fix","backgroundColors","importance","isMonospace","startsWith","finalMessage","replaceAll","getAnnouncements","each_blocks","announcementrow_changes","announcements","GetAnnouncementsDocument","name","flag","toggle_class","nav","ul","getTolgee","languages","en","de","fr","lv","mt","lang","writable","$tolgee","getLanguage","l","changeLanguage","languageMenuBox","event","placement","closeQuery","k","pingLauncher","t8_value","div1_style_value","div4","div3","li2","button3","t8","drawerStore","getDrawerStore","userMenuBox","openSidebar","open","width","script0","script0_src_value","script1","main","aside","document_1","head","link0","link1","link2","link3","link4","link5","link6","meta0","meta1","meta2","link7","initializeStores","storePopup","computePosition","autoUpdate","offset","shift","flip","arrow","gTag","PUBLIC_GOOGLE_SITE_TAG","root","onMount","document","body","n","b7","on","cookieconsent","initialise","palette","popup","content","link","dismiss","theme","position","customProtocolCheck","import","toLocaleLowerCase","hasLauncher","toString","setContextClient","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/routes/+layout.ts","../../../../../../src/lib/modals/LoginModal.svelte","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/lib/components/announcements/AnnouncementRow.svelte","../../../../../../src/lib/components/announcements/AnnouncementHeader.svelte","../../../../../../src/lib/components/general/TranslationDropdown.svelte","../../../../../../src/lib/components/general/TopBar.svelte","../../../../../../src/routes/+layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport { createClient, fetchExchange, type Client } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedExchange } from '@urql/exchange-persisted';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { LoadEvent } from '@sveltejs/kit';\nimport { get } from 'svelte/store';\n\nexport const initializeGraphQLClient = (fetch?: LoadEvent['fetch']): Client =>\n  createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfo: () => null,\n          VersionTarget: () => null,\n          VersionDependency: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange(async (utils) => {\n        const token = get(userToken);\n        return {\n          addAuthToOperation(operation) {\n            return utils.appendHeaders(operation, {\n              Authorization: token\n            });\n          },\n          didAuthError(error) {\n            return error.message.indexOf('user not logged in') >= 0;\n          },\n          async refreshAuth() {\n            // Token cannot be refreshed currently\n          }\n        };\n      }),\n      persistedExchange({\n        preferGetForPersistedQueries: true\n      }),\n      fetchExchange\n    ]\n  });\n","import type { LayoutLoad } from './$types';\nimport { initializeGraphQLClient } from '$lib/core';\nimport { DevTools, FormatSimple, LanguageDetector, Tolgee } from '@tolgee/svelte';\nimport { browser } from '$app/environment';\nimport { PUBLIC_TOLGEE_API_KEY, PUBLIC_TOLGEE_API_URL } from '$env/static/public';\n\nimport enCommon from '../i18n/common/en.json';\nimport deCommon from '../i18n/common/de.json';\nimport frCommon from '../i18n/common/fr.json';\nimport lvCommon from '../i18n/common/lv.json';\nimport mtCommon from '../i18n/common/mt.json';\nimport zhHansCommon from '../i18n/common/zh-Hans.json';\nimport zhHantCommon from '../i18n/common/zh-Hant.json';\n\nexport const prerender = 'auto';\n\nexport const load: LayoutLoad = async ({ fetch }) => {\n  const client = initializeGraphQLClient(fetch);\n\n  let chainer = Tolgee().use(FormatSimple());\n\n  if (browser) {\n    chainer = chainer.use(LanguageDetector()).use(DevTools());\n  }\n\n  const tolgee = chainer.init({\n    defaultNs: 'common',\n\n    defaultLanguage: 'en',\n    fallbackLanguage: 'en',\n\n    apiUrl: browser ? PUBLIC_TOLGEE_API_URL : undefined,\n    apiKey: browser ? PUBLIC_TOLGEE_API_KEY : undefined,\n\n    staticData: {\n      'en:common': enCommon,\n      'de:common': deCommon,\n      'fr:common': frCommon,\n      'lv:common': lvCommon,\n      'mt:common': mtCommon,\n      'zh-Hans:common': zhHansCommon,\n      'zh-Hant:common': zhHantCommon\n    }\n  });\n\n  if (!browser) {\n    await tolgee.run();\n  }\n\n  return {\n    client,\n    tolgee\n  };\n};\n","<script lang=\"ts\">\n  import { getTranslate } from '@tolgee/svelte';\n  import { goto } from '$app/navigation';\n  import { ConicGradient, type ConicStop } from '@skeletonlabs/skeleton';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { GetOAuthOptionsDocument } from '$lib/generated';\n  import { browser } from '$app/environment';\n\n  export let signingIn = false;\n\n  export const { t } = getTranslate();\n\n  const client = getContextClient();\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n\n  const conicStops: ConicStop[] = [\n    { color: 'transparent', start: 0, end: 25 },\n    { color: 'rgb(var(--color-primary-500))', start: 75, end: 100 }\n  ];\n\n  const oauthOptions = queryStore({\n    query: GetOAuthOptionsDocument,\n    client,\n    variables: { callback_url: browser ? encodeURIComponent(window.location.origin + window.location.pathname) : '' },\n    requestPolicy: 'network-only'\n  });\n</script>\n\n<div class=\"card p-4 flex flex-col gap-2\">\n  <h2 class=\"text-2xl\">{$t('user.sign-in')} / {$t('user.sign-up')}</h2>\n  <div>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>{$t('user.logging-in')}...</p>\n        <div class=\"flex justify-center\">\n          <ConicGradient stops={conicStops} spin>Loading</ConicGradient>\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>{$t('loading')}...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          {$t('login-dialog.sign-in-with-github')}\n        </button>\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          {$t('login-dialog.sign-in-with-google')}\n        </button>\n        <button\n          class=\"btn variant-ghost-primary\"\n          on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          {$t('login-dialog.sign-in-with-facebook')}\n        </button>\n      {/if}\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {\n    GetMeDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { browser } from '$app/environment';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore, getToastStore, type ModalSettings } from \"@skeletonlabs/skeleton\";\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  export const { t } = getTranslate();\n\n  if (browser) {\n    const getMe = queryStore({\n      query: GetMeDocument,\n      client,\n      variables: {},\n      requestPolicy: 'network-only',\n      pause: true\n    });\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        client\n          .mutation(LogoutDocument, undefined, {\n            requestPolicy: 'network-only'\n          })\n          .toPromise()\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.pause();\n        getMe.resume();\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: OAuthGithubDocument,\n    google: OAuthGoogleDocument,\n    facebook: OAuthFacebookDocument\n  };\n\n  let signingIn = false;\n\n  $: loginModal = {\n    type: 'component',\n    component: {\n      ref: LoginModal,\n      props: {\n        signingIn\n      }\n    }\n  } satisfies ModalSettings;\n\n  const modalStore = getModalStore();\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams.code;\n    const state = queryParams.state;\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      modalStore.trigger(loginModal);\n\n      client\n        .mutation(signInMethods[signInMethod as 'github' | 'google' | 'facebook'], {\n          code,\n          state\n        })\n        .toPromise()\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            toastStore.trigger({\n              message: 'Error logging in: ' + result.error.message,\n              background: 'variant-filled-error',\n              autohide: false\n            });\n          } else {\n            userToken.set(result.data.session.token);\n            modalStore.close();\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n</script>\n","<script lang=\"ts\">\n  import { getModalStore, SlideToggle } from '@skeletonlabs/skeleton';\n  import { goto, preloadData } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { getTranslate } from '@tolgee/svelte';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  export let accessibility: boolean;\n\n  export const { t } = getTranslate();\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  $: top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: $t('sidebar.home')\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: $t('sidebar.mods')\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: $t('sidebar.guides')\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: $t('sidebar.sml-versions')\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: $t('sidebar.tools')\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: $t('discord'),\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: $t('sidebar.docs'),\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: $t('sidebar.forums'),\n      external: true\n    }\n  ];\n\n  $: bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: $t('sidebar.help')\n    },\n    {\n      url: base + '/content-policy',\n      icon: 'verified_user',\n      label: $t('content-policy')\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: $t('sidebar.privacy-policy')\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: $t('sidebar.tos')\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: $t('sidebar.api')\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: $t('sidebar.github'),\n      external: true\n    }\n  ];\n\n  const modalStore = getModalStore();\n</script>\n\n<div class=\"p-4 overflow-y-auto flex flex-col justify-between h-full max-w-xl\">\n  <div class=\"flex flex-col h-full max-w-xl gap-4\">\n    <nav class=\"list-nav xl:hidden\">\n      <ul>\n        {#if $user === null}\n          <button\n            on:click={() =>\n              modalStore.trigger({\n                type: 'component',\n                component: {\n                  ref: LoginModal\n                }\n              })}\n            class=\"w-full\">\n            <span class=\"material-icons\">login</span>\n            <span>{$t('user.sign-in')}</span>\n          </button>\n        {:else}\n          {#if isAdmin}\n            <button on:click={() => goto(base + '/admin')} class=\"w-full\">\n              <span class=\"material-icons\">admin_panel_settings</span>\n              <span>Admin</span>\n            </button>\n          {/if}\n          <button class=\"grid grid-flow-col w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n            <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n            <div>{$user.username}</div>\n          </button>\n\n          <button on:click={() => userToken.set(null)} class=\"w-full\">\n            <span class=\"material-icons\">logout</span>\n            <span>{$t('user.logout')}</span>\n          </button>\n        {/if}\n      </ul>\n    </nav>\n\n    <div class=\"xl:hidden\">\n      <hr />\n    </div>\n\n    <nav class=\"list-nav\">\n      <ul>\n        {#each top as item}\n          <li>\n            {#if !item.external}\n              <a\n                href={item.url}\n                class:bg-primary-active-token={currentPath === item.url}\n                on:mouseover={() => preloadData(item.url)}\n                on:focus={() => preloadData(item.url)}>\n                <span class=\"material-icons\">{item.icon}</span>\n                <span class=\"flex-auto\">{item.label}</span>\n              </a>\n            {:else}\n              <a href={item.url} target=\"_blank\" rel=\"noopener\">\n                <span class=\"material-icons\">{item.icon}</span>\n                <span class=\"flex-auto\">{item.label}</span>\n              </a>\n            {/if}\n          </li>\n        {/each}\n      </ul>\n    </nav>\n  </div>\n\n  <nav class=\"list-nav\">\n    <ul>\n      {#each bottom as item}\n        <li>\n          {#if !item.external}\n            <a\n              href={item.url}\n              class:bg-primary-active-token={currentPath === item.url}\n              on:mouseover={() => preloadData(item.url)}\n              on:focus={() => preloadData(item.url)}>\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {:else}\n            <a href={item.url} target=\"_blank\" rel=\"noopener\">\n              <span class=\"material-icons\">{item.icon}</span>\n              <span class=\"flex-auto\">{item.label}</span>\n            </a>\n          {/if}\n        </li>\n      {/each}\n\n      <li class=\"xl:hidden\">\n        <a target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n          <span class=\"material-icons\">file_download</span>\n          <span class=\"flex-auto\">{$t('sidebar.mod-manager')}</span>\n        </a>\n      </li>\n\n      <li class=\"flex flex-row items-center justify-center gap-4 px-3 pt-2\">\n        <SlideToggle\n          bind:checked={accessibility}\n          aria-label=\"Accessibility Font\"\n          name=\"accessibility_font\"\n          size=\"sm\"\n          active=\"bg-primary-500\" />\n        <span>{$t('sidebar.accessibility-font')}</span>\n      </li>\n    </ul>\n  </nav>\n</div>\n","<script lang=\"ts\">\n  import { AnnouncementImportance } from '$lib/generated';\n\n  const iconNames: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'info',\n    [AnnouncementImportance.Alert]: 'error',\n    [AnnouncementImportance.Warning]: 'warning',\n    [AnnouncementImportance.Fix]: 'build_circle'\n  };\n  const backgroundColors: { [key in AnnouncementImportance]: string } = {\n    [AnnouncementImportance.Info]: 'bg-sky-500',\n    [AnnouncementImportance.Alert]: 'bg-red-600',\n    [AnnouncementImportance.Warning]: 'bg-yellow-400',\n    [AnnouncementImportance.Fix]: 'bg-green-600'\n  };\n  const monospacePrefix = 'monotext:';\n\n  export let message: string;\n  export let importance: AnnouncementImportance;\n\n  // Enables making monospace announcements\n  $: isMonospace = message.startsWith(monospacePrefix);\n  $: finalMessage = isMonospace ? message.replaceAll(monospacePrefix, '') : message;\n</script>\n\n<div class=\"{backgroundColors[importance]} max-h-64 overflow-hidden rounded-sm\">\n  <div class=\"p-1 striped text-black\">\n    <span class=\"material-icons text-2xl align-middle\">{iconNames[importance]}</span>\n    <div\n      class=\"align-middle text-l inline-block break-words max-w-full\"\n      class:font-mono={isMonospace}\n      class:whitespace-pre={isMonospace}>\n      <b>{importance}: </b>{finalMessage}\n    </div>\n  </div>\n</div>\n\n<style>\n  .striped {\n    background: repeating-linear-gradient(\n      45deg,\n      transparent,\n      transparent 14px,\n      rgba(60, 60, 60, 0.1) 14px,\n      rgba(60, 60, 60, 0.1) 28px\n    );\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { AnnouncementImportance, GetAnnouncementsDocument } from '$lib/generated';\n  import AnnouncementRow from './AnnouncementRow.svelte';\n\n  const client = getContextClient();\n\n  const announcements = queryStore({\n    query: GetAnnouncementsDocument,\n    client,\n    variables: {}\n  });\n</script>\n\n{#if $announcements.fetching}\n  <!-- Display nothing, don't disrupt the page for no reason -->\n{:else if $announcements.error}\n  <AnnouncementRow\n    message=\"Failed to load announcements: {$announcements.error.message}\"\n    importance={AnnouncementImportance.Warning} />\n{:else if $announcements && $announcements.data && $announcements.data.getAnnouncements}\n  <div class=\"max-h-96 overflow-y-auto flex flex-col gap-2 mr-3 mt-3 ml-3 xl:ml-0 mb-3 xl:mb-0\">\n    {#each $announcements?.data?.getAnnouncements as announcement}\n      <AnnouncementRow message={announcement.message} importance={announcement.importance} />\n    {/each}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import { getTolgee, getTranslate } from '@tolgee/svelte';\n  import { writable } from 'svelte/store';\n  import { type PopupSettings, popup } from '@skeletonlabs/skeleton';\n  import { browser } from \"$app/environment\";\n\n  const tolgee = getTolgee(['language']);\n\n  export const { t } = getTranslate();\n\n  const languages = {\n    en: {\n      name: 'English',\n      flag: '🇺🇳'\n    },\n    de: {\n      name: 'Deutsch',\n      flag: '🇩🇪'\n    },\n    fr: {\n      name: 'Français',\n      flag: '🇫🇷'\n    },\n    lv: {\n      name: 'Latviešu',\n      flag: '🇱🇻'\n    },\n    mt: {\n      name: 'Malti',\n      flag: '🇲🇹'\n    },\n    'zh-Hans': {\n      name: '简体中文',\n      flag: '🇨🇳'\n    },\n    'zh-Hant': {\n      name: '繁體中文',\n      flag: '🇹🇼'\n    }\n  } as const;\n\n  const lang = writable<string>(browser && localStorage.getItem('language') || $tolgee.getLanguage());\n  lang.subscribe((l) => {\n    $tolgee.changeLanguage(l);\n    if (browser) {\n      localStorage.setItem('language', l);\n    }\n  });\n\n  const languageMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'languageMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n</script>\n\n<button class=\"grid grid-flow-col btn btn-sm variant-ghost-primary\" use:popup={languageMenuBox}>\n  <span>{languages[$lang].name}</span>\n  <span class=\"text-xl\">{languages[$lang].flag}</span>\n</button>\n\n<div class=\"card w-48 shadow-xl py-2\" data-popup=\"languageMenuBox\">\n  <nav class=\"list-nav\">\n    <ul>\n      {#each Object.entries(languages) as [k, v]}\n        <li class:bg-primary-active-token={$lang === k}>\n          <button class=\"w-full\" on:click={() => lang.set(k)}>\n            <span>{v.name}</span>\n            <span class=\"text-xl text-white\">{v.flag}</span>\n          </button>\n        </li>\n      {/each}\n    </ul>\n  </nav>\n  <div class=\"arrow bg-surface-100-800-token\" />\n</div>\n","<script lang=\"ts\">\n  import { hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { base } from '$app/paths';\n  import TranslationDropdown from '$lib/components/general/TranslationDropdown.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { AppBar, type PopupSettings, popup, getDrawerStore, getModalStore } from '@skeletonlabs/skeleton';\n  import LoginModal from '$lib/modals/LoginModal.svelte';\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  export const { t } = getTranslate();\n\n  const drawerStore = getDrawerStore();\n\n  const userMenuBox: PopupSettings = {\n    event: 'focus-click',\n    target: 'userMenuBox',\n    placement: 'bottom',\n    closeQuery: 'li'\n  };\n\n  const modalStore = getModalStore();\n\n  const openSidebar = () => {\n    drawerStore.open({\n      width: 'w-[280px]',\n    });\n  }\n</script>\n\n<AppBar variant=\"static\">\n  <svelte:fragment slot=\"lead\">\n    <button class=\"material-icons xl:hidden btn-sm\" on:click={openSidebar}>menu</button>\n    <span class=\"text-lg\">{$t('top-bar.title')}</span>\n  </svelte:fragment>\n\n  <svelte:fragment slot=\"trail\">\n    <div class=\"hidden xl:flex xl:gap-3\">\n      <TranslationDropdown />\n\n      {#if $hasLauncher}\n        <button class=\"btn btn-sm variant-ghost-primary\" on:click={pingLauncher}>\n          <span>Launcher Detected</span>\n          <span class=\"material-icons\">file_download</span>\n        </button>\n      {:else}\n        <a class=\"btn btn-sm variant-ghost-primary\" target=\"_blank\" rel=\"noopener\" href=\"https://smm.ficsit.app\">\n          <span>Mod Manager</span>\n          <span class=\"material-icons\">file_download</span>\n        </a>\n      {/if}\n\n      {#if $user === null}\n        <button\n          class=\"btn btn-sm variant-ghost-primary\"\n          on:click={() =>\n            modalStore.trigger({\n              type: 'component',\n              component: {\n                ref: LoginModal\n              }\n            })}>\n          <span>{$t('user.sign-in')}</span>\n          <span class=\"material-icons\">login</span>\n        </button>\n      {:else}\n        {#if isAdmin}\n          <button class=\"btn btn-sm variant-ghost-primary\" on:click={() => goto(base + '/admin')}>\n            <span>Admin</span>\n            <span class=\"material-icons\">admin_panel_settings</span>\n          </button>\n        {/if}\n\n        <div>\n          <button class=\"grid grid-flow-col btn btn-sm variant-ghost-primary\" use:popup={userMenuBox}>\n            <div>{$user.username}</div>\n            <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n          </button>\n\n          <div class=\"card w-48 shadow-xl py-2\" data-popup=\"userMenuBox\">\n            <nav class=\"list-nav\">\n              <ul>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/user/' + $user.id)}>\n                    <span>{$t('top-bar.user.profile')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => goto(base + '/settings')}>\n                    <span>{$t('top-bar.user.settings')}</span>\n                  </button>\n                </li>\n                <li>\n                  <button class=\"w-full\" on:click={() => userToken.set(null)}>\n                    <span>{$t('user.logout')}</span>\n                  </button>\n                </li>\n              </ul>\n            </nav>\n            <div class=\"arrow bg-surface-100-800-token\" />\n          </div>\n        </div>\n      {/if}\n    </div>\n  </svelte:fragment>\n</AppBar>\n","<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setContextClient } from '@urql/svelte';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n  import AnnouncementHeader from '$lib/components/announcements/AnnouncementHeader.svelte';\n  import { base } from '$app/paths';\n  import { browser } from '$app/environment';\n  import { PUBLIC_GOOGLE_SITE_TAG } from '$env/static/public';\n  import type { LayoutData } from './$types';\n  import { TolgeeProvider } from '@tolgee/svelte';\n  import { initializeStores, AppShell, Modal, storePopup, Drawer, Toast } from '@skeletonlabs/skeleton';\n  import TopBar from '$lib/components/general/TopBar.svelte';\n  import './_global.postcss';\n  import { computePosition, autoUpdate, offset, shift, flip, arrow } from '@floating-ui/dom';\n\n  export let data: LayoutData;\n\n  const { client, tolgee } = data;\n\n  initializeStores();\n  storePopup.set({ computePosition, autoUpdate, offset, shift, flip, arrow });\n\n  let gTag: unknown;\n  if (browser) {\n    gTag = PUBLIC_GOOGLE_SITE_TAG as string;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    window.gTag = gTag;\n  }\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      tolgee.on('initialLoad', () => {\n        if ('cookieconsent' in window) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          // cspell:ignore initialise\n          window.cookieconsent.initialise({\n            palette: {\n              popup: {\n                background: '#000'\n              },\n              button: {\n                background: '#f1d600'\n              }\n            },\n            content: {\n              message: tolgee.t('cookieconsent.message'),\n              link: tolgee.t('cookieconsent.link'),\n              dismiss: tolgee.t('cookieconsent.dismiss')\n            },\n            theme: 'edgeless',\n            position: 'bottom-right'\n          });\n        }\n      });\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setContextClient(client);\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<TolgeeProvider {tolgee}>\n  <Toast />\n  <Modal />\n\n  <Drawer>\n    <Sidebar bind:accessibility />\n  </Drawer>\n\n  <AppShell>\n    <svelte:fragment slot=\"header\">\n      <TopBar />\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"sidebarLeft\">\n      <aside class=\"hidden xl:block h-full\">\n        <Sidebar bind:accessibility />\n      </aside>\n    </svelte:fragment>\n\n    <svelte:fragment slot=\"pageHeader\">\n      <AnnouncementHeader />\n    </svelte:fragment>\n\n    <div class=\"app-content w-full overflow-auto\">\n      <main class=\"main-content min-h-100% xl:py-6 xl:pr-3\">\n        <slot />\n      </main>\n    </div>\n  </AppShell>\n\n  <LoginDialog />\n</TolgeeProvider>\n"],"file":"_app/immutable/nodes/0.b4d25259.js"}