{"version":3,"file":"22.bM7UBvlH.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, GetTagsDocument, ModFields, Order, type Tag } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import { base } from '$app/paths';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { browser } from '$app/environment';\n  import { getTranslate } from '@tolgee/svelte';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n  import TagDisplay from '../utils/TagDisplay.svelte';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = (browser && $storePage.url.searchParams.get('q')) || '';\n\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  let perPage = 32;\n  let page = parseInt((browser && $storePage.url.searchParams.get('p')) || '0', 10) || 0;\n\n  let selectedTags: string[] = [];\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: page * perPage, limit: perPage, search, order, orderBy, tagIDs: selectedTags.sort() }\n  });\n\n  $: allTags = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {\n      limit: 100\n    }\n  });\n\n  let totalMods: number;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 0;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  export const { t } = getTranslate();\n\n  $: orderFields = [\n    [$t('sort-order.name'), 'name'],\n    [$t('sort-order.views'), 'views'],\n    [$t('sort-order.downloads'), 'downloads'],\n    [$t('sort-order.hotness'), 'hotness'],\n    [$t('sort-order.popularity'), 'popularity'],\n    [$t('sort-order.created_at'), 'created_at'],\n    [$t('sort-order.last_version_date'), 'last_version_date'],\n    ...(search !== '' && search !== null ? [[$t('sort-order.search'), 'search']] : [])\n  ];\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalMods,\n    amounts: [8, 16, 32, 64, 100]\n  } satisfies PaginationSettings;\n\n  const toggleTag = (tagId: string) => {\n    if (selectedTags.indexOf(tagId) >= 0) {\n      const i = selectedTags.indexOf(tagId);\n      selectedTags = [...selectedTags.slice(0, i), ...selectedTags.slice(i + 1)];\n    } else {\n      selectedTags = [...selectedTags, tagId];\n    }\n  };\n\n  const sortedTags = (tags: Tag[]): Tag[] => tags.toSorted((a, b) => a.name.localeCompare(b.name));\n\n  let tagsOpen = false;\n</script>\n\n<div class=\"mb-5 ml-auto flex flex-col gap-4\">\n  {#if showSearch}\n    <div class=\"flex grow flex-col items-center justify-center gap-4 sm:px-4\">\n      <div class=\"flex grow flex-row flex-wrap items-center justify-center gap-3 sm:px-4\">\n        <div>\n          <button\n            type=\"button\"\n            class=\"text-md variant-filled-surface btn btn-sm p-2 pl-4 pr-4\"\n            class:variant-ghost-primary={tagsOpen}\n            title={$t('filter.expand-button-tooltip')}\n            on:click={() => (tagsOpen = !tagsOpen)}>\n            <span>{$t('filter.expand-button-text')}</span>\n          </button>\n        </div>\n        <div>\n          <select bind:value={orderBy} class=\"select\">\n            {#each orderFields as orderField}\n              <option value={orderField[1]}>{orderField[0]}</option>\n            {/each}\n          </select>\n        </div>\n        <div>\n          <select bind:value={order} class=\"select\">\n            <option value=\"asc\">{$t('ascending')}</option>\n            <option value=\"desc\">{$t('descending')}</option>\n          </select>\n        </div>\n\n        <div class=\"input-group input-group-divider w-fit grid-cols-[1fr_auto] rounded-container-token\">\n          <input\n            bind:value={searchField}\n            class=\"border-0 bg-transparent p-1.5 ring-0\"\n            name=\"search\"\n            placeholder={$t('search.placeholder-text')} />\n          <button class=\"material-icons variant-filled-primary\">arrow_forward</button>\n        </div>\n      </div>\n      {#if tagsOpen}\n        <div class=\"flex flex-grow flex-row flex-wrap items-center justify-center gap-1 pb-10\">\n          {#if $allTags.error}\n            <p>Oh no... {$allTags.error.message}</p>\n          {:else if !$allTags.fetching}\n            {#each sortedTags($allTags.data.getTags) as tag}\n              <TagDisplay\n                {tag}\n                popupTriggerEvent=\"hover\"\n                asButton={true}\n                selected={selectedTags.indexOf(tag.id) >= 0}\n                on:click={() => toggleTag(tag.id)} />\n            {/each}\n          {/if}\n        </div>\n      {/if}\n    </div>\n  {/if}\n\n  <div\n    class=\"flex grow flex-row flex-wrap\"\n    class:justify-between={newMod && $user !== null}\n    class:justify-end={!newMod || $user == null}>\n    {#if newMod && $user !== null}\n      <a class=\"variant-ghost-primary btn self-end\" href=\"{base}/new-mod\">{$t('mods.new')}</a>\n    {/if}\n\n    <div class=\"self-end\">\n      <Paginator\n        bind:settings={paginationSettings}\n        showFirstLastButtons={true}\n        showPreviousNextButtons={true}\n        on:page={(p) => (page = p.detail)}\n        on:amount={(p) => (perPage = p.detail)}\n        controlVariant=\"variant-filled-surface\" />\n    </div>\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"ml-auto mt-5 flex justify-end\">\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n<style lang=\"postcss\">\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["t0_value","ctx","t3_value","t4_value","length","i","create_if_block_4","attr_dev","button0","button0_title_value","add_render_callback","call","select0","select1","input","input_placeholder_value","insert_hydration_dev","target","div5","anchor","append_hydration_dev","div4","div0","span","div1","div2","option0","option1","div3","button1","current","dirty","set_data_dev","t0","t3","t4","t_1_value","option","__value","option_value_value","t_1","error","fetching","div","each_value_2","ensure_array_like_dev","data","getTags","each_blocks","message","p","t1","t1_value","selected","indexOf","id","tagdisplay_changes","base","a","each_value_1","getMods","mods","each_value","Array","create_if_block_3","create_if_block_2","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","perPage","page","parseInt","selectedTags","totalMods","searchField","timer","t","getTranslate","toggleTag","tagId","$$invalidate","slice","sortedTags","tags","toSorted","b","name","localeCompare","tagsOpen","click_handler","select_value","this","value","tag","paginationSettings","page_handler","detail","amount_handler","page_handler_1","amount_handler_1","clearTimeout","setTimeout","Search","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","tagIDs","sort","URL","window","location","origin","pathname","append","toString","goto","keepFocus","$mods","count","gridClasses","orderFields","$t","size","amounts","$$subscribe_allTags","allTags","GetTagsDocument"],"mappings":"4lCAgImBA,EAAAC,KAAG,2BAA2B,EAAA,qBAYhBC,EAAAD,KAAG,WAAW,EAAA,OACbE,EAAAF,KAAG,cAAY,iDAR9BA,EAAW,0BAAhBG,OAAIC,GAAA,2BAqBPJ,EAAQ,EAAAK,GAAAA,GAAAL,u4CA5BAM,EAAAC,EAAA,QAAAC,EAAAR,GAAG,EAAA,8BAAA,CAAA,+BADmBA,EAAQ,6GAOnBA,EAAO,CAAA,IAAA,QAAAS,GAAA,IAAAT,EAAA,EAAA,EAAAU,KAAAC,+QAOPX,EAAK,CAAA,IAAA,QAAAS,GAAA,IAAAT,EAAA,EAAAU,EAAAA,KAAAE,+JAWVN,EAAAO,EAAA,cAAAC,EAAAd,KAAG,6fA/BxBe,CAAAA,EAmDKC,EAAAC,EAAAC,GAlDHC,EAiCKF,EAAAG,GAhCHD,EASKC,EAAAC,GARHF,EAOQE,EAAAd,CADNY,EAAAA,EAA6CZ,EAAAe,eAGjDH,EAAAA,EAMKC,EAAAG,CAAAA,EALHJ,EAIQI,EAAAZ,CAAAA,wDAJYX,EAAO,CAAA,EAAA,SAM7BmB,EAAAA,EAKKC,EAAAI,CAJHL,EAAAA,EAGQK,EAAAZ,CAFNO,EAAAA,EAA6CP,EAAAa,UAC7CN,EAA+CP,EAAAc,CAAAA,eAF7B1B,EAAK,CAAA,EAAA,WAM3BmB,EAOKC,EAAAO,GANHR,EAI+CQ,EAAAd,QAHjCb,EAAW,CAAA,CAAA,SAIzBmB,EAA2EQ,EAAAC,CAAAA,+JAvBlEC,GAAAC,EAAA,GAAA,MAAA/B,KAAAA,EAAAC,KAAG,2BAA2B,EAAA,KAAA+B,GAAAC,EAAAjC,IAF9B8B,CAAAA,GAAAC,EAAA,CAAA,EAAA,KAAAtB,KAAAA,EAAAR,GAAG,EAAA,8BAAA,kEADmBA,EAAQ,qBAQ9BA,EAAW,EAAA,CAAA,oBAAhBG,OAAIC,GAAA,EAAA,sHAAJD,uBADgBH,EAAO,CAAA,CAAA,GAQJ6B,CAAAA,GAAAC,EAAA,CAAA,EAAA,MAAA7B,KAAAA,EAAAD,GAAG,EAAA,WAAA,EAAW,KAAA+B,GAAAE,EAAAhC,IACb4B,CAAAA,GAAAC,EAAA,CAAA,EAAA,MAAA5B,KAAAA,EAAAF,GAAG,EAAA,YAAA,EAAY,KAAA+B,GAAAG,GAAAhC,gBAFnBF,EAAK,KAWV6B,CAAAA,GAAAC,EAAA,CAAA,EAAA,KAAAhB,KAAAA,EAAAd,KAAG,yBAAyB,8CAH7BA,EAAW,CAAA,QAAXA,EAAW,CAAA,CAAA,EAOxBA,EAAQ,EAAA,oVApB0BmC,EAAAnC,IAAW,EAAA,CAAA,EAAC,8JAA5BoC,CAAAA,EAAAC,QAAAC,EAAAtC,MAAW,qFAA1Be,EAAqDC,EAAAoB,EAAAlB,0BAAtB,CAAAY,EAAA,CAAA,EAAA,MAAAK,KAAAA,EAAAnC,IAAW,EAAA,CAAA,EAAC,KAAA+B,GAAAQ,EAAAJ,GAA5BL,EAAA,CAAA,EAAA,MAAAQ,KAAAA,EAAAtC,MAAW,CAAC,8PAsB1B,OAAAA,MAASwC,MAAK,EAERxC,MAASyC,YAAQ,4TAH9B1B,EAaKC,EAAA0B,EAAAxB,iaATMyB,EAAAC,GAAA5C,EAAW,EAAA,EAAAA,EAAS,EAAA6C,EAAAA,KAAKC,+BAA9B3C,OAAIC,GAAA,mSAACuC,EAAAC,GAAA5C,EAAW,EAAAA,EAAAA,EAAS,IAAA6C,KAAKC,OAAAA,CAAAA,oBAA9B3C,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAA2C,EAAA5C,OAAAC,GAAA,mDAAJD,OAAIC,GAAA,gPAFOJ,EAAQ,EAACwC,EAAAA,MAAMQ,QAAO,yCAAhC,WAAA,0EAAA,WAAA,iHAAHjC,CAAAA,EAAuCC,EAAAiC,EAAA/B,CAAAA,qDAA1BlB,EAAQ,IAACwC,MAAMQ,QAAO,KAAAjB,GAAAmB,EAAAC,wQAMrB,GACAC,SAAApD,KAAaqD,QAAQrD,EAAI,EAAAsD,EAAAA,EAAAA,GAAO,qMAAhC,GAAAxB,EAAA,CAAA,EAAA,SAAAyB,EAAAH,SAAApD,GAAaqD,EAAAA,QAAQrD,EAAI,EAAAsD,EAAAA,EAAAA,GAAO,0RAciBnB,EAAAnC,GAAG,EAAA,UAAA,EAAU,uOAA7BwD,GAAI,UAAA,oCAAzDzC,CAAAA,EAAuFC,EAAAyC,EAAAvC,CAAAA,0BAAlBY,EAAA,CAAA,EAAA,KAAAK,KAAAA,EAAAnC,GAAG,EAAA,UAAA,EAAU,KAAA+B,GAAAQ,EAAAJ,4KAyB7EuB,EAAAd,GAAA5C,EAAM,IAAA6C,KAAKc,QAAQC,2BAAxBzD,OAAIC,GAAA,uRADUJ,EAAW,IAAA,uBAAA,oCAA7Be,CAAAA,EAIKC,EAAA0B,EAAAxB,CAAAA,uFAHIwC,EAAAd,GAAA5C,EAAM,EAAA,EAAA6C,KAAKc,QAAQC,IAAAA,oBAAxBzD,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA2C,EAAA5C,OAAAC,GAAA,4CADUJ,EAAW,EAAA,EAAA,gFACzBG,OAAIC,GAAA,wPAHKJ,EAAK,EAACwC,EAAAA,MAAMQ,QAAO,yCAA7B,WAAA,0EAAA,WAAA,iHAAHjC,EAAoCC,EAAAiC,EAAA/B,oDAAvBlB,EAAK,EAACwC,EAAAA,MAAMQ,QAAO,KAAAjB,GAAAmB,EAAAC,uJALvBU,EAAAjB,GAAAkB,MAAM9D,EAAO,CAAA,CAAA,CAAA,uBAAlBG,OAAIC,GAAA,uRADUJ,EAAW,EAAA,EAAA,4DAA7Be,EAIKC,EAAA0B,EAAAxB,sFAHI2C,EAAAjB,GAAAkB,MAAM9D,EAAO,CAAA,CAAA,CAAA,oBAAlBG,OAAIC,GAAA,EAAA,4GAAJD,OAAIC,EAAA2C,EAAA5C,OAAAC,GAAA,4CADUJ,EAAW,EAAA,EAAA,gFACzBG,OAAIC,GAAA,uoCA7EHJ,EAAU,CAAA,GAAA+D,GAAA/D,KA2DRA,EAAM,IAAIA,EAAK,EAAA,IAAK,MAAIgE,GAAAhE,uDAOH,2BACG,4CAFVA,EAAkB,EAAA,IAAA,qBAAlBA,EAAkB,uJAUpC,CAAA,OAAAA,IAAMyC,EAAAA,SAAQ,EAMTzC,IAAMwC,EAAAA,MAAK,6EAcO,2BACG,4CAFVxC,EAAkB,EAAA,IAAA,oBAAlBA,EAAkB,yxBArCZA,EAAM,CAAIA,GAAAA,EAAK,EAAK,IAAA,IAAA,sBACvBA,EAAM,CAAIA,GAAAA,EAAK,KAAI,wPA3D3Ce,EA0EKC,EAAAQ,EAAAN,CAAAA,wBAlBHC,EAiBKK,EAAAD,uBATHJ,EAAAA,EAQKI,EAAAF,4CAoBTN,EAAAA,EAUKC,EAAAI,EAAAF,GATHC,EAQKC,EAAAO,sCApGA3B,EAAU,CAAA,mGA2DRA,EAAM,IAAIA,EAAK,EAAA,IAAK,uGAMNA,EAAkB,sEARdA,EAAM,IAAIA,EAAK,EAAA,IAAK,6CACvBA,EAAM,CAAA,GAAIA,EAAK,EAAI,GAAA,IAAA,0LAoCtBA,EAAkB,2sBAtM1B,IAAAiE,SAAAA,EAAkB,CAACC,EAAAA,GACnBC,OAAAA,EAAS,IAAKD,EACd,CAAAE,WAAAA,EAAa,EAAA,EAAKF,EAEvB,MAAAG,EAASC,GAEX,EAAA,IAAAC,EAAqBC,EAAWC,IAAIC,aAAaC,IAAI,GAAA,GAAS,GAE9DC,EAAeC,GAAMC,KACrBC,EAAqBC,GAAUC,gBAE/BC,EAAU,GACVC,EAAOC,SAAqBZ,EAAWC,IAAIC,aAAaC,IAAI,MAAS,IAAK,EAAA,GAAO,EAEjFU,EAAY,GAgBZC,EAEAC,EAAchB,EAEdiB,EAmCW,KAAAC,CAAAA,EAAAA,GAAMC,mBAoBf,MAAAC,GAAaC,GAAAA,CACb,GAAAP,EAAahC,QAAQuC,CAAU,GAAA,EAAC,CAC5B,MAAAxF,GAAIiF,EAAahC,QAAQuC,CAC/BC,EAAAA,EAAA,EAAAR,EAAmB,CAAA,GAAAA,EAAaS,MAAM,EAAG1F,OAAOiF,EAAaS,MAAM1F,GAAI,CAAA,CAAA,CAAA,WAEvEiF,EAAY,CAAA,GAAOA,EAAcO,KAI/BG,EAAcC,GAAuBA,EAAKC,UAAUxC,GAAGyC,KAAMzC,GAAE0C,KAAKC,cAAcF,GAAEC,IAAAA,CAAAA,EAEtF,IAAAE,EAAW,yLAaY,EAAA,MAAAC,EAAA,IAAAT,EAAA,GAAAQ,EAAAA,CAAYA,iBAKXtB,EAAOwB,GAAAC,IAAAA,0FAOP5B,CAAAA,EAAK2B,GAAAC,0BAQXjB,CAAAA,EAAWiB,KAAAC,yBAkBHd,GAAUe,EAAIpD,kBAkBvBqD,CAAAA,EAAkBF,sEAGvB,MAAAG,GAAA3D,GAAO4C,EAAA,EAAAV,EAAOlC,EAAE4D,MACd,EAAAC,GAAA7D,GAAO4C,EAAA,EAAAX,EAAUjC,EAAE4D,sBAyBlBF,CAAAA,EAAkBF,sEAGvB,MAAAM,GAAA9D,GAAO4C,EAAA,EAAAV,EAAOlC,EAAE4D,MACd,EAAAG,GAAA/D,GAAO4C,EAAA,EAAAX,EAAUjC,EAAE4D,43CAtKjCI,aAAazB,CACbK,EAAAA,EAAA,GAAAL,EAAQ0B,gBACF3B,GAAeA,EAAYpF,OAAS,IACjCoE,IAAW,IAAMA,IAAW,OAASgB,IAAgB,IAAMA,IAAgB,WAC9ER,EAAUC,GAAUmC,MAAAA,EACpBtB,EAAA,EAAAV,EAAO,IAGTU,EAAA,GAAAtB,EAASgB,KACAA,IAAgB,IAAMA,IAAgB,SAC3CR,IAAYC,GAAUmC,QAAWpC,CAAAA,QACnCA,EAAUC,GAAUC,eAAAA,EAGtBY,EAAA,GAAAtB,EAAS,IAAA,IAEV,8BApCJ6C,EAAAvB,EAAA,GAAEjC,EAAOyD,GAAU,CAClBC,MAAOC,GACPlD,SACAmD,UAAS,CAAIC,OAAQtC,EAAOD,EAASwC,MAAOxC,EAASX,OAAAA,EAAQK,MAAOG,EAAAA,QAAAA,EAAS4C,OAAQtC,EAAauC,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,oBAoCtF,CACN,MAAAnD,EAAU,IAAAoD,IAAIC,OAAOC,SAASC,OAASF,OAAOC,SAASE,QAAAA,EAC7DxD,EAAIC,aAAawD,OAAO,IAAK/C,EAAKgD,SAAAA,CAAAA,EAClC5C,IAAgB,IAAMA,IAAgB,MAAQd,EAAIC,aAAawD,OAAO,IAAK3C,CAC3E6C,EAAAA,GAAK3D,EAAI0D,SAAc,EAAA,CAAAE,UAAW,EAAA,CAAA,sBAGnCxC,EAAA,GAAEP,EAAYgD,GAAOzF,MAAMc,SAAS4E,OAAS,CAAA,yBAE3C1C,EAAA,GAAA2C,EACDvE,GAAY,EACR,6DACA,2EAIHwE,EAAW,EACXC,EAAG,iBAAA,EAAoB,SACvBA,EAAG,oBAAqB,UACxBA,EAAG,sBAAA,EAAyB,cAC5BA,EAAG,sBAAuB,YAC1BA,EAAG,uBAA0B,EAAA,YAAA,GAC7BA,EAAG,yBAA0B,eAC7BA,EAAG,8BAAiC,EAAA,mBAAA,EAAA,GACjCnE,IAAW,IAAMA,IAAW,OAASmE,EAAG,mBAAA,EAAsB,4CAGjE/B,EAAkB,MACbxB,EACNuC,MAAOxC,EACPyD,KAAMrD,EACNsD,QAAO,CAAG,EAAG,GAAI,GAAI,GAAI,GAAA,CAAA,CAAA,CAhE1BC,EAAAA,EAAAhD,EAAA,GAAEiD,EAAUzB,GAAU,CACrBC,MAAOyB,GACP1E,OACAmD,EAAAA,UAAS,CACPE,MAAO,8qDC/BQ,UAAc,YAAgB"}