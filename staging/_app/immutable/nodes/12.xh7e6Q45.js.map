{"version":3,"file":"12.xh7e6Q45.js","sources":["../../../../../../src/routes/guide/[guideId]/edit/+page.ts","../../../../../../src/routes/guide/[guideId]/edit/+page.svelte"],"sourcesContent":["import type { PageLoad } from './$types';\n\nexport const load: PageLoad = async ({ params }) => ({\n  ...params\n});\n","<script lang=\"ts\">\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { EditGuideDocument, GetGuideDocument } from '$lib/generated';\n  import { goto } from '$app/navigation';\n  import GuideForm from '$lib/components/guides/GuideForm.svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import type { PageData } from './$types';\n  import { getModalStore, getToastStore, type ModalSettings } from '@skeletonlabs/skeleton';\n\n  export let data: PageData;\n\n  const { guideId } = data;\n\n  const client = getContextClient();\n\n  const toastStore = getToastStore();\n\n  const guide = queryStore({\n    query: GetGuideDocument,\n    client,\n    variables: { guide: guideId }\n  });\n\n  const onSubmit = (guideData: GuideData) => {\n    client\n      .mutation(EditGuideDocument, {\n        guideId: guideId,\n        guide: guideData\n      })\n      .toPromise()\n      .then((value) => {\n        if (value.error) {\n          console.error(value.error.message);\n          toastStore.trigger({\n            message: 'Error editing guide: ' + value.error.message,\n            background: 'variant-filled-error',\n            autohide: false\n          });\n        } else {\n          toastStore.trigger({\n            message: `Guide updated`,\n            background: 'variant-filled-success',\n            timeout: 5000\n          });\n          goto(base + '/guide/' + value.data.updateGuide.id);\n        }\n      });\n  };\n\n  const goBackFn = () => {\n    goto(base + '/guide/' + guideId);\n  };\n\n  const backModal: ModalSettings = {\n    type: 'confirm',\n    title: 'Go Back?',\n    buttonTextCancel: 'Keep Editing',\n    buttonTextConfirm: 'Go Back',\n    body: 'Going back will discard any unsaved changes. Are you sure you wish to continue?',\n    response: (r: boolean) => {\n      if (r) {\n        goBackFn();\n      }\n    }\n  };\n\n  const modalStore = getModalStore();\n</script>\n\n<svelte:head>\n  {#if !$guide.fetching && !$guide.error && $guide.data.getGuide}\n    <MetaDescriptors\n      description=\"Editing guide '{$guide.data.getGuide.short_description}'\"\n      title=\"Edit guide '{$guide.data.getGuide.name}'\" />\n  {/if}\n</svelte:head>\n\n<div class=\"flex h-auto flex-wrap items-center justify-between\">\n  <h1 class=\"my-4 text-4xl font-bold\">Edit Guide</h1>\n  <div>\n    <button class=\"variant-ghost-primary btn\" on:click={() => modalStore.trigger(backModal)}>\n      <span class=\"material-icons pr-2\">arrow_back</span>\n      Back to Guide</button>\n  </div>\n</div>\n\n<div class=\"card p-4\">\n  <section>\n    {#if $guide.fetching}\n      <p>Loading...</p>\n    {:else if $guide.error}\n      <p>Oh no... {$guide.error.message}</p>\n    {:else}\n      <GuideForm {onSubmit} initialValues={$guide.data.getGuide} submitText=\"Save\" submitIcon=\"save\" />\n    {/if}\n  </section>\n</div>\n"],"names":["load","async","params","description","ctx","data","getGuide","short_description","title","name","dirty","metadescriptors_changes","error","message","insert_hydration_dev","target","p","anchor","set_data_dev","t1","t1_value","fetching","create_if_block_2","div1","append_hydration_dev","h1","div0","button","span","div2","section","$$props","guideId","client","getContextClient","toastStore","getToastStore","guide","queryStore","query","GetGuideDocument","variables","onSubmit","guideData","mutation","EditGuideDocument","toPromise","then","value","console","trigger","background","autohide","timeout","goto","base","updateGuide","id","goBackFn","backModal","type","buttonTextCancel","buttonTextConfirm","body","response","r","modalStore","getModalStore"],"mappings":"sgBAEO,MAAMA,GAAiBC,MAASC,CAAAA,OAAAA,CAAAA,KAAc,IAChDA,kNCuE8BC,YAAA,kBAAAC,EAAO,CAAAC,EAAAA,KAAKC,SAASC,kBAAiB,IAC/CC,MAAA,eAAAJ,EAAO,CAAAC,EAAAA,KAAKC,SAASG,KAAI,GAAA,uJADhBC,EAAA,IAAAC,EAAAR,YAAA,kBAAAC,EAAO,GAAAC,KAAKC,SAASC,kBAAiB,KAC/CG,EAAA,IAAAC,EAAAH,MAAA,eAAAJ,EAAO,GAAAC,KAAKC,SAASG,KAAI,qVAoBRL,EAAM,GAACC,KAAKC,yNAAZF,EAAM,GAACC,KAAKC,0PAFpCF,EAAM,CAACQ,EAAAA,MAAMC,QAAO,wCAA9B,2EAAA,4FAAHC,EAAqCC,EAAAC,EAAAC,8CAAxBb,EAAM,CAACQ,EAAAA,MAAMC,QAAO,KAAAK,GAAAC,EAAAC,2WAFjCN,EAAgBC,EAAAC,EAAAC,0OAnBdb,EAAM,CAACiB,EAAAA,UAAAA,CAAajB,EAAM,CAACQ,EAAAA,OAASR,EAAM,CAACC,EAAAA,KAAKC,UAAQgB,EAAAlB,CAAAA,0CAkBvD,OAAAA,KAAOiB,SAAQ,EAEVjB,KAAOQ,MAAK,0KAT8B;AAAA,+bAAA;AAAA,2kBAJxDE,EAAAA,EAOKC,EAAAQ,EAAAN,CAAAA,EANHO,EAAkDD,EAAAE,CAAAA,SAClDD,EAIKD,EAAAG,CAAAA,EAHHF,EAEuBE,EAAAC,CAAAA,EADrBH,EAAkDG,EAAAC,CAAAA,kBAKxDd,EAUKC,EAAAc,EAAAZ,CATHO,EAAAA,EAQSK,EAAAC,qFAzBH1B,CAAAA,EAAM,GAACiB,UAAajB,CAAAA,EAAM,GAACQ,OAASR,EAAM,GAACC,KAAKC,siBA7D3CD,GAAc0B,EAEjB,KAAA,CAAAC,QAAAA,CAAY3B,EAAAA,EAEd4B,EAASC,GAAAA,EAETC,EAAaC,GAAAA,EAEbC,EAAQC,GAAU,CACtBC,MAAOC,GACPP,SACAQ,UAAS,CAAIJ,MAAOL,uCAGhB,MAAAU,EAAYC,IAChBV,EACGW,SAASC,GAAiB,CAChBb,QAAAA,EACTK,MAAOM,CAERG,CAAAA,EAAAA,UAAAA,EACAC,KAAMC,GACD,CAAAA,EAAMpC,OACRqC,QAAQrC,MAAMoC,EAAMpC,MAAMC,OAC1BsB,EAAAA,EAAWe,QAAO,CAChBrC,QAAS,wBAA0BmC,EAAMpC,MAAMC,QAC/CsC,WAAY,uBACZC,SAAU,OAGZjB,EAAWe,QAAO,CAChBrC,QAAO,gBACPsC,WAAY,yBACZE,QAAS,MAEXC,EAAKC,EAAO,UAAYP,EAAM3C,KAAKmD,YAAYC,QAKjDC,EAAQ,KACZJ,EAAKC,EAAO,UAAYvB,CAAO,CAAA,EAG3B2B,EAAS,CACbC,KAAM,UACNpD,MAAO,WACPqD,iBAAkB,eAClBC,kBAAmB,UACnBC,KAAM,kFACNC,SAAWC,IACLA,GACFP,MAKAQ,EAAaC,GAAAA,uTAcyCD,EAAWhB,QAAQS,CAAAA"}