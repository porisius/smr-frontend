{"version":3,"file":"7.50d303d8.js","sources":["../../../../../../src/routes/admin/tag-manager/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import Accordion, { Panel, Header, Content } from '@smui-extra/accordion';\n  import Textfield from '@smui/textfield';\n  import HelperText from '@smui/textfield/helper-text';\n  import Button, { Label, Icon } from '@smui/button';\n  import Snackbar from '@smui/snackbar';\n  import IconButton, { Icon as ButtonIcon } from '@smui/icon-button';\n  import { getContextClient, queryStore } from '@urql/svelte';\n  import { noop } from 'svelte/internal';\n  import { CreateTagDocument, DeleteTagDocument, GetTagsDocument, UpdateTagDocument } from '$lib/generated';\n  import type { Tag } from '$lib/generated';\n\n  const client = getContextClient();\n\n  let tags: Tag[] = [];\n  const panels = {};\n  const nameFields = {};\n  let snackbarTagChangeSavedText = '';\n  let snackbarTagChangeSaved: Snackbar;\n  let tagNegativeID = -1;\n\n  const tagsQuery = queryStore({\n    query: GetTagsDocument,\n    client,\n    variables: {}\n  });\n\n  $: tags = $tagsQuery.data?.getTags || [];\n\n  function newTag() {\n    if (!tags.find((tag) => tag.name == 'New Tag')) {\n      const tag = { id: tagNegativeID--, name: 'New Tag' } as Tag;\n      tags.push(tag);\n      tags = tags;\n      setTimeout(() => {\n        panels[tag.id].setOpen(true);\n        const field = nameFields[tag.id];\n        field.focus();\n        const input = field.getElement().querySelectorAll('input')[0] as HTMLInputElement;\n        input.select();\n      }, 0);\n    } else {\n      panels[tags[tags.length - 1].id].setOpen(true);\n      nameFields[tags[tags.length - 1].id].focus();\n    }\n  }\n\n  async function tagChange(tag: Tag) {\n    // ignore \"New Tag\"\n    if (tag.name == 'New Tag') {\n      return;\n    }\n\n    let success = false;\n    if (tag.id < 0) {\n      // Create new tag & update tag.id with new DB id or re-fetch all tags\n      try {\n        const result = await client.mutation(CreateTagDocument, { tagName: tag.name }).toPromise();\n        if (result.data) {\n          tag.id = result.data.createTag.id;\n          success = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n      if (!success) {\n        snackbarTagChangeSavedText = `Failed to create Tag '${tag.name}'!`;\n        snackbarTagChangeSaved.open();\n        setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n        return;\n      }\n    } else {\n      // Update existing tag\n      try {\n        success =\n          (await client.mutation(UpdateTagDocument, { tagID: tag.id, tagName: tag.name }).toPromise()).data.updateTag !=\n          null;\n      } catch {\n        noop();\n      }\n      if (!success) {\n        snackbarTagChangeSavedText = `Failed to update Tag '${tag.name}'!`;\n        snackbarTagChangeSaved.open();\n        setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n        return;\n      }\n    }\n\n    snackbarTagChangeSavedText = `Tag '${tag.name}' saved!`;\n    snackbarTagChangeSaved.open();\n    setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n  }\n\n  async function deleteTag(tag: Tag) {\n    if (tag.name != 'New Tag') {\n      // Remove tag\n      let success = false;\n      try {\n        const result = await client.mutation(DeleteTagDocument, { tagID: tag.id }).toPromise();\n        success = result.data.deleteTag;\n      } catch {\n        success = false;\n      }\n      if (!success) {\n        snackbarTagChangeSavedText = `Failed to remove Tag '${tag.name}'!`;\n        snackbarTagChangeSaved.open();\n        setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n        return;\n      }\n    }\n\n    // Remove tag animation\n    const panelRemoveAnimation = () => {\n      const panel = panels[tag.id].getElement();\n      const startHeight = panel.scrollHeight;\n      panel.classList.add('smui-accordion__panel--removed');\n      panel.style.height = startHeight + 'px';\n      requestAnimationFrame(() => (panel.style.height = 0 + 'px'));\n      panel.addEventListener('transitionend', (e: TransitionEvent) => {\n        if (e.propertyName == 'height') {\n          panel.classList.remove('smui-accordion__panel--removed');\n          panel.style.height = 'auto';\n          tags = tags.filter((t) => t.id != tag.id);\n        }\n      });\n    };\n\n    let isPanelOpen = false;\n    for (const key in panels) {\n      const panelP = panels[key];\n      if (panelP?.isOpen()) {\n        panelP.setOpen(false);\n        if (!isPanelOpen) {\n          panelP.getElement().addEventListener(\n            'SMUIAccordionPanel:closed',\n            () => {\n              panelRemoveAnimation();\n            },\n            { once: true }\n          );\n        }\n        isPanelOpen = true;\n      }\n    }\n    if (!isPanelOpen) {\n      panelRemoveAnimation();\n    }\n\n    snackbarTagChangeSavedText = `Tag '${tag.name}' removed!`;\n    snackbarTagChangeSaved.open();\n    setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n  }\n\n  function onDeleteClick(e: Event, tag: Tag) {\n    e.stopPropagation();\n    deleteTag(tag);\n  }\n</script>\n\n{#if $tagsQuery.fetching}\n  <h1>Loading tags...</h1>\n{:else if $tagsQuery.error}\n  <h1>Failed to load tags: {$tagsQuery.error.message}</h1>\n{:else}\n  <Accordion>\n    {#each tags as tag}\n      <Panel bind:this={panels[tag.id]}>\n        <Header>\n          {tag.name}\n          <IconButton slot=\"icon\" on:click={(e) => onDeleteClick(e, tag)}>\n            <ButtonIcon class=\"material-icons\">delete_forever</ButtonIcon>\n          </IconButton>\n        </Header>\n        <Content>\n          <Textfield\n            bind:value={tag.name}\n            label=\"Tag-Name\"\n            bind:this={nameFields[tag.id]}\n            on:change={() => tagChange(tag)}>\n            <HelperText slot=\"helper\">Human-Readable name of the tag that is shown in UI</HelperText>\n          </Textfield>\n        </Content>\n      </Panel>\n    {/each}\n    <Panel nonInteractive>\n      <Header ripple={false}>\n        <Button variant=\"outlined\" on:click={newTag}>\n          <Label>Add new tag</Label>\n          <Icon class=\"material-icons\">add</Icon>\n        </Button>\n      </Header>\n    </Panel>\n  </Accordion>\n{/if}\n\n<Snackbar bind:this={snackbarTagChangeSaved} timeoutMs={4000}>\n  <Label>{snackbarTagChangeSavedText}</Label>\n</Snackbar>\n"],"names":["ctx","error","message","insert_hydration_dev","target","h1","anchor","set_data_dev","t1","t1_value","t_value","name","dirty","t","textfield_props","value","textfield_changes","length","i","each_blocks","fetching","client","getContextClient","tags","panels","nameFields","snackbarTagChangeSavedText","snackbarTagChangeSaved","tagNegativeID","tagsQuery","queryStore","query","GetTagsDocument","variables","newTag","find","tag","id","setOpen","focus","push","setTimeout","field","getElement","querySelectorAll","select","async","tagChange","success","result","mutation","CreateTagDocument","tagName","toPromise","data","createTag","err","console","log","open","close","UpdateTagDocument","tagID","updateTag","deleteTag","DeleteTagDocument","panelRemoveAnimation","panel","startHeight","scrollHeight","classList","add","style","height","requestAnimationFrame","addEventListener","e","propertyName","remove","$$invalidate","filter","isPanelOpen","key","panelP","isOpen","once","onDeleteClick","stopPropagation","click_handler","$$self","$$","not_equal","$$value","change_handler","$tagsQuery","getTags"],"mappings":"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"}