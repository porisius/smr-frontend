{"version":3,"file":"21.8d41c477.js","sources":["../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../src/routes/mods/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetModsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import { base } from '$app/paths';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { browser } from '$app/environment';\n  import { getTranslate } from '@tolgee/svelte';\n  import { type PaginationSettings, Paginator } from '@skeletonlabs/skeleton';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  const client = getContextClient();\n\n  let search = browser && $storePage.url.searchParams.get('q') || '';\n\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  let perPage = 32;\n  let page = parseInt(browser && $storePage.url.searchParams.get('p') || '0', 10) || 0;\n\n  $: mods = queryStore({\n    query: GetModsDocument,\n    client,\n    variables: { offset: page * perPage, limit: perPage, search, order, orderBy }\n  });\n\n  let totalMods: number;\n\n  let searchField = search;\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page = 1;\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  $: if (browser) {\n    const url = new URL(window.location.origin + window.location.pathname);\n    url.searchParams.append('p', page.toString());\n    searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n    goto(url.toString(), { keepFocus: true });\n  }\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  export const { t } = getTranslate();\n\n  $: orderFields = [\n    [$t('sort-order.name'), 'name'],\n    [$t('sort-order.views'), 'views'],\n    [$t('sort-order.downloads'), 'downloads'],\n    [$t('sort-order.hotness'), 'hotness'],\n    [$t('sort-order.popularity'), 'popularity'],\n    [$t('sort-order.created_at'), 'created_at'],\n    [$t('sort-order.last_version_date'), 'last_version_date'],\n    ...(search !== '' && search !== null ? [[$t('sort-order.search'), 'search']] : [])\n  ];\n\n  $: paginationSettings = {\n    page: page,\n    limit: perPage,\n    size: totalMods,\n    amounts: [8, 16, 32, 64, 100]\n  } satisfies PaginationSettings;\n</script>\n\n<div class=\"ml-auto flex flex-wrap justify-between items-center mb-5\">\n  {#if newMod && $user !== null}\n    <a class=\"btn variant-ghost-primary\" href=\"{base}/new-mod\">{$t('mods.new')}</a>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"search-container flex flex-wrap flex-row sm:px-4\">\n      <div class=\"mr-3\">\n        <select bind:value={orderBy} class=\"select\">\n          {#each orderFields as orderField}\n            <option value={orderField[1]}>{orderField[0]}</option>\n          {/each}\n        </select>\n      </div>\n      <div class=\"mr-3\">\n        <select bind:value={order} class=\"select\">\n          <option value=\"asc\">{$t('ascending')}</option>\n          <option value=\"desc\">{$t('descending')}</option>\n        </select>\n      </div>\n\n      <div class=\"input-group input-group-divider grid-cols-[1fr_auto] rounded-container-token w-fit\">\n        <input\n          bind:value={searchField}\n          class=\"bg-transparent border-0 ring-0 p-1.5\"\n          name=\"search\"\n          placeholder=\"Search\" />\n        <button class=\"variant-filled-primary material-icons\">arrow_forward</button>\n      </div>\n\n      <!--      <Paper class=\"search-paper mr-3\" elevation={6}>-->\n      <!--        <Icon class=\"material-icons\">search</Icon>-->\n      <!--        <Input bind:value={searchField} placeholder=\"Search\" />-->\n      <!--      </Paper>-->\n      <!--      <Fab on:click={() => goto(base + '/mods?q=' + search)} color=\"primary\" mini class=\"solo-fab\" aria-label=\"Search\">-->\n      <!--        <Icon class=\"material-icons\">arrow_forward</Icon>-->\n      <!--      </Fab>-->\n    </div>\n  {/if}\n\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <Paginator\n      bind:settings={paginationSettings}\n      showFirstLastButtons={true}\n      showPreviousNextButtons={true}\n      on:page={(p) => (page = p.detail)}\n      on:amount={(p) => (perPage = p.detail)}\n      controlVariant=\"variant-filled-surface\" />\n  </div>\n</div>\n\n<style>\n  .search-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["t_1_value","ctx","base","insert_hydration_dev","target","a","anchor","dirty","set_data_dev","t_1","t1_value","t2_value","length","i","add_render_callback","call","select0","select1","div3","append_hydration_dev","div0","div1","option0","option1","div2","input","button","t1","t2","option","__value","option_value_value","each_value_1","ensure_array_like_dev","data","getMods","mods","div","each_blocks","error","message","p","each_value","Array","create_if_block_3","create_if_block_2","fetching","colCount","$$props","newMod","showSearch","client","getContextClient","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","perPage","page","parseInt","totalMods","searchField","timer","t","getTranslate","select_value","this","value","paginationSettings","page_handler","$$invalidate","detail","amount_handler","page_handler_1","amount_handler_1","clearTimeout","setTimeout","Search","$$subscribe_mods","queryStore","query","GetModsDocument","variables","offset","limit","URL","window","location","origin","pathname","append","toString","goto","keepFocus","$mods","count","gridClasses","orderFields","$t","size","amounts"],"mappings":"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"}