{"version":3,"file":"index.svelte-be851273.js","sources":["../../../../../../../../src/lib/components/users/UserInfo.svelte","../../../../../../../../src/lib/components/users/UserAvatar.svelte","../../../../../../../../src/routes/user/[userId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  export let user!: Pick<User, 'created_at'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(user.created_at)}</span><br />\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import { assets } from '$app/paths';\n\n  export let avatar!: string;\n  export let username!: string;\n\n  $: userAvatar = avatar || assets + '/images/no_image.webp';\n</script>\n\n<div>\n  <img class=\"rounded-lg sm:max-w-lg max-w-full w-full\" src={userAvatar} alt=\"Avatar for {username}\" />\n</div>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetUserDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Button from '@smui/button';\n\n  const userQ = operationStore(GetUserDocument, { user: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    userQ.variables.user = input.params.userId;\n    return loadWaitForNoFetch({\n      user: userQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import UserInfo from '$lib/components/users/UserInfo.svelte';\n  import UserAvatar from '$lib/components/users/UserAvatar.svelte';\n  import ModCard from '$lib/components/mods/ModCard.svelte';\n  import GuideCard from '$lib/components/guides/GuideCard.svelte';\n  import { user as me } from '$lib/stores/user';\n  import { base } from '$app/paths';\n\n  export let user: typeof userQ;\n\n  let guidesTab = false;\n</script>\n\n<svelte:head>\n  {#if !$user.fetching && !$user.error && $user.data.getUser}\n    <MetaDescriptors\n      description=\"{$user.data.getUser.username} profile\"\n      title=\"{$user.data.getUser.username} profile\" />\n  {/if}\n</svelte:head>\n\n{#if $user.fetching}\n  <p>Loading...</p>\n{:else if $user.error}\n  <p>Oh no... {$user.error.message}</p>\n{:else if $user.data.getUser}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">{$user.data.getUser.username}</h1>\n\n      <div>\n        {#if $me && $user.data.getUser.id === $me.id}\n          <Button variant=\"outlined\" href=\"{base}/settings\">Settings</Button>\n        {/if}\n\n        <Button variant=\"outlined\" on:click={() => (guidesTab = !guidesTab)}>\n          {#if !guidesTab}\n            Guides\n          {:else}\n            Mods\n          {/if}\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      {#if !guidesTab}\n        <div class=\"grid 3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1 gap-4 h-fit\">\n          {#each $user.data.getUser.mods as mod}\n            <ModCard mod={mod.mod} />\n          {/each}\n\n          {#if $user.data.getUser.mods.length === 0}\n            <!-- TODO Prettier -->\n            User has no mods\n          {/if}\n        </div>\n      {:else}\n        <div class=\"grid 3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1 gap-4 h-fit\">\n          {#each $user.data.getUser.guides as guide}\n            <GuideCard {guide} logo={$user.data.getUser.avatar} />\n          {/each}\n\n          {#if $user.data.getUser.guides.length === 0}\n            <!-- TODO Prettier -->\n            User has no guides\n          {/if}\n        </div>\n      {/if}\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <UserAvatar avatar={$user.data.getUser.avatar} username={$user.data.getUser.username} />\n        <UserInfo user={$user.data.getUser} />\n      </div>\n    </div>\n  </div>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["prettyDate","ctx","created_at","insert_hydration","target","div","anchor","append_hydration","h3","span","strong","br","set_data","t4","t4_value","user","$$props","attr","img","img_src_value","avatar","username","userAvatar","assets","description","data","getUser","title","dirty","metadescriptors_changes","t0_value","id","create_if_block_7","div4","div1","h1","div0","div3","div2","current","t0","useravatar_changes","error","message","p","t1","t1_value","base","create_if_block_6","each_value_1","guides","length","i","create_if_block_5","each_blocks","each_value","mods","create_if_block_4","logo","guidecard_changes","modcard","ModCard","props","mod","modcard_changes","fetching","create_if_block_8","userQ","operationStore","GetUserDocument","undefined","load","paramsToProps","async","variables","input","params","userId","loadWaitForNoFetch","guidesTab","click_handler","$$invalidate"],"mappings":"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"}