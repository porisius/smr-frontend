{"version":3,"file":"index.svelte-a1c90908.js","sources":["../../../../../../../../src/lib/components/users/UserInfo.svelte","../../../../../../../../src/lib/components/users/UserAvatar.svelte","../../../../../../../../src/routes/user/[userId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  export let user!: Pick<User, 'created_at'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(user.created_at)}</span><br />\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import { assets } from '$app/paths';\n\n  export let avatar!: string;\n  export let username!: string;\n\n  $: userAvatar = avatar || assets + '/images/no_image.webp';\n</script>\n\n<div>\n  <img class=\"rounded-lg sm:max-w-lg max-w-full w-full\" src={userAvatar} alt=\"Avatar for {username}\" />\n</div>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetUserDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Button from '@smui/button';\n\n  const userQ = operationStore(GetUserDocument, { user: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    userQ.variables.user = input.params.userId;\n    return loadWaitForNoFetch({\n      user: userQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import UserInfo from '$lib/components/users/UserInfo.svelte';\n  import UserAvatar from '$lib/components/users/UserAvatar.svelte';\n  import ModCard from '$lib/components/mods/ModCard.svelte';\n  import GuideCard from '$lib/components/guides/GuideCard.svelte';\n  import { user as me } from '$lib/stores/user';\n  import { base } from '$app/paths';\n\n  export let user: typeof userQ;\n\n  let guidesTab = false;\n</script>\n\n<svelte:head>\n  {#if !$user.fetching && !$user.error && $user.data.getUser}\n    <MetaDescriptors\n      description=\"{$user.data.getUser.username} profile\"\n      title=\"{$user.data.getUser.username} profile\"\n    />\n  {/if}\n</svelte:head>\n\n{#if $user.fetching}\n  <p>Loading...</p>\n{:else if $user.error}\n  <p>Oh no... {$user.error.message}</p>\n{:else if $user.data.getUser}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">{$user.data.getUser.username}</h1>\n\n      <div>\n        {#if $me && $user.data.getUser.id === $me.id}\n          <Button variant=\"outlined\" href=\"{base}/settings\">Settings</Button>\n        {/if}\n\n        <Button variant=\"outlined\" on:click={() => (guidesTab = !guidesTab)}>\n          {#if !guidesTab}\n            Guides\n          {:else}\n            Mods\n          {/if}\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      {#if !guidesTab}\n        <div class=\"grid 3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1 gap-4 h-fit\">\n          {#each $user.data.getUser.mods as mod}\n            <ModCard mod={mod.mod} />\n          {/each}\n\n          {#if $user.data.getUser.mods.length === 0}\n            <!-- TODO Prettier -->\n            User has no mods\n          {/if}\n        </div>\n      {:else}\n        <div class=\"grid 3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1 gap-4 h-fit\">\n          {#each $user.data.getUser.guides as guide}\n            <GuideCard {guide} logo={$user.data.getUser.avatar} />\n          {/each}\n\n          {#if $user.data.getUser.guides.length === 0}\n            <!-- TODO Prettier -->\n            User has no guides\n          {/if}\n        </div>\n      {/if}\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <UserAvatar avatar={$user.data.getUser.avatar} username={$user.data.getUser.username} />\n        <UserInfo user={$user.data.getUser} />\n      </div>\n    </div>\n  </div>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["prettyDate","ctx","created_at","insert_hydration_dev","target","div","anchor","append_hydration_dev","h3","span","strong","br","set_data_dev","t4","t4_value","user","$$props","attr_dev","img","img_src_value","avatar","username","userAvatar","assets","description","data","getUser","title","dirty","metadescriptors_changes","t0_value","id","create_if_block_7","div4","div1","h1","div0","div3","div2","current","t0","useravatar_changes","error","message","p","t1","t1_value","base","create_if_block_6","each_value_1","guides","length","i","create_if_block_5","each_blocks","each_value","mods","create_if_block_4","logo","guidecard_changes","props","mod","modcard_changes","fetching","create_if_block_8","userQ","operationStore","GetUserDocument","undefined","load","paramsToProps","async","variables","input","params","userId","loadWaitForNoFetch","guidesTab","click_handler","$$invalidate"],"mappings":"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"}