{"version":3,"mappings":"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","names":["fetch","createClient","url","API_GRAPHQL","exchanges","cacheExchange","schema","keys","GetMods","LatestVersions","UserMod","GetGuides","OAuthOptions","UserRoles","Compatibility","CompatibilityInfoInput","CompatibilityInfo","updates","Mutation","deleteGuide","_result","args","cache","invalidate","__typename","id","guideId","deleteMod","modId","approveMod","denyMod","approveVersion","versionId","denyVersion","deleteSMLVersion","smlVersionId","deleteVersion","updateVersion","authExchange","addAuthToOperation","params","authState","token","operation","fetchOptions","context","headers","Authorization","getAuth","async","get","userToken","didAuthError","error","message","indexOf","persistedFetchExchange","preferGetForPersistedQueries","multipartFetchExchange","ctx","insert_hydration_dev","target","fetching","mutation","LogoutDocument","getMe","operationStore","GetMeDocument","undefined","pause","query","subscribe","getTime","cookie","set","domain","window","location","hostname","expires","oneMonth","first","logoutMutation","catch","then","remove","reexecute","requestPolicy","response","console","unsub","data","user","signInMethods","github","OAuthGithubDocument","google","OAuthGoogleDocument","facebook","OAuthFacebookDocument","errorToast","signingIn","localStorage","getItem","removeItem","queryParams","Object","fromEntries","$page","searchParams","entries","length","URLSearchParams","search","code","state","signInMethod","loginDialogOpen","result","$$invalidate","session","oauthOptions","GetOAuthOptionsDocument","callback_url","goTo","service","setItem","goto","$oauthOptions","getOAuthOptions","$loginDialogOpen","value","variables","encodeURIComponent","origin","pathname","startsWith","attr_dev","avatar","username","href","icon","label","external","i","open","$$props","drawerVariant","hideTopElements","accessibility","top","base","bottom","click_handler_2","$user","prefetch","item","currentPath","isAdmin","roles","approveMods","approveVersions","editSMLVersions","gTag","if_block","create_if_block_5","pingLauncher","t0_value","$$inline","create_if_block_6","create_if_block","append_hydration_dev","document_1","div1","if_block0","client","initializeGraphQLClient","gqlClient","root","onMount","document","body","initialise","palette","popup","background","button","theme","position","customProtocolCheck","__vitePreload","toLocaleLowerCase","hasLauncher","toString","setClient","onMobile","mobile","menu","setOpen","SMUI_action_handler","$$value","classList","add"],"sources":["../../../../../../src/lib/core/graphql.ts","../../../../../../src/lib/components/auth/LoginDialog.svelte","../../../../../../src/lib/components/general/Sidebar.svelte","../../../../../../src/routes/__layout.svelte"],"sourcesContent":["import schema from '$lib/generated/graphql.schema.urql.json';\nimport type { Client } from '@urql/svelte';\nimport { createClient } from '@urql/svelte';\nimport { cacheExchange } from '@urql/exchange-graphcache';\nimport { persistedFetchExchange } from '@urql/exchange-persisted-fetch';\nimport { multipartFetchExchange } from '@urql/exchange-multipart-fetch';\nimport { API_GRAPHQL } from './api';\nimport { userToken } from '$lib/stores/user';\nimport { authExchange } from '@urql/exchange-auth';\nimport type { Operation } from '@urql/core';\nimport type { LoadInput } from '@sveltejs/kit/types/page';\nimport { get } from 'svelte/store';\n\ninterface SMRAuthState {\n  token: string | null;\n}\n\nexport const initializeGraphQLClient = (fetch?: LoadInput['fetch']): Client => {\n  return createClient({\n    url: API_GRAPHQL,\n    fetch,\n    exchanges: [\n      cacheExchange({\n        schema,\n        keys: {\n          GetMods: () => null,\n          LatestVersions: () => null,\n          UserMod: () => null,\n          GetGuides: () => null,\n          OAuthOptions: () => null,\n          UserRoles: () => null,\n          Compatibility: () => null,\n          CompatibilityInfoInput: () => null,\n          CompatibilityInfo: () => null\n        },\n        updates: {\n          Mutation: {\n            deleteGuide(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Guide',\n                id: args.guideId as string\n              });\n            },\n            deleteMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            denyMod(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Mod',\n                id: args.modId as string\n              });\n            },\n            approveVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            denyVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            deleteSMLVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'SMLVersion',\n                id: args.smlVersionId as string\n              });\n            },\n            deleteVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            },\n            updateVersion(_result, args, cache) {\n              cache.invalidate({\n                __typename: 'Version',\n                id: args.versionId as string\n              });\n            }\n          }\n        }\n      }),\n      authExchange({\n        addAuthToOperation(params: { authState: SMRAuthState | null; operation: Operation }): Operation {\n          if (!params.authState || !params.authState.token) {\n            return params.operation;\n          }\n\n          const fetchOptions =\n            typeof params.operation.context.fetchOptions === 'function'\n              ? params.operation.context.fetchOptions()\n              : params.operation.context.fetchOptions || {};\n\n          return {\n            ...params.operation,\n            context: {\n              ...params.operation.context,\n              fetchOptions: {\n                ...fetchOptions,\n                headers: {\n                  ...fetchOptions.headers,\n                  Authorization: params.authState.token\n                }\n              }\n            }\n          };\n        },\n        getAuth: async (): Promise<SMRAuthState | null> => {\n          return {\n            token: get(userToken)\n          };\n        },\n        didAuthError({ error }): boolean {\n          return error.message.indexOf('user not logged in') >= 0;\n        }\n      }),\n      persistedFetchExchange({\n        preferGetForPersistedQueries: true\n      }),\n      multipartFetchExchange\n    ]\n  });\n};\n","<script lang=\"ts\">\n  import { loginDialogOpen } from '$lib/stores/global';\n  import {\n    GetMeDocument,\n    GetOAuthOptionsDocument,\n    OAuthFacebookDocument,\n    OAuthGithubDocument,\n    OAuthGoogleDocument,\n    LogoutDocument\n  } from '$lib/generated';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { browser } from '$app/env';\n  import { page } from '$app/stores';\n  import { goto } from '$app/navigation';\n  import Toast from '../general/Toast.svelte';\n  import { user, userToken } from '$lib/stores/user';\n  import cookie from 'js-cookie';\n  import Dialog, { Title, Content } from '@smui/dialog';\n  import Button from '@smui/button';\n  import CircularProgress from '@smui/circular-progress';\n\n  const logoutMutation = mutation({\n    query: LogoutDocument\n  });\n\n  if (browser) {\n    const getMe = operationStore(GetMeDocument, undefined, {\n      pause: true\n    });\n\n    query(getMe);\n\n    let first = true;\n    userToken.subscribe((token) => {\n      if (token) {\n        const oneMonth = new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000);\n        cookie.set('token', token, {\n          domain: window.location.hostname,\n          expires: oneMonth\n        });\n      } else if (!first) {\n        logoutMutation(undefined, {\n          requestPolicy: 'network-only'\n        })\n          .catch()\n          .then(() => {\n            cookie.remove('token');\n          });\n      }\n\n      first = false;\n\n      if (token) {\n        getMe.reexecute({\n          requestPolicy: 'network-only',\n          fetchOptions: {\n            cache: 'no-cache'\n          }\n        });\n\n        const unsub = getMe.subscribe((response) => {\n          if (!response.fetching) {\n            if (response.error) {\n              // TODO Toast or something\n              console.error(response.error.message);\n              unsub();\n            } else if (response.data) {\n              user.set(response.data.getMe);\n              unsub();\n            }\n          }\n        });\n      } else {\n        user.set(null);\n      }\n    });\n  }\n\n  const signInMethods = {\n    github: mutation({\n      query: OAuthGithubDocument\n    }),\n    google: mutation({\n      query: OAuthGoogleDocument\n    }),\n    facebook: mutation({\n      query: OAuthFacebookDocument\n    })\n  };\n\n  let errorMessage = '';\n  let errorToast = false;\n  let signingIn = false;\n\n  if (browser) {\n    const signInMethod = localStorage.getItem('sign.in.method');\n    localStorage.removeItem('sign.in.method');\n\n    let queryParams = Object.fromEntries($page.url.searchParams.entries());\n    if (Object.keys(queryParams).length === 0) {\n      queryParams = Object.fromEntries(new URLSearchParams(window.location.search));\n    }\n\n    const code = queryParams['code'];\n    const state = queryParams['state'];\n\n    if (signInMethod && code && state) {\n      signingIn = true;\n      loginDialogOpen.set(true);\n\n      signInMethods[signInMethod as 'github' | 'google' | 'facebook']({\n        code,\n        state\n      })\n        .then((result) => {\n          if (result.error) {\n            console.error(result.error.message);\n            errorMessage = 'Error logging in: ' + result.error.message;\n            errorToast = true;\n          } else {\n            userToken.set(result.data.session.token);\n            loginDialogOpen.set(false);\n          }\n        })\n        .catch()\n        .then(() => (signingIn = false));\n    }\n  }\n\n  const oauthOptions = operationStore(\n    GetOAuthOptionsDocument,\n    { callback_url: '' },\n    {\n      requestPolicy: 'network-only'\n    }\n  );\n\n  $: if ($loginDialogOpen) {\n    oauthOptions.variables.callback_url = encodeURIComponent(window.location.origin + window.location.pathname);\n    query(oauthOptions);\n  }\n\n  const goTo = (service: string, url: string) => {\n    localStorage.setItem('sign.in.method', service);\n    goto(url);\n  };\n</script>\n\n<Dialog bind:open={$loginDialogOpen}>\n  <Title>Login / Sign Up</Title>\n  <Content>\n    <div class=\"grid grid-flow-row gap-4\">\n      {#if signingIn}\n        <p>Logging in...</p>\n        <div class=\"flex justify-center\">\n          <CircularProgress class=\"h-10 w-10\" indeterminate />\n        </div>\n      {:else if $oauthOptions.fetching}\n        <!-- TODO Placeholders -->\n        <p>Loading...</p>\n      {:else if $oauthOptions.error}\n        <p>Oh no... {$oauthOptions.error.message}</p>\n      {:else}\n        <Button variant=\"outlined\" on:click={() => goTo('github', $oauthOptions.data.getOAuthOptions.github)}>\n          Sign in with Github\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('google', $oauthOptions.data.getOAuthOptions.google)}>\n          Sign in with Google\n        </Button>\n        <Button variant=\"outlined\" on:click={() => goTo('facebook', $oauthOptions.data.getOAuthOptions.facebook)}>\n          Sign in with Facebook\n        </Button>\n      {/if}\n    </div>\n  </Content>\n</Dialog>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n","<script lang=\"ts\">\n  import Switch from '@smui/switch';\n  import FormField from '@smui/form-field';\n  import Drawer, { Content } from '@smui/drawer';\n  import List, { Item, Text, Graphic, Separator } from '@smui/list';\n  import { goto, prefetch } from '$app/navigation';\n  import { base } from '$app/paths';\n  import { page } from '$app/stores';\n  import { user, userToken } from '$lib/stores/user';\n  import { loginDialogOpen } from '$lib/stores/global';\n\n  export let open: boolean;\n  export let drawerVariant: 'modal' | 'dismissible';\n  export let hideTopElements: boolean;\n  export let accessibility: boolean;\n\n  $: currentPath = $page.url.pathname;\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  const top = [\n    {\n      url: base + '/',\n      icon: 'home',\n      label: 'Home'\n    },\n    {\n      url: base + '/mods',\n      icon: 'extension',\n      label: 'Mods'\n    },\n    {\n      url: base + '/guides',\n      icon: 'description',\n      label: 'Guides'\n    },\n    {\n      url: base + '/sml-versions',\n      icon: 'lightbulb',\n      label: 'SML Versions'\n    },\n    {\n      url: base + '/tools',\n      icon: 'apps',\n      label: 'Tools'\n    },\n    {\n      url: 'https://discord.gg/xkVJ73E',\n      icon: 'people',\n      label: 'Discord',\n      external: true\n    },\n    {\n      url: 'https://docs.ficsit.app/',\n      icon: 'find_in_page',\n      label: 'Docs',\n      external: true\n    },\n    {\n      url: 'https://forums.ficsit.app/',\n      icon: 'forum',\n      label: 'Forums',\n      external: true\n    }\n  ];\n\n  const bottom = [\n    {\n      url: base + '/help',\n      icon: 'help',\n      label: 'Help'\n    },\n    {\n      url: base + '/privacy-policy',\n      icon: 'policy',\n      label: 'Privacy Policy'\n    },\n    {\n      url: base + '/tos',\n      icon: 'gavel',\n      label: 'Terms of Service'\n    },\n    {\n      url: base + '/api-docs',\n      icon: 'api',\n      label: 'API'\n    },\n    {\n      url: 'https://github.com/satisfactorymodding',\n      icon: 'source',\n      label: 'Github',\n      external: true\n    }\n  ];\n</script>\n\n<Drawer variant={drawerVariant} fixed={false} bind:open>\n  <Content>\n    <div class=\"drawer-content\">\n      {#if hideTopElements}\n        <List>\n          {#if $user === null}\n            <Item on:click={() => loginDialogOpen.set(true)}>\n              <Graphic class=\"material-icons\">login</Graphic>\n              <Text>Sign In</Text>\n            </Item>\n          {:else}\n            {#if isAdmin}\n              <Item on:click={() => goto(base + '/admin')} activated={currentPath.startsWith('/admin')}>\n                <Graphic class=\"material-icons\">admin_panel_settings</Graphic>\n                <Text>Admin</Text>\n              </Item>\n            {/if}\n\n            <Item on:click={() => goto(base + '/user/' + $user.id)} activated={currentPath.startsWith('/user')}>\n              <Graphic>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Graphic>\n              <Text>{$user.username}</Text>\n            </Item>\n\n            <Item on:click={() => userToken.set(null)}>\n              <Graphic class=\"material-icons\">logout</Graphic>\n              <Text>Logout</Text>\n            </Item>\n          {/if}\n        </List>\n\n        <Separator />\n      {/if}\n\n      <List>\n        {#each top as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => prefetch(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n      </List>\n\n      <List>\n        {#each bottom as item}\n          {#if !item.external}\n            <Item href={item.url} activated={currentPath === item.url} on:mouseover={() => prefetch(item.url)}>\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {:else}\n            <Item href={item.url} target=\"_blank\" rel=\"noopener\">\n              <Graphic class=\"material-icons\">{item.icon}</Graphic>\n              <Text>{item.label}</Text>\n            </Item>\n          {/if}\n        {/each}\n\n        {#if hideTopElements}\n          <Item target=\"_blank\" href=\"https://smm.ficsit.app\" rel=\"noopener\">\n            <Graphic class=\"material-icons\">file_download</Graphic>\n            <Text>Mod Manager</Text>\n          </Item>\n        {/if}\n\n        <Item>\n          <FormField align=\"end\">\n            <Switch bind:checked={accessibility} aria-label=\"Accessibility Font\" />\n            <span slot=\"label\">Accessibility Font</span>\n          </FormField>\n        </Item>\n      </List>\n    </div>\n  </Content>\n</Drawer>\n\n<style lang=\"postcss\">\n  .drawer-content {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n</style>\n","<script lang=\"ts\" context=\"module\">\n  import type { Load } from '@sveltejs/kit';\n  import './_global.postcss';\n  import { base } from '$app/paths';\n  import { initializeGraphQLClient } from '$lib/core';\n  import type { Client } from '@urql/svelte';\n  import { gqlClient } from '$lib/stores/global';\n  import { browser } from '$app/env';\n\n  let gTag = undefined;\n  if (browser) {\n    gTag = import.meta.env.VITE_GOOGLE_SITE_TAG as string;\n    window['gTag'] = gTag;\n  }\n\n  let client: Client;\n\n  export const load: Load = async ({ fetch }) => {\n    client = initializeGraphQLClient(fetch);\n    gqlClient.set(client);\n    return {};\n  };\n</script>\n\n<script lang=\"ts\">\n  import LoginDialog from '$lib/components/auth/LoginDialog.svelte';\n  import { setClient } from '@urql/svelte';\n  import TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\n  import { AppContent, Scrim } from '@smui/drawer';\n  import List, { Item, Text } from '@smui/list';\n  import IconButton from '@smui/icon-button';\n  import Button, { Label, Icon } from '@smui/button';\n  import { user, userToken } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { loginDialogOpen, onMobile } from '$lib/stores/global';\n  import type { MenuComponentDev } from '@smui/menu';\n  import Menu from '@smui/menu';\n  import { onMount } from 'svelte';\n  import { customProtocolCheck, hasLauncher, pingLauncher } from '$lib/stores/launcher';\n  import Sidebar from '$lib/components/general/Sidebar.svelte';\n\n  let root: HTMLElement;\n  onMount(async () => {\n    if (browser) {\n      root = document.body;\n\n      await import('cookieconsent/src/cookieconsent');\n\n      if ('cookieconsent' in window) {\n        window['cookieconsent'].initialise({\n          palette: {\n            popup: {\n              background: '#000'\n            },\n            button: {\n              background: '#f1d600'\n            }\n          },\n          theme: 'edgeless',\n          position: 'bottom-right'\n        });\n      }\n\n      customProtocolCheck.set(await import('$lib/thirdparty/custom_protocol'));\n\n      if (localStorage.getItem('hasLauncher') && localStorage.getItem('hasLauncher').toLocaleLowerCase() === 'true') {\n        hasLauncher.set(true);\n      }\n\n      hasLauncher.subscribe((value) => {\n        if (value === true || value === false) {\n          localStorage.setItem('hasLauncher', value.toString().toLocaleLowerCase());\n        }\n      });\n    }\n  });\n\n  let accessibility = false;\n  $: root && (accessibility ? root.classList.add('accessibility') : root.classList.remove('accessibility'));\n\n  setClient(client);\n\n  $: isAdmin = !$user ? false : $user.roles.approveMods || $user.roles.approveVersions || $user.roles.editSMLVersions;\n\n  let open = false;\n  let drawerVariant: 'modal' | undefined = 'modal';\n  let hideTopElements = true;\n  if (browser) {\n    onMobile.subscribe((mobile) => {\n      drawerVariant = mobile ? 'modal' : undefined;\n      hideTopElements = mobile;\n    });\n  }\n\n  let menu: MenuComponentDev;\n</script>\n\n<svelte:head>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"{base}/assets/favicon.ico\" />\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"{base}/assets/apple-touch-icon.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"{base}/assets/favicon-32x32.png?v=69P26YMB35\" />\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"{base}/assets/favicon-16x16.png?v=69P26YMB35\" />\n  <link rel=\"manifest\" href=\"{base}/manifest.json?v=69P26YMB35\" />\n  <link rel=\"mask-icon\" href=\"{base}/assets/safari-pinned-tab.svg?v=69P26YMB35\" color=\"#da8517\" />\n  <link rel=\"shortcut icon\" href=\"{base}/assets/favicon.ico?v=69P26YMB35\" />\n  <meta name=\"msapplication-TileColor\" content=\"#da8517\" />\n  <meta name=\"msapplication-config\" content=\"{base}/static/assets/browserconfig.xml?v=69P26YMB35\" />\n  <meta name=\"theme-color\" content=\"#ff6f00\" />\n\n  <link rel=\"preload\" href=\"{base}/assets/fonts/flow-rounded.woff\" as=\"font\" type=\"font/woff\" />\n\n  {#if gTag}\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id={gTag}\"></script>\n    <script>\n      window.dataLayer = window.dataLayer || [];\n\n      function gtag() {\n        dataLayer.push(arguments);\n      }\n\n      gtag('js', new Date());\n\n      gtag('config', window['gTag']);\n    </script>\n  {/if}\n</svelte:head>\n\n<div class=\"app-container\">\n  <TopAppBar variant=\"static\">\n    <Row>\n      <Section>\n        {#if drawerVariant === 'modal'}\n          <IconButton class=\"material-icons\" on:click={() => (open = !open)}>menu</IconButton>\n        {/if}\n        <Title>FICSIT Augmentation Database</Title>\n      </Section>\n      {#if !hideTopElements}\n        <Section align=\"end\" toolbar>\n          {#if $hasLauncher}\n            <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={pingLauncher}>\n              <Label>Launcher Detected</Label>\n              <Icon class=\"material-icons\">file_download</Icon>\n            </Button>\n          {:else}\n            <Button\n              color=\"secondary\"\n              variant=\"outlined\"\n              class=\"mr-3\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              href=\"https://smm.ficsit.app\"\n            >\n              <Label>Mod Manager</Label>\n              <Icon class=\"material-icons\">file_download</Icon>\n            </Button>\n          {/if}\n\n          {#if $user === null}\n            <Button color=\"secondary\" variant=\"outlined\" on:click={() => loginDialogOpen.set(true)}>\n              <Label>Sign In</Label>\n              <Icon class=\"material-icons\">login</Icon>\n            </Button>\n          {:else}\n            {#if isAdmin}\n              <Button color=\"secondary\" variant=\"outlined\" class=\"mr-3\" on:click={() => goto(base + '/admin')}>\n                <Label>Admin</Label>\n                <Icon class=\"material-icons\">admin_panel_settings</Icon>\n              </Button>\n            {/if}\n\n            <div>\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                on:click={() => menu.setOpen(true)}\n                class=\"grid grid-flow-col\"\n              >\n                <div class=\"mr-3\">{$user.username}</div>\n                <div class=\"rounded-full bg-cover w-7 h-7\" style={`background-image: url(\"${$user.avatar}\")`} />\n              </Button>\n\n              <Menu bind:this={menu}>\n                <List>\n                  <Item on:SMUI:action={() => goto(base + '/user/' + $user.id)}>\n                    <Text>Profile</Text>\n                  </Item>\n                  <Item on:SMUI:action={() => goto(base + '/settings')}>\n                    <Text>Settings</Text>\n                  </Item>\n                  <Item on:SMUI:action={() => userToken.set(null)}>\n                    <Text>Logout</Text>\n                  </Item>\n                </List>\n              </Menu>\n            </div>\n          {/if}\n        </Section>\n      {/if}\n    </Row>\n  </TopAppBar>\n\n  <div class=\"drawer-container\">\n    <Sidebar bind:open bind:accessibility bind:drawerVariant bind:hideTopElements />\n\n    {#if drawerVariant === 'modal'}\n      <Scrim fixed={false} />\n    {/if}\n\n    <AppContent class=\"app-content w-full overflow-auto py-6 px-3\">\n      <main class=\"main-content min-h-full\">\n        <slot />\n      </main>\n    </AppContent>\n  </div>\n</div>\n\n<LoginDialog />\n\n<style lang=\"postcss\">\n  .app-container {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    height: 100vh;\n    max-height: 100vh;\n    width: 100vw;\n    max-width: 100vw;\n  }\n\n  .drawer-container {\n    display: flex;\n    height: 100%;\n    overflow: hidden;\n    position: relative;\n  }\n</style>\n"],"file":"pages/__layout.svelte-813f5474.js"}