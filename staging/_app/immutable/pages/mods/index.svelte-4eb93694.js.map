{"version":3,"file":"index.svelte-4eb93694.js","sources":["../../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../../src/routes/mods/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { operationStore, query } from '@urql/svelte';\n  import { GetModsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { get, writable } from 'svelte/store';\n  import { base } from '$app/paths';\n  import Button from '@smui/button';\n  import { Input } from '@smui/textfield';\n  import Paper from '@smui/paper';\n  import Fab from '@smui/fab';\n  import { Icon } from '@smui/common';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import Select, { Option } from '@smui/select';\n  import { browser } from '$app/env';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  let search = $storePage.url.searchParams.get('q');\n\n  // TODO Selectable\n  const perPage = 40;\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  const mods = operationStore(GetModsDocument, { offset: 0, limit: perPage, search, order, orderBy });\n\n  const page = writable<number>(parseInt($storePage.url.searchParams.get('p'), 10) || 1);\n  let totalMods: number;\n\n  let searchField = search;\n  $: {\n    let changed = false;\n    if ($mods.variables.search !== search) {\n      changed = true;\n      $mods.variables.search = search;\n    }\n\n    if ($mods.variables.order !== order) {\n      changed = true;\n      $mods.variables.order = order;\n    }\n\n    if ($mods.variables.orderBy !== orderBy && orderBy) {\n      changed = true;\n      $mods.variables.orderBy = orderBy;\n    }\n\n    if (changed) {\n      $mods.reexecute();\n    }\n  }\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page.set(1);\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  const updateUrl = () => {\n    if (browser) {\n      const params = {};\n\n      params['p'] = get(page);\n\n      if (searchField !== '' && searchField !== null) {\n        params['q'] = searchField;\n      }\n\n      const resultQuery = Object.keys(params)\n        .map((key) => key + '=' + encodeURIComponent(params[key]))\n        .join('&');\n\n      goto(base + '/mods?' + resultQuery);\n    }\n  };\n\n  page.subscribe((p) => {\n    $mods.variables.offset = (p - 1) * perPage;\n    $mods.reexecute();\n    updateUrl();\n  });\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  query(mods);\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  const handleKeyDown = (event: CustomEvent | KeyboardEvent) => {\n    if ((event as KeyboardEvent).key === 'Enter') {\n      updateUrl();\n    }\n  };\n\n  $: orderFields = [\n    ['Name', 'name'],\n    ['Views', 'views'],\n    ['Downloads', 'downloads'],\n    ['Hotness (Views)', 'hotness'],\n    ['Popularity (Downloads)', 'popularity'],\n    ['Creation Date', 'created_at'],\n    ['Last Version', 'last_version_date'],\n    ...(search !== '' && search !== null ? [['Search', 'search']] : [])\n  ];\n</script>\n\n<div class=\"ml-auto flex flex-wrap justify-between items-center mb-5\">\n  {#if newMod && $user !== null}\n    <Button variant=\"outlined\" href=\"{base}/new-mod\">New Mod</Button>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"search-container flex flex-wrap sm:px-4\">\n      <div class=\"mr-3\">\n        <Select bind:value={orderBy} label=\"Order By\">\n          {#each orderFields as orderField}\n            <Option value={orderField[1]}>{orderField[0]}</Option>\n          {/each}\n        </Select>\n      </div>\n      <div class=\"mr-3\">\n        <Select bind:value={order} label=\"Order\">\n          <Option value=\"asc\">Ascending</Option>\n          <Option value=\"desc\">Descending</Option>\n        </Select>\n      </div>\n      <Paper class=\"search-paper mr-3\" elevation={6}>\n        <Icon class=\"material-icons\">search</Icon>\n        <Input bind:value={searchField} on:keypress={handleKeyDown} placeholder=\"Search\" />\n      </Paper>\n      <Fab on:click={() => goto(base + '/mods?q=' + search)} color=\"primary\" mini class=\"solo-fab\" aria-label=\"Search\">\n        <Icon class=\"material-icons\">arrow_forward</Icon>\n      </Fab>\n    </div>\n  {/if}\n\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n<style>\n  .search-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["base","ctx","insert_hydration_dev","target","div2","anchor","append_hydration_dev","div0","div1","t_value","dirty","set_data_dev","t","value","option_changes","length","i","each_blocks","each_value_1","data","getMods","mods","div","error","message","p","t1","t1_value","each_value","Array","perPage","create_if_block_3","create_if_block_2","totalPages","Math","ceil","fetching","div3","pagecontrols0_changes","pagecontrols1_changes","colCount","$$props","newMod","showSearch","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","operationStore","GetModsDocument","offset","limit","page","writable","parseInt","totalMods","searchField","timer","updateUrl","params","resultQuery","Object","keys","map","key","encodeURIComponent","join","goto","subscribe","$mods","variables","reexecute","query","handleKeyDown","event","click_handler","clearTimeout","$$invalidate","setTimeout","Search","set","changed","set_store_value","count","gridClasses","orderFields"],"mappings":"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"}