{"version":3,"file":"index.svelte-5ea7fc44.js","sources":["../../../../../../../src/lib/components/mods/ModGrid.svelte","../../../../../../../src/routes/mods/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { operationStore, query } from '@urql/svelte';\n  import { GetModsDocument, ModFields, Order } from '$lib/generated';\n  import ModCard from './ModCard.svelte';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { get, writable } from 'svelte/store';\n  import { base } from '$app/paths';\n  import Button from '@smui/button';\n  import { Input } from '@smui/textfield';\n  import Paper from '@smui/paper';\n  import Fab from '@smui/fab';\n  import { Icon } from '@smui/common';\n  import { goto } from '$app/navigation';\n  import { page as storePage } from '$app/stores';\n  import { user } from '$lib/stores/user';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import Select, { Option } from '@smui/select';\n  import { browser } from '$app/env';\n\n  export let colCount: 4 | 5 = 4;\n  export let newMod = false;\n  export let showSearch = false;\n\n  let search = $storePage.url.searchParams.get('q');\n\n  // TODO Selectable\n  const perPage = 40;\n  let order: Order = Order.Desc;\n  let orderBy: ModFields = ModFields.LastVersionDate;\n\n  const mods = operationStore(GetModsDocument, { offset: 0, limit: perPage, search, order, orderBy });\n\n  const page = writable<number>(parseInt($storePage.url.searchParams.get('p'), 10) || 1);\n  let totalMods: number;\n\n  let searchField = search;\n  $: {\n    let changed = false;\n    if ($mods.variables.search !== search) {\n      changed = true;\n      $mods.variables.search = search;\n    }\n\n    if ($mods.variables.order !== order) {\n      changed = true;\n      $mods.variables.order = order;\n    }\n\n    if ($mods.variables.orderBy !== orderBy && orderBy) {\n      changed = true;\n      $mods.variables.orderBy = orderBy;\n    }\n\n    if (changed) {\n      $mods.reexecute();\n    }\n  }\n\n  let timer: number;\n  $: {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (searchField && searchField.length > 2) {\n        if ((search === '' || search === null) && searchField !== '' && searchField !== null) {\n          orderBy = ModFields.Search;\n          page.set(1);\n        }\n\n        search = searchField;\n      } else if (searchField === '' || searchField === null) {\n        if (orderBy === ModFields.Search || !orderBy) {\n          orderBy = ModFields.LastVersionDate;\n        }\n\n        search = null;\n      }\n    }, 250) as unknown as number;\n  }\n\n  const updateUrl = () => {\n    if (browser) {\n      const url = new URL(window.location.origin + window.location.pathname);\n      url.searchParams.append('p', get(page).toString());\n      searchField !== '' && searchField !== null && url.searchParams.append('q', searchField);\n      goto(url.toString());\n    }\n  };\n\n  page.subscribe((p) => {\n    $mods.variables.offset = (p - 1) * perPage;\n    $mods.reexecute();\n    updateUrl();\n  });\n\n  $: totalMods = $mods?.data?.getMods?.count || 0;\n\n  query(mods);\n\n  $: gridClasses =\n    colCount == 4\n      ? '3xl:grid-cols-4 2xl:grid-cols-3 lg:grid-cols-2 grid-cols-1'\n      : '3xl:grid-cols-3 2xl:grid-cols-2 grid-cols-1';\n\n  const handleKeyDown = (event: CustomEvent | KeyboardEvent) => {\n    if ((event as KeyboardEvent).key === 'Enter') {\n      updateUrl();\n    }\n  };\n\n  $: orderFields = [\n    ['Name', 'name'],\n    ['Views', 'views'],\n    ['Downloads', 'downloads'],\n    ['Hotness (Views)', 'hotness'],\n    ['Popularity (Downloads)', 'popularity'],\n    ['Creation Date', 'created_at'],\n    ['Last Version', 'last_version_date'],\n    ...(search !== '' && search !== null ? [['Search', 'search']] : [])\n  ];\n</script>\n\n<div class=\"ml-auto flex flex-wrap justify-between items-center mb-5\">\n  {#if newMod && $user !== null}\n    <Button variant=\"outlined\" href=\"{base}/new-mod\">New Mod</Button>\n  {/if}\n\n  {#if showSearch}\n    <div class=\"search-container flex flex-wrap sm:px-4\">\n      <div class=\"mr-3\">\n        <Select bind:value={orderBy} label=\"Order By\">\n          {#each orderFields as orderField}\n            <Option value={orderField[1]}>{orderField[0]}</Option>\n          {/each}\n        </Select>\n      </div>\n      <div class=\"mr-3\">\n        <Select bind:value={order} label=\"Order\">\n          <Option value=\"asc\">Ascending</Option>\n          <Option value=\"desc\">Descending</Option>\n        </Select>\n      </div>\n      <Paper class=\"search-paper mr-3\" elevation={6}>\n        <Icon class=\"material-icons\">search</Icon>\n        <Input bind:value={searchField} on:keypress={handleKeyDown} placeholder=\"Search\" />\n      </Paper>\n      <Fab on:click={() => goto(base + '/mods?q=' + search)} color=\"primary\" mini class=\"solo-fab\" aria-label=\"Search\">\n        <Icon class=\"material-icons\">arrow_forward</Icon>\n      </Fab>\n    </div>\n  {/if}\n\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n{#if $mods.fetching}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each Array(perPage) as _}\n      <FicsitCard fake />\n    {/each}\n  </div>\n{:else if $mods.error}\n  <p>Oh no... {$mods.error.message}</p>\n{:else}\n  <div class=\"grid {gridClasses} gap-4\">\n    {#each $mods.data.getMods.mods as mod}\n      <ModCard {mod} />\n    {/each}\n  </div>\n{/if}\n\n<div class=\"mt-5 ml-auto flex justify-end\">\n  <div>\n    <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n  </div>\n</div>\n\n<style>\n  .search-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n  }\n\n  * :global(.search-paper) {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    max-width: 600px;\n    height: 48px;\n  }\n\n  * :global(.search-paper > *) {\n    display: inline-block;\n    margin: 0 12px;\n  }\n</style>\n","<script lang=\"ts\">\n  import ModGrid from '$lib/components/mods/ModGrid.svelte';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Mods available from the Satisfactory Mod Repository\" title=\"Mods\" />\n</svelte:head>\n\n<ModGrid showSearch={true} newMod={true} colCount={4} />\n"],"names":["base","ctx","insert_hydration","target","div2","anchor","append_hydration","div0","div1","t_value","dirty","set_data","t","value","option_changes","length","i","each_blocks","each_value_1","data","getMods","mods","div","error","message","p","t1","t1_value","each_value","Array","perPage","create_if_block_3","create_if_block_2","totalPages","Math","ceil","fetching","div3","pagecontrols0_changes","pagecontrols1_changes","colCount","$$props","newMod","showSearch","search","$storePage","url","searchParams","get","order","Order","Desc","orderBy","ModFields","LastVersionDate","operationStore","GetModsDocument","offset","limit","page","writable","parseInt","totalMods","searchField","timer","updateUrl","URL","window","location","origin","pathname","append","toString","goto","subscribe","$mods","variables","reexecute","query","handleKeyDown","event","key","click_handler","clearTimeout","$$invalidate","setTimeout","Search","set","changed","set_store_value","count","gridClasses","orderFields"],"mappings":"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"}