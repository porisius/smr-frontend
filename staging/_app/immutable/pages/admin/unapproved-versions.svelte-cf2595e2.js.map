{"version":3,"file":"unapproved-versions.svelte-cf2595e2.js","sources":["../../../../../../../src/routes/admin/unapproved-versions.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveVersionDocument, DenyVersionDocument, GetUnapprovedVersionsDocument } from '$lib/generated';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { writable } from 'svelte/store';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { API_REST } from '$lib/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const versions = operationStore(GetUnapprovedVersionsDocument, {\n    filter: {\n      offset: 0,\n      limit: perPage\n    }\n  });\n\n  const page = writable(1);\n  let totalVersions: number;\n\n  page.subscribe((p) => ($versions.variables.filter.offset = (p - 1) * perPage));\n\n  $: totalVersions = $versions?.data?.getUnapprovedVersions?.count;\n\n  const approveVersionMut = mutation({\n    query: ApproveVersionDocument\n  });\n\n  const approveVersion = (versionId: string) => {\n    approveVersionMut({ versionId }).then(() => {\n      versions.reexecute();\n    });\n  };\n\n  const denyVersionMut = mutation({\n    query: DenyVersionDocument\n  });\n\n  const denyVersion = (versionId: string) => {\n    denyVersionMut({ versionId }).then(() => {\n      versions.reexecute();\n    });\n  };\n\n  query(versions);\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mod versions\" title=\"Admin: Unapproved Versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Mod</Cell>\n          <Cell>Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getUnapprovedVersions.versions as version}\n          <Row>\n            <Cell>{version.mod.name}</Cell>\n            <Cell>{version.version}</Cell>\n            <Cell>{prettyDate(version.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => approveVersion(version.id)}>Approve</Button>\n                <Button variant=\"outlined\" on:click={() => denyVersion(version.id)}>Deny</Button>\n                <Button\n                  variant=\"outlined\"\n                  href={API_REST + '/mod/' + version.mod_id + '/versions/' + version.id + '/download'}\n                >\n                  Download\n                </Button>\n                <Button variant=\"outlined\" href={base + '/mod/' + version.mod_id + '/version/' + version.id}>\n                  View\n                </Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n  </div>\n{/if}\n"],"names":["totalPages","Math","ceil","ctx","perPage","insert_hydration_dev","target","div1","anchor","append_hydration_dev","div0","dirty","pagecontrols_changes","mod","name","set_data_dev","t","t_value","version","prettyDate","created_at","href","API_REST","mod_id","id","base","div","button2_changes","each_value","data","getUnapprovedVersions","versions","length","i","each_blocks","error","message","t1","t1_value","fetching","create_if_block_3","create_if_block","operationStore","GetUnapprovedVersionsDocument","filter","offset","limit","page","writable","totalVersions","subscribe","p","set_store_value","$versions","variables","approveVersionMut","mutation","query","ApproveVersionDocument","approveVersion","versionId","then","reexecute","denyVersionMut","DenyVersionDocument","denyVersion","$$invalidate","count"],"mappings":"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"}