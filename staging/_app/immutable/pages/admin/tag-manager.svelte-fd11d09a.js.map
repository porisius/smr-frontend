{"version":3,"file":"tag-manager.svelte-fd11d09a.js","sources":["../../../../../../../src/routes/admin/tag-manager.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import Accordion, { Panel, Header, Content } from '@smui-extra/accordion';\n  import Textfield from '@smui/textfield';\n  import HelperText from '@smui/textfield/helper-text';\n  import Button, { Label, Icon } from '@smui/button';\n  import Snackbar from '@smui/snackbar';\n  import IconButton, { Icon as ButtonIcon } from '@smui/icon-button';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { noop } from 'svelte/internal';\n  import { CreateTagDocument, DeleteTagDocument, GetTagsDocument, UpdateTagDocument } from '$lib/generated';\n  import type { Tag } from '$lib/generated';\n  import type { SnackbarComponentDev } from '@smui/snackbar';\n\n  let tags: Tag[] = [];\n  const panels = {};\n  const nameFields = {};\n  let snackbarTagChangeSavedText = '';\n  let snackbarTagChangeSaved: SnackbarComponentDev;\n  let tagNegativeID = -1;\n\n  const tagsQuery = operationStore(GetTagsDocument);\n\n  const deleteTagQuery = mutation({ query: DeleteTagDocument });\n\n  const createTagQuery = mutation({ query: CreateTagDocument });\n\n  const updateTagQuery = mutation({ query: UpdateTagDocument });\n\n  tagsQuery.subscribe(() => {\n    const data = $tagsQuery.data;\n    tags = (data && (data.getTags as Tag[])) || [];\n  });\n  query(tagsQuery);\n\n  function newTag() {\n    if (!tags.find((tag) => tag.name == 'New Tag')) {\n      const tag = { id: tagNegativeID--, name: 'New Tag' } as Tag;\n      tags.push(tag);\n      tags = tags;\n      setTimeout(() => {\n        panels[tag.id].setOpen(true);\n        const field = nameFields[tag.id];\n        field.focus();\n        const input = field.getElement().querySelectorAll('input')[0] as HTMLInputElement;\n        input.select();\n      }, 0);\n    } else {\n      panels[tags[tags.length - 1].id].setOpen(true);\n      nameFields[tags[tags.length - 1].id].focus();\n    }\n  }\n\n  async function tagChange(tag: Tag) {\n    // ignore \"New Tag\"\n    if (tag.name == 'New Tag') {\n      return;\n    }\n\n    let success = false;\n    if (tag.id < 0) {\n      // Create new tag & update tag.id with new DB id or re-fetch all tags\n      try {\n        const result = await createTagQuery({ tagName: tag.name });\n        if (result.data) {\n          tag.id = result.data.createTag.id;\n          success = true;\n        }\n      } catch (err) {\n        console.log(err);\n      }\n      if (!success) {\n        snackbarTagChangeSavedText = `Failed to create Tag '${tag.name}'!`;\n        snackbarTagChangeSaved.open();\n        setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n        return;\n      }\n    } else {\n      // Update existing tag\n      try {\n        success = (await updateTagQuery({ tagID: tag.id, tagName: tag.name })).data.updateTag != null;\n      } catch {\n        noop();\n      }\n      if (!success) {\n        snackbarTagChangeSavedText = `Failed to update Tag '${tag.name}'!`;\n        snackbarTagChangeSaved.open();\n        setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n        return;\n      }\n    }\n\n    snackbarTagChangeSavedText = `Tag '${tag.name}' saved!`;\n    snackbarTagChangeSaved.open();\n    setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n  }\n\n  async function deleteTag(tag: Tag) {\n    if (tag.name != 'New Tag') {\n      // Remove tag\n      let success = false;\n      try {\n        const result = await deleteTagQuery({ tagID: tag.id });\n        success = result.data.deleteTag;\n      } catch {\n        success = false;\n      }\n      if (!success) {\n        snackbarTagChangeSavedText = `Failed to remove Tag '${tag.name}'!`;\n        snackbarTagChangeSaved.open();\n        setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n        return;\n      }\n    }\n\n    // Remove tag animation\n    const panelRemoveAnimation = () => {\n      const panel = panels[tag.id].getElement();\n      const startHeight = panel.scrollHeight;\n      panel.classList.add('smui-accordion__panel--removed');\n      panel.style.height = startHeight + 'px';\n      requestAnimationFrame(() => (panel.style.height = 0 + 'px'));\n      panel.addEventListener('transitionend', (e: TransitionEvent) => {\n        if (e.propertyName == 'height') {\n          panel.classList.remove('smui-accordion__panel--removed');\n          panel.style.height = 'auto';\n          tags = tags.filter((t) => t.id != tag.id);\n        }\n      });\n    };\n\n    let isPanelOpen = false;\n    for (const key in panels) {\n      const panelP = panels[key];\n      if (panelP?.isOpen()) {\n        panelP.setOpen(false);\n        if (!isPanelOpen) {\n          panelP.getElement().addEventListener(\n            'SMUIAccordionPanel:closed',\n            () => {\n              panelRemoveAnimation();\n            },\n            { once: true }\n          );\n        }\n        isPanelOpen = true;\n      }\n    }\n    if (!isPanelOpen) {\n      panelRemoveAnimation();\n    }\n\n    snackbarTagChangeSavedText = `Tag '${tag.name}' removed!`;\n    snackbarTagChangeSaved.open();\n    setTimeout(() => snackbarTagChangeSaved.close(), 2000);\n  }\n\n  function onDeleteClick(e: Event, tag: Tag) {\n    e.stopPropagation();\n    deleteTag(tag);\n  }\n</script>\n\n{#if $tagsQuery.fetching}\n  <h1>Loading tags...</h1>\n{:else if tagsQuery.error}\n  <h1>Failed to load tags: {$tagsQuery.error.message}</h1>\n{:else}\n  <Accordion>\n    {#each tags as tag}\n      <Panel bind:this={panels[tag.id]}>\n        <Header>\n          {tag.name}\n          <IconButton slot=\"icon\" on:click={(e) => onDeleteClick(e, tag)}>\n            <ButtonIcon class=\"material-icons\">delete_forever</ButtonIcon>\n          </IconButton>\n        </Header>\n        <Content>\n          <Textfield\n            bind:value={tag.name}\n            label=\"Tag-Name\"\n            bind:this={nameFields[tag.id]}\n            on:change={() => tagChange(tag)}>\n            <HelperText slot=\"helper\">Human-Readable name of the tag that is shown in UI</HelperText>\n          </Textfield>\n        </Content>\n      </Panel>\n    {/each}\n    <Panel nonInteractive>\n      <Header ripple={false}>\n        <Button variant=\"outlined\" on:click={newTag}>\n          <Label>Add new tag</Label>\n          <Icon class=\"material-icons\">add</Icon>\n        </Button>\n      </Header>\n    </Panel>\n  </Accordion>\n{/if}\n\n<Snackbar bind:this={snackbarTagChangeSaved} timeoutMs={4000}>\n  <Label>{snackbarTagChangeSavedText}</Label>\n</Snackbar>\n"],"names":["ctx","error","message","insert_hydration","target","h1","anchor","set_data","t1","t1_value","t_value","name","dirty","t","textfield_props","value","textfield_changes","length","i","each_blocks","fetching","tags","panels","nameFields","snackbarTagChangeSavedText","snackbarTagChangeSaved","tagNegativeID","tagsQuery","operationStore","GetTagsDocument","deleteTagQuery","mutation","query","DeleteTagDocument","createTagQuery","CreateTagDocument","updateTagQuery","UpdateTagDocument","subscribe","data","$tagsQuery","$$invalidate","getTags","find","tag","id","setOpen","focus","async","push","setTimeout","field","input","getElement","querySelectorAll","select","success","result","tagName","createTag","err","console","log","open","close","tagID","updateTag","deleteTag","panelRemoveAnimation","panel","startHeight","scrollHeight","classList","add","style","height","requestAnimationFrame","addEventListener","e","propertyName","remove","filter","isPanelOpen","key","panelP","isOpen","once","stopPropagation","click_handler","onDeleteClick","$$self","$$","not_equal","$$value","change_handler","tagChange"],"mappings":"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"}