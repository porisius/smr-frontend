{"version":3,"file":"index.svelte-ea54d434.js","sources":["../../../../../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../../../../../src/routes/mod/[modId]/version/[versionId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { markdown } from '$lib/utils/markdown';\n  import Card, { Content } from '@smui/card';\n\n  export let changelog!: string;\n</script>\n\n<Card class=\"h-fit\">\n  <Content>\n    <div class=\"markdown-content\">\n      {#await markdown(changelog) then changelogRendered}\n        <p>{@html changelogRendered}</p>\n      {/await}\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyArch, prettyBytes, prettyDate, prettyHash, prettyNumber } from '$lib/utils/formatting';\n\n  export let version!: Pick<\n    Version,\n    'created_at' | 'sml_version' | 'size' | 'stability' | 'downloads' | 'hash' | 'arch'\n  >;\n\n  const hash_toggle: boolean[] = [];\n  for (let i = 0; version.arch.length < i; i++) {\n    hash_toggle.push(true);\n  }\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg break-words\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>Downloads:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>SML Version:</strong> {version.sml_version}</span><br />\n      <span><strong>Stability:</strong> {version.stability}</span><br />\n      {#if version.arch.length != 0}\n        {#each version.arch as arch, i}\n          <hr style=\"margin-top: 10px; margin-bottom: 10px; vertical-align: middle;\" />\n          <span><strong>Platform:</strong> {prettyArch(arch.platform)}</span><br />\n          <span><strong>Size:</strong> {prettyBytes(arch.size)}</span><br />\n          <span\n            ><strong>Hash:</strong>\n            {prettyHash(hash_toggle[i], arch.hash)}\n            <button on:click={() => (hash_toggle[i] = !hash_toggle[i])}>show/hide</button>\n          </span>\n        {/each}\n      {:else}\n        <span><strong>Size:</strong> {prettyBytes(version.size)}</span><br />\n        <span><strong>Hash:</strong> {version.hash}</span>\n      {/if}\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetModVersionDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n\n  const versionQ = operationStore(GetModVersionDocument, { version: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    versionQ.variables.version = input.params.versionId;\n    return loadWaitForNoFetch({\n      version: versionQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation } from '@urql/svelte';\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import { API_REST } from '$lib/core';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { writable } from 'svelte/store';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import Button, { Label, Icon } from '@smui/button';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import type { MenuComponentDev } from '@smui/menu';\n  import Menu from '@smui/menu';\n  import List, { Item } from '@smui/list';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyArch } from '$lib/utils/formatting';\n\n  export let modId!: string;\n  export let versionId!: string;\n  export let version: typeof versionQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n  let menu: MenuComponentDev;\n\n  const deleteVersion = mutation({\n    query: DeleteVersionDocument\n  });\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteVersionFn = () => {\n    deleteVersion({ versionId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting version: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/mod/' + modId);\n      }\n    });\n  };\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            Edit\n          </Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n        {#if $version.data.getVersion.arch.length != 0}\n          <Button variant=\"outlined\" on:click={() => menu.setOpen(true)}>\n            <Label>Actions</Label>\n          </Button>\n          <Menu bind:this={menu}>\n            <List>\n              {#each $version.data.getVersion.arch as arch}\n                <Item>\n                  <Button\n                    variant=\"outlined\"\n                    href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/' + arch.platform + '/download'}\n                    >Download {prettyArch(arch.platform)}</Button>\n                </Item>\n              {/each}\n            </List>\n          </Menu>\n        {:else}\n          <Button variant=\"outlined\" href={base + '/mod/' + modId + '/version/' + versionId}>View</Button>\n          <Button variant=\"outlined\" href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}\n            >Download</Button>\n        {/if}\n        <Button variant=\"outlined\" on:click={() => installMod(version.data.getVersion.mod.mod_reference)}>\n          <Label>Install</Label>\n          <Icon class=\"material-icons\">download</Icon>\n        </Button>\n\n        <Button variant=\"outlined\" href={base + '/mod/' + modId}>\n          <Label>Mod</Label>\n          <Icon class=\"material-icons\">extension</Icon>\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} />\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title id=\"simple-title\">Delete Version?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this version</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteVersionFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["ctx","insert_hydration","target","p","anchor","innerHTML","raw_value","handle_promise","promise","markdown","info","div","dirty","changelog","$$props","prettyBytes","size","t6_value","hash","span0","append_hydration","strong0","br","span1","strong1","set_data","t2","t2_value","t6","each_value","arch","length","i","prettyArch","platform","t11_value","prettyHash","hr","br0","br1","span2","strong2","button","t3","t3_value","t7","t7_value","t11","prettyDate","created_at","prettyNumber","downloads","t12_value","sml_version","t16_value","stability","create_if_block","h3","br2","span3","strong3","br3","t4","t4_value","t8","t8_value","t12","t16","version","hash_toggle","push","click_handler","$$invalidate","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","create_if_block_5","base","create_if_block_3","div4","div1","h1","div0","div3","div2","current","t0","versiondescription_changes","error","message","t1","t1_value","href","API_REST","button0_changes","button_changes","each_blocks","span","fetching","create_if_block_6","versionQ","operationStore","GetModVersionDocument","undefined","load","paramsToProps","async","variables","input","params","versionId","loadWaitForNoFetch","modId","errorMessage","errorToast","menu","deleteVersion","mutation","query","DeleteVersionDocument","deleteDialogOpen","writable","deleteVersionFn","then","value","console","goto","set","setOpen","$$value","installMod","mod_reference","$deleteDialogOpen","canUserEdit","$user","roles","deleteContent","$version","authors","findIndex","author","user_id","id"],"mappings":"s/CAWkBA,EAAiB,GAAA,0EAA3BC,CAAAA,EAA+BC,EAAAC,EAAAC,CAAAA,oCAArBJ,EAAiB,GAAA,KAAAG,GAAAE,UAAAC,EAAAA,qKADrBC,UAAAC,EAAAC,GAAST,EAAS,IAAAU,iKAD5BT,CAAAA,EAIKC,EAAAS,EAAAP,8EAHKQ,EAAA,GAAAJ,IAAAA,GAAAC,GAAST,EAAS,EAAAO,IAAAA,GAAAC,EAAAE,usBANnBG,GAAkBC,wOCgCOC,GAAYf,EAAO,GAACgB,MAAI,iBACxBC,EAAAjB,KAAQkB,KAAI,8CAD5B,OAAA,6DACA,4FADA,yIACA,0DADdjB,CAAAA,EAA+DC,EAAAiB,EAAAf,GAAzDgB,EAAsBD,EAAAE,wBAAmCpB,EAAKC,EAAAoB,EAAAlB,UACpEH,EAAAA,EAAiDC,EAAAqB,EAAAnB,CAA3CgB,EAAAA,EAAsBG,EAAAC,4CADET,GAAYf,EAAO,GAACgB,IAAAA,EAAI,KAAAS,GAAAC,EAAAC,CAAAA,EACxBf,EAAA,GAAAK,IAAAA,GAAAjB,KAAQkB,KAAI,KAAAO,GAAAG,EAAAX,gEAZnCY,EAAA7B,KAAQ8B,0BAAbC,OAAIC,GAAA,wMAACH,EAAA7B,KAAQ8B,uBAAbC,OAAIC,GAAA,EAAA,2HAAJD,MAAAA,CAAAA,0DAEkCE,GAAWjC,EAAI,GAACkC,QAAAA,EAAQ,mBAC5BnB,GAAYf,EAAI,GAACgB,IAAAA,EAAI,iBAGhDmB,EAAAC,GAAWpC,EAAW,GAACA,EAAI,IAAAA,KAAKkB,IAAAA,EAAI,4GAJzB,wEACA,oEAEH,8CAEmD,mIALhD,WAAA,qIACA,OAAA,qIAEH,iFAEmD,2JAN9DjB,CAAAA,EAA4EC,EAAAmC,EAAAjC,CAAAA,WAC5EH,EAAmEC,EAAAiB,EAAAf,CAAAA,EAA7DgB,EAA0BD,EAAAE,sBAAmCpB,EAAAA,EAAKC,EAAAoC,EAAAlC,UACxEH,EAAAA,EAA4DC,EAAAqB,EAAAnB,CAAAA,EAAtDgB,EAAsBG,EAAAC,sBAAgCvB,EAAAA,EAAKC,EAAAqC,EAAAnC,YACjEH,EAIMC,EAAAsC,EAAApC,GAHHgB,EAAqBoB,EAAAC,+BAEtBrB,EAA6EoB,EAAAE,wEAL7CT,GAAWjC,EAAI,GAACkC,QAAQ,EAAA,KAAAT,GAAAkB,EAAAC,CAAAA,cAC5B7B,GAAYf,EAAI,GAACgB,IAAI,EAAA,KAAAS,GAAAoB,EAAAC,CAAAA,EAGhDlC,EAAA,GAAAuB,IAAAA,GAAAC,GAAWpC,EAAW,GAACA,EAAI,IAAAA,KAAKkB,IAAI,EAAA,KAAAO,GAAAsB,EAAAZ,CAAAA,CAAAA,gIAXVa,GAAWhD,EAAO,GAACiD,UAAAA,EAAU,mBAC3BC,GAAalD,EAAO,GAACmD,WAAS,iBAC5BC,EAAApD,KAAQqD,YAAW,oBACrBC,EAAAtD,KAAQuD,UAAS,0BAC/C,CAAA,MAAAvD,GAAQ,GAAA8B,KAAKC,QAAU,EAACyB,4DALO,4CACtB,UAAA,6DACA,YAAA,6DACA,8EACA,+IAJsB,MAAA,2FACtB,UAAA,0IACA,sJACA,4JACA,0MALhBvD,EAqBKC,EAAAS,EAAAP,CAAAA,EApBHgB,EAA4CT,EAAA8C,CAAAA,gBAC5CrC,EAAuET,EAAAQ,CAAjEC,EAAAA,EAAyBD,EAAAE,wBAAwCD,EAAKT,EAAA2B,UAC5ElB,EAA0ET,EAAAY,GAApEH,EAA2BG,EAAAC,wBAAyCJ,EAAKT,EAAA4B,CAAAA,OAC/EnB,EAAAA,EAAgET,EAAA6B,CAA1DpB,EAAAA,EAA6BoB,EAAAC,wBAA6BrB,EAAKT,EAAA+C,WACrEtC,EAA4DT,EAAAgD,CAAtDvC,EAAAA,EAA2BuC,EAAAC,EAAAA,0BAA2BxC,EAAKT,EAAAkD,2CAHhCb,GAAWhD,EAAO,GAACiD,YAAU,KAAAxB,GAAAqC,EAAAC,eAC3Bb,GAAalD,EAAO,GAACmD,WAAS,KAAA1B,GAAAuC,EAAAC,CAC5B,EAAArD,EAAA,GAAAwC,IAAAA,GAAApD,KAAQqD,YAAW,KAAA5B,GAAAyC,EAAAd,GACrBxC,EAAA,GAAA0C,IAAAA,GAAAtD,KAAQuD,UAAS,KAAA9B,GAAA0C,GAAAb,otBAlB7Cc,GAGVtD,OAEKuD,GAAW,UACRrC,GAAI,EAAGoC,EAAQtC,KAAKC,OAASC,EAAGA,IACvCqC,EAAYC,KAAK,IAoBgB,KAAAC,GAAAvC,GAAAwC,EAAA,EAAAH,EAAYrC,GAAAA,CAAMqC,EAAYrC,GAACqC,mPCuCpBI,YAAA,+BAAAzE,EAAS,GAAA0E,KAAKC,WAAWC,IAAIC,KAAI,IAAG7E,EAAS,GAAA0E,KAAKC,WAAWP,QACnFU,MAAA,eAAA9E,EAAS,GAAA0E,KAAKC,WAAWC,IAAIC,KAAI,IAAG7E,EAAS,GAAA0E,KAAKC,WAAWP,mGADvC,AAAAxD,EAAA,GAAAmE,GAAAN,YAAA,+BAAAzE,EAAS,GAAA0E,KAAKC,WAAWC,IAAIC,KAAI,IAAG7E,EAAS,GAAA0E,KAAKC,WAAWP,SACnFxD,EAAA,GAAAmE,GAAAD,MAAA,eAAA9E,EAAS,GAAA0E,KAAKC,WAAWC,IAAIC,KAAI,IAAG7E,EAAS,GAAA0E,KAAKC,WAAWP,uIAiF9D,mBAAA,KAAA,CAAA,uEArEhBY,EAAAhF,KAAS0E,KAAKC,WAAWC,IAAIC,KAAI,OACzBlD,EAAA3B,EAAS,GAAA0E,KAAKC,WAAWP,QAAO,gDAIpCpE,EAAW,IAAAiF,GAAAjF,gDAMXA,GAAQ,GAAC0E,KAAKC,WAAW7C,KAAKC,QAAU,EAAC,wKA0BbmD,GAAO,QAAUlF,EAAK,8DAO1Ba,UAAAb,EAAS,GAAA0E,KAAKC,WAAW9D,SAAAA,CAAAA,CAAAA,2BAEhCb,EAAQ,GAAC0E,KAAKC,oBAKrC3E,EAAW,IAAAmF,GAAAnF,CAAAA,gFAcKA,GAAU,KAAA,oBAAVA,EAAU,yGAjES;AAAA,8VAAA;AAAA,qsBAHxCC,EAoDKC,EAAAkF,EAAAhF,CAnDHgB,EAAAA,EA4CKgE,EAAAC,CAAAA,EA3CHjE,EAGIiE,EAAAC,CAAAA,4BAEJlE,EAAAA,EAqCKiE,EAAAE,sFAEPnE,EAKKgE,EAAAI,sBAHHpE,EAEKoE,EAAAC,CAAAA,kEA/CF,CAAA,AAAA,EAAAC,IAAA9E,EAAA,IAAAoE,IAAAA,GAAAhF,KAAS0E,KAAKC,WAAWC,IAAIC,KAAI,KAAApD,GAAAkE,EAAAX,CACzB,EAAA,EAAAU,IAAA9E,EAAA,IAAAe,IAAAA,GAAA3B,EAAS,GAAA0E,KAAKC,WAAWP,QAAO,KAAA3C,GAAAC,EAAAC,GAIpC3B,EAAW,gUAgCiBkF,GAAO,QAAUlF,EAAK,iEAO1B,AAAAY,EAAA,GAAAgF,GAAA/E,UAAAb,EAAS,GAAA0E,KAAKC,WAAW9D,kDAEhCb,EAAQ,GAAC0E,KAAKC,uBAKrC3E,EAAW,8LAcKA,EAAU,uYAtElBA,EAAQ,GAAC6F,MAAMC,QAAO,6BAAhC,WAAA,8CAAA,WAAA,gCAAH7F,EAAuCC,EAAAC,EAAAC,CAAAA,oCAA1BJ,EAAQ,GAAC6F,MAAMC,QAAO,KAAArE,GAAAsE,EAAAC,0EAFhC,YAAA,CAAA,sCAAA,mCAAH/F,EAAgBC,EAAAC,EAAAC,isBAaoG,oBAAA,MAAA,CAAA,sEAGrC,QAAA,CAAA,aAAA,iHAmBtC6F,KAAAf,GAAO,QAAUlF,EAAQ,GAAA,YAAcA,EAAS,sFAChDkG,GAAW,QAAUlG,KAAQ,aAAeA,EAAS,GAAG,iNADxD,AAAAY,EAAA,GAAAuF,GAAAF,KAAAf,GAAO,QAAUlF,EAAQ,GAAA,YAAcA,EAAS,8EAChDkG,GAAW,QAAUlG,KAAQ,aAAeA,EAAS,GAAG,o1BADN,MAAA,CAAA,aAAA,MAAA,CAAA,sEAEhF,wBAAA,iFAjBM,uBAAA,sXASYiC,GAAWjC,EAAI,IAACkC,QAAAA,EAAQ,oBAAlC,gCAAA,WAAA,yDAAUD,GAAWjC,EAAI,IAACkC,QAAQ,EAAA,KAAAT,GAAAsE,EAAAC,CAAAA,CAAAA,6FAD7BC,KAAAC,GAAW,QAAUlG,KAAQ,aAAeA,EAAS,GAAG,IAAMA,EAAK,IAAAkC,SAAW,oKAA9E,AAAAtB,EAAA,IAAAwF,GAAAH,KAAAC,GAAW,QAAUlG,KAAQ,aAAeA,EAAS,GAAG,IAAMA,EAAK,IAAAkC,SAAW,ieAJnFL,EAAA7B,EAAS,GAAA0E,KAAKC,WAAW7C,0BAA9BC,OAAIC,GAAA,qPAACH,EAAA7B,EAAS,GAAA0E,KAAKC,WAAW7C,uBAA9BC,OAAIC,GAAA,EAAA,oHAAJD,OAAIC,EAAAqE,EAAAtE,OAAAC,GAAA,0CAAJD,OAAIC,GAAA,kcAgBH,uBAAA,SAAA,CAAA,sEACsB,UAAA,CAAA,aAAA,UAAA,CAAA,ooBAItB,mBAAA,4EACsB,WAAA,CAAA,aAAA,itBAahBhC,GAAiB,KAAA,gBAAjBA,EAAiB,4MAAjBA,EAAiB,+IACT,+BAAA,wFAKmD,sBAAA,QAAA,CAAA,sEACV,QAAA,CAAA,aAAA,2TAHxD,kLAAA,6LADRC,EAKKC,EAAAS,EAAAP,GAJHgB,EAAwDT,EAAA2F,m6BAUvDtG,EAAY,EAAA,CAAA,yCAAZA,EAAY,yBAAnBC,EAA0BC,EAAAoG,EAAAlG,6BAAnBJ,EAAY,sDAjFfA,EAAQ,GAACuG,UAAAA,CAAavG,EAAQ,GAAC6F,OAAS7F,EAAQ,GAAC0E,KAAKC,YAAU6B,GAAAxG,8CAOnE,MAAAA,MAASuG,SAAQ,EAEZvG,KAAS6F,MAAK,EAEd7F,EAAQ,GAAC0E,KAAKC,WAAU,gSAX1B3E,EAAQ,GAACuG,WAAavG,EAAQ,GAAC6F,OAAS7F,EAAQ,GAAC0E,KAAKC,iWA9DtD,KAAA8B,IAAWC,GAAeC,GAAyB,CAAAvC,QAASwC,SAErDC,GAAOC,GAAaC,KAAAA,IAC/BN,IAASO,UAAU5C,QAAU6C,EAAMC,OAAOC,UACnCC,GACL,CAAAhD,QAASqC,KACRQ,CAAAA,EAAAA,qIAuBMI,GAAcvG,aACdqG,GAAkBrG,WAClBsD,GAAwBtD,IAE/B,EAAA,GAAAwG,GAAe,GACfC,EAAa,GACbC,EAEE,KAAAC,GAAgBC,GACpB,CAAAC,MAAOC,KAOHC,EAAmBC,GAAkB,6BAErCC,GAAe,IACnBN,CAAAA,EAAgB,CAAAN,UAAaa,CAAAA,CAAAA,EAAAA,KAAMC,IAC7B,AAAAA,EAAMpC,MACRqC,SAAQrC,MAAMoC,EAAMpC,MAAMC,OAAAA,EAC1BtB,EAAA,EAAA8C,EAAe,2BAA6BW,EAAMpC,MAAMC,SACxDtB,EAAA,EAAA+C,EAAa,EAAA,GAGbY,GAAKjD,GAAO,QAAUmC,CAAAA,CAAAA,CAAAA,CAAAA,QA4BuBc,GAAKjD,GAAO,QAAUmC,EAAQ,YAAcF,EAAY,eAGxDU,EAAiBO,IAAI,UAGrBZ,EAAKa,QAAQ,EAAA,4CAGvCb,EAAIc,uBAiBoBC,GAAWnE,EAAQM,KAAKC,WAAWC,IAAI4D,qBA0BrCX,EAAiBO,IAAI,EAAA,QACrBL,kBAP9BU,EAAiBR,yBAajBV,EAAUU,kKArG5BzD,EAAA,EAAAkE,EACDC,GAAOC,OAAOC,eACdC,GAAUpE,MAAMC,WAAWC,KAAKmE,SAASC,UAAWC,GAAWA,EAAOC,SAAWP,GAAOQ,EAAO,GAAA,CAAA,CAAA"}