{"version":3,"file":"extras.e164af81.js","sources":["../../../../../../node_modules/.pnpm/dompurify@3.0.3/node_modules/dompurify/dist/purify.es.js","../../../../../../node_modules/.pnpm/marked@5.1.0/node_modules/marked/lib/marked.esm.js","../../../../../../node_modules/.pnpm/marked-mangle@1.1.0_marked@5.1.0/node_modules/marked-mangle/src/index.js","../../../../../../node_modules/.pnpm/marked-gfm-heading-id@3.0.4_marked@5.1.0/node_modules/marked-gfm-heading-id/src/index.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/prism.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-c.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-cpp.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-lua.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-javascript.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-json.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-python.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-markdown.js","../../../../../../node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components/prism-markup.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/deep-compare-strict.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/pointer.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/dereference.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/format.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/ucs2-length.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/validate.js","../../../../../../node_modules/.pnpm/@cfworker+json-schema@1.12.5/node_modules/@cfworker/json-schema/dist/validator.js"],"sourcesContent":["/*! @license DOMPurify 3.0.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.3/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\n\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n/* Add properties to a lookup table */\n\nfunction addToSet(set, array, transformCaseFunc) {\n  var _transformCaseFunc;\n\n  transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\n\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n\n  while (l--) {\n    let element = array[l];\n\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n/* Shallow clone an object */\n\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    newObject[property] = value;\n  }\n\n  return newObject;\n}\n/* This method automatically checks if the prop is function\n * or getter and behaves accordingly. */\n\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\n\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\n\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME\n});\n\nconst getGlobal = () => typeof window === 'undefined' ? null : window;\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\n\n\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  } // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n\n\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  const DOMPurify = root => createDOMPurify(root);\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n\n\n  DOMPurify.version = '3.0.3';\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n  const currentScript = originalDocument.currentScript;\n  let {\n    document\n  } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n\n  let SAFE_FOR_TEMPLATES = false;\n  /* Decide if document with <html>... should be returned */\n\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  /* Parsing of strict XHTML documents */\n\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n  /* Keep a reference to config to pass to hooks */\n\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _parseConfig = function _parseConfig(cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n\n\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n\n\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n\n\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...text]);\n      ALLOWED_ATTR = [];\n\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n\n\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n\n\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      } // Overwrite existing TrustedTypes policy.\n\n\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      } // If creating the internal policy succeeded sign internal variables.\n\n\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    } // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n\n\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n\n  const ALL_SVG_TAGS = addToSet({}, svg$1);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n  const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      } // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n\n\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      } // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n\n\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      } // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n\n\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      } // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n\n\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      } // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n\n\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    } // For XHTML and XML documents that support custom namespaces\n\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    } // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n\n\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n\n\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n\n\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {// Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n\n\n  const _createIterator = function _createIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n\n\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n\n\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n  };\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n\n\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n\n\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeElements', currentNode, null);\n    /* Check if element is clobbered or can clobber */\n\n\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Now let's check the element's type and name */\n\n\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n\n\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n\n\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n      }\n      /* Keep content except for bad-listed elements */\n\n\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n\n\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Make sure that older browsers don't get noscript mXSS */\n\n\n    if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n\n\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n\n    return true;\n  };\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n\n\n  const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n\n\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n\n    while (l--) {\n      attr = attributes[l];\n      const {\n        name,\n        namespaceURI\n      } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n      /* Execute a hook if present */\n\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n\n\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n\n\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n\n\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n      /* Is `value` valid for this attribute? */\n\n\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n\n\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Handle attributes that require Trusted Types */\n\n\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n\n\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n\n\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode;\n\n    const shadowIterator = _createIterator(fragment);\n    /* Execute a hook if present */\n\n\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n      /* Deep shadow DOM detected */\n\n\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(shadowNode);\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n\n\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body;\n    let importedNode;\n    let currentNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n\n    IS_EMPTY_INPUT = !dirty;\n\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n\n\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n\n\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n\n\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n\n\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n\n\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n\n\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n\n\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n      /* Shadow DOM detected, sanitize it */\n\n\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(currentNode);\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n\n\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n\n\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n\n\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n\n    SET_CONFIG = true;\n  };\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n\n\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.js.map\n","/**\n * marked v5.1.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkDeprecations(opt, callback) {\n  if (!opt || opt.silent) {\n    return;\n  }\n\n  if (callback) {\n    console.warn('marked(): callback is deprecated since version 5.0.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/using_pro#async');\n  }\n\n  if (opt.sanitize || opt.sanitizer) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n\n  if (opt.highlight || opt.langPrefix !== 'language-') {\n    console.warn('marked(): highlight and langPrefix parameters are deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-highlight.');\n  }\n\n  if (opt.mangle) {\n    console.warn('marked(): mangle parameter is enabled by default, but is deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install https://www.npmjs.com/package/marked-mangle, or disable by setting `{mangle: false}`.');\n  }\n\n  if (opt.baseUrl) {\n    console.warn('marked(): baseUrl parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-base-url.');\n  }\n\n  if (opt.smartypants) {\n    console.warn('marked(): smartypants parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-smartypants.');\n  }\n\n  if (opt.xhtml) {\n    console.warn('marked(): xhtml parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-xhtml.');\n  }\n\n  if (opt.headerIds || opt.headerPrefix) {\n    console.warn('marked(): headerIds and headerPrefix parameters enabled by default, but are deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install  https://www.npmjs.com/package/marked-gfm-heading-id, or disable by setting `{headerIds: false}`.');\n  }\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        block: true,\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        block: false,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + rLength + 1);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:(?!^bull ).|\\n(?!\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.lheading = edit(block.lheading)\n  .replace(/bull/g, block.bullet) // lists can interrupt\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\n    //         (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //         | Skip orphan inside strong      | Consume to delim | (1) #***              | (2) a***#, a***                    | (3) #***a, ***a                  | (4) ***#                 | (5) #***#                         | (6) a***a\n    rDelimAst: /^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^((?![*_])[\\spunctuation])/\n};\n\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\ninline._punctuation = '\\\\p{P}$+<=>`^|~';\ninline.punctuation = edit(inline.punctuation, 'u').replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\ninline.anyPunctuation = /\\\\[punct]/g;\ninline._escapes = /\\\\([punct])/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim, 'u')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'gu')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'gu')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.anyPunctuation = edit(inline.anyPunctuation, 'gu')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = edit(inline._escapes, 'gu')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped characters\n    while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html, block) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          out += this.renderer.html(token.text, token.block);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nclass Marked {\n  defaults = getDefaults();\n  options = this.setOptions;\n\n  parse = this.#parseMarkdown(Lexer.lex, Parser.parse);\n  parseInline = this.#parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n  Parser = Parser;\n  parser = Parser.parse;\n  Renderer = Renderer;\n  TextRenderer = TextRenderer;\n  Lexer = Lexer;\n  lexer = Lexer.lex;\n  Tokenizer = Tokenizer;\n  Slugger = Slugger;\n  Hooks = Hooks;\n\n  constructor(...args) {\n    this.use(...args);\n  }\n\n  walkTokens(tokens, callback) {\n    let values = [];\n    for (const token of tokens) {\n      values = values.concat(callback.call(this, token));\n      switch (token.type) {\n        case 'table': {\n          for (const cell of token.header) {\n            values = values.concat(this.walkTokens(cell.tokens, callback));\n          }\n          for (const row of token.rows) {\n            for (const cell of row) {\n              values = values.concat(this.walkTokens(cell.tokens, callback));\n            }\n          }\n          break;\n        }\n        case 'list': {\n          values = values.concat(this.walkTokens(token.items, callback));\n          break;\n        }\n        default: {\n          if (this.defaults.extensions && this.defaults.extensions.childTokens && this.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n            this.defaults.extensions.childTokens[token.type].forEach((childTokens) => {\n              values = values.concat(this.walkTokens(token[childTokens], callback));\n            });\n          } else if (token.tokens) {\n            values = values.concat(this.walkTokens(token.tokens, callback));\n          }\n        }\n      }\n    }\n    return values;\n  }\n\n  use(...args) {\n    const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n\n    args.forEach((pack) => {\n      // copy options to new object\n      const opts = { ...pack };\n\n      // set async to true if it was set to true before\n      opts.async = this.defaults.async || opts.async || false;\n\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        pack.extensions.forEach((ext) => {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n          if (ext.renderer) { // Renderer extensions\n            const prevRenderer = extensions.renderers[ext.name];\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function(...args) {\n                let ret = ext.renderer.apply(this, args);\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n          if (ext.tokenizer) { // Tokenizer Extensions\n            if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n            if (ext.start) { // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n          if (ext.childTokens) { // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n        opts.extensions = extensions;\n      }\n\n      // ==-- Parse \"overwrite\" extensions --== //\n      if (pack.renderer) {\n        const renderer = this.defaults.renderer || new Renderer(this.defaults);\n        for (const prop in pack.renderer) {\n          const prevRenderer = renderer[prop];\n          // Replace renderer with func to run extension, but fall back if false\n          renderer[prop] = (...args) => {\n            let ret = pack.renderer[prop].apply(renderer, args);\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n            return ret;\n          };\n        }\n        opts.renderer = renderer;\n      }\n      if (pack.tokenizer) {\n        const tokenizer = this.defaults.tokenizer || new Tokenizer(this.defaults);\n        for (const prop in pack.tokenizer) {\n          const prevTokenizer = tokenizer[prop];\n          // Replace tokenizer with func to run extension, but fall back if false\n          tokenizer[prop] = (...args) => {\n            let ret = pack.tokenizer[prop].apply(tokenizer, args);\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n            return ret;\n          };\n        }\n        opts.tokenizer = tokenizer;\n      }\n\n      // ==-- Parse Hooks extensions --== //\n      if (pack.hooks) {\n        const hooks = this.defaults.hooks || new Hooks();\n        for (const prop in pack.hooks) {\n          const prevHook = hooks[prop];\n          if (Hooks.passThroughHooks.has(prop)) {\n            hooks[prop] = (arg) => {\n              if (this.defaults.async) {\n                return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                  return prevHook.call(hooks, ret);\n                });\n              }\n\n              const ret = pack.hooks[prop].call(hooks, arg);\n              return prevHook.call(hooks, ret);\n            };\n          } else {\n            hooks[prop] = (...args) => {\n              let ret = pack.hooks[prop].apply(hooks, args);\n              if (ret === false) {\n                ret = prevHook.apply(hooks, args);\n              }\n              return ret;\n            };\n          }\n        }\n        opts.hooks = hooks;\n      }\n\n      // ==-- Parse WalkTokens extensions --== //\n      if (pack.walkTokens) {\n        const walkTokens = this.defaults.walkTokens;\n        opts.walkTokens = function(token) {\n          let values = [];\n          values.push(pack.walkTokens.call(this, token));\n          if (walkTokens) {\n            values = values.concat(walkTokens.call(this, token));\n          }\n          return values;\n        };\n      }\n\n      this.defaults = { ...this.defaults, ...opts };\n    });\n\n    return this;\n  }\n\n  setOptions(opt) {\n    this.defaults = { ...this.defaults, ...opt };\n    return this;\n  }\n\n  #parseMarkdown(lexer, parser) {\n    return (src, opt, callback) => {\n      if (typeof opt === 'function') {\n        callback = opt;\n        opt = null;\n      }\n\n      const origOpt = { ...opt };\n      opt = { ...this.defaults, ...origOpt };\n      const throwError = this.#onError(opt.silent, opt.async, callback);\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type '\n          + Object.prototype.toString.call(src) + ', string expected'));\n      }\n\n      checkDeprecations(opt, callback);\n\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n      }\n\n      if (callback) {\n        const highlight = opt.highlight;\n        let tokens;\n\n        try {\n          if (opt.hooks) {\n            src = opt.hooks.preprocess(src);\n          }\n          tokens = lexer(src, opt);\n        } catch (e) {\n          return throwError(e);\n        }\n\n        const done = (err) => {\n          let out;\n\n          if (!err) {\n            try {\n              if (opt.walkTokens) {\n                this.walkTokens(tokens, opt.walkTokens);\n              }\n              out = parser(tokens, opt);\n              if (opt.hooks) {\n                out = opt.hooks.postprocess(out);\n              }\n            } catch (e) {\n              err = e;\n            }\n          }\n\n          opt.highlight = highlight;\n\n          return err\n            ? throwError(err)\n            : callback(null, out);\n        };\n\n        if (!highlight || highlight.length < 3) {\n          return done();\n        }\n\n        delete opt.highlight;\n\n        if (!tokens.length) return done();\n\n        let pending = 0;\n        this.walkTokens(tokens, (token) => {\n          if (token.type === 'code') {\n            pending++;\n            setTimeout(() => {\n              highlight(token.text, token.lang, (err, code) => {\n                if (err) {\n                  return done(err);\n                }\n                if (code != null && code !== token.text) {\n                  token.text = code;\n                  token.escaped = true;\n                }\n\n                pending--;\n                if (pending === 0) {\n                  done();\n                }\n              });\n            }, 0);\n          }\n        });\n\n        if (pending === 0) {\n          done();\n        }\n\n        return;\n      }\n\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n          .then(src => lexer(src, opt))\n          .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n          .then(tokens => parser(tokens, opt))\n          .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n          .catch(throwError);\n      }\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        const tokens = lexer(src, opt);\n        if (opt.walkTokens) {\n          this.walkTokens(tokens, opt.walkTokens);\n        }\n        let html = parser(tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n  }\n\n  #onError(silent, async, callback) {\n    return (e) => {\n      e.message += '\\nPlease report this to https://github.com/markedjs/this.';\n\n      if (silent) {\n        const msg = '<p>An error occurred:</p><pre>'\n          + escape(e.message + '', true)\n          + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        if (callback) {\n          callback(null, msg);\n          return;\n        }\n        return msg;\n      }\n\n      if (async) {\n        return Promise.reject(e);\n      }\n      if (callback) {\n        callback(e);\n        return;\n      }\n      throw e;\n    };\n  }\n}\n\nconst markedInstance = new Marked(defaults);\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return markedInstance.parse(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  markedInstance.setOptions(opt);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  markedInstance.use(...args);\n  marked.defaults = markedInstance.defaults;\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  return markedInstance.walkTokens(tokens, callback);\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = markedInstance.parseInline;\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Marked, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","export function mangle() {\n  return {\n    mangle: false, // remove this once mangle option is removed\n    walkTokens(token) {\n      if (token.type !== 'link') {\n        return;\n      }\n\n      if (!token.href.startsWith('mailto:')) {\n        return;\n      }\n\n      const email = token.href.substring(7);\n      const mangledEmail = mangleEmail(email);\n\n      token.href = `mailto:${mangledEmail}`;\n\n      if (token.tokens.length !== 1 || token.tokens[0].type !== 'text' || token.tokens[0].text !== email) {\n        return;\n      }\n\n      token.text = mangledEmail;\n      token.tokens[0].text = mangledEmail;\n    }\n  };\n}\n\nfunction mangleEmail(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n","import GithubSlugger from 'github-slugger';\nlet slugger;\n\nexport function gfmHeadingId({ prefix = '' } = {}) {\n  return {\n    headerIds: false, // prevent deprecation warning; remove this once headerIds option is removed\n    hooks: {\n      preprocess(src) {\n        slugger = new GithubSlugger();\n        return src;\n      }\n    },\n    renderer: {\n      heading(text, level, raw) {\n        raw = raw.toLowerCase().trim().replace(/<[!\\/a-z].*?>/ig, '');\n        return `<h${level} id=\"${prefix}${slugger.slug(raw)}\">${text}</h${level}>\\n`;\n      }\n    }\n  };\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","Prism.languages.c = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\t// https://en.cppreference.com/w/c/language/string_literal\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n\t'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'char': {\n\t\t// https://en.cppreference.com/w/c/language/character_constant\n\t\tpattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t\tpattern: /^(#\\s*include\\s*)<[^>]+>/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tPrism.languages.c['string']\n\t\t\t],\n\t\t\t'char': Prism.languages.c['char'],\n\t\t\t'comment': Prism.languages.c['comment'],\n\t\t\t'macro-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function'\n\t\t\t\t}\n\t\t\t],\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /^(#\\s*)[a-z]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'directive-hash': /^#/,\n\t\t\t'punctuation': /##|\\\\(?=[\\r\\n])/,\n\t\t\t'expression': {\n\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\tinside: Prism.languages.c\n\t\t\t}\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('c', 'function', {\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\n\ndelete Prism.languages.c['boolean'];\n","(function (Prism) {\n\n\tvar keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n\tvar modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () { return keyword.source; });\n\n\tPrism.languages.cpp = Prism.languages.extend('c', {\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source\n\t\t\t\t\t.replace(/<keyword>/g, function () { return keyword.source; })),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// This is intended to capture the class name of method implementations like:\n\t\t\t//   void foo::bar() const {}\n\t\t\t// However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n\t\t\t// it starts with an uppercase letter. This approximation should give decent results.\n\t\t\t/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n\t\t\t// This will capture the class name before destructors like:\n\t\t\t//   Foo::~Foo() {}\n\t\t\t/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n\t\t\t// This also intends to capture the class name of method implementations but here the class has template\n\t\t\t// parameters, so it can't be a namespace (until C++ adds generic namespaces).\n\t\t\t/\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n\t\t],\n\t\t'keyword': keyword,\n\t\t'number': {\n\t\t\tpattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'string', {\n\t\t'module': {\n\t\t\t// https://en.cppreference.com/w/cpp/language/modules\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:import|module)\\s+)/.source +\n\t\t\t\t'(?:' +\n\t\t\t\t// header-name\n\t\t\t\t/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n\t\t\t\t'|' +\n\t\t\t\t// module name or partition or both\n\t\t\t\t/<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () { return modName; }) +\n\t\t\t\t')'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'string': /^[<\"][\\s\\S]+/,\n\t\t\t\t'operator': /:/,\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'raw-string': {\n\t\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\t\talias: 'string',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'keyword', {\n\t\t'generic-function': {\n\t\t\tpattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n\t\t\tinside: {\n\t\t\t\t'function': /^\\w+/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/,\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: Prism.languages.cpp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'operator', {\n\t\t'double-colon': {\n\t\t\tpattern: /::/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'class-name', {\n\t\t// the base clause is an optional list of parent classes\n\t\t// https://en.cppreference.com/w/cpp/language/class\n\t\t'base-clause': {\n\t\t\tpattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: Prism.languages.extend('cpp', {})\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'double-colon', {\n\t\t// All untokenized words that are not namespaces should be class names\n\t\t'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n\t}, Prism.languages.cpp['base-clause']);\n\n}(Prism));\n","Prism.languages.lua = {\n\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n\t// \\z may be used to skip the following space\n\t'string': {\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n\t\tgreedy: true\n\t},\n\t'number': /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n\t'operator': [\n\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n\t\t{\n\t\t\t// Match \"..\" but don't break \"...\"\n\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","(function (Prism) {\n\n\t// Allow only one line break\n\tvar inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n\n\t/**\n\t * This function is intended for the creation of the bold or italic pattern.\n\t *\n\t * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n\t *\n\t * _Note:_ Keep in mind that this adds a capturing group.\n\t *\n\t * @param {string} pattern\n\t * @returns {RegExp}\n\t */\n\tfunction createInline(pattern) {\n\t\tpattern = pattern.replace(/<inner>/g, function () { return inner; });\n\t\treturn RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n\t}\n\n\n\tvar tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n\tvar tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () { return tableCell; });\n\tvar tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n\n\n\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t'front-matter-block': {\n\t\t\tpattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^---|---$/,\n\t\t\t\t'front-matter': {\n\t\t\t\t\tpattern: /\\S+(?:\\s+\\S+)*/,\n\t\t\t\t\talias: ['yaml', 'language-yaml'],\n\t\t\t\t\tinside: Prism.languages.yaml\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'blockquote': {\n\t\t\t// > ...\n\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n\t\t\tinside: {\n\t\t\t\t'table-data-rows': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-data': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-line': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\||:?-{3,}:?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-header-row': {\n\t\t\t\t\tpattern: RegExp('^' + tableRow + '$'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-header': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\talias: 'important',\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\t// Prefixed by 4 spaces or 1 tab and preceded by an empty line\n\t\t\t\tpattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ```optional language\n\t\t\t\t// code block\n\t\t\t\t// ```\n\t\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'code-block': {\n\t\t\t\t\t\tpattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'code-language': {\n\t\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /```/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'title': [\n\t\t\t{\n\t\t\t\t// title 1\n\t\t\t\t// =======\n\n\t\t\t\t// title 2\n\t\t\t\t// -------\n\t\t\t\tpattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// # title 1\n\t\t\t\t// ###### title 6\n\t\t\t\tpattern: /(^\\s*)#.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'hr': {\n\t\t\t// ***\n\t\t\t// ---\n\t\t\t// * * *\n\t\t\t// -----------\n\t\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list': {\n\t\t\t// * item\n\t\t\t// + item\n\t\t\t// - item\n\t\t\t// 1. item\n\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url-reference': {\n\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t},\n\t\t\talias: 'url'\n\t\t},\n\t\t'bold': {\n\t\t\t// **strong**\n\t\t\t// __strong__\n\n\t\t\t// allow one nested instance of italic text using the same delimiter\n\t\t\tpattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^..)[\\s\\S]+(?=..$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\*\\*|__/\n\t\t\t}\n\t\t},\n\t\t'italic': {\n\t\t\t// *em*\n\t\t\t// _em_\n\n\t\t\t// allow one nested instance of bold text using the same delimiter\n\t\t\tpattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^.)[\\s\\S]+(?=.$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /[*_]/\n\t\t\t}\n\t\t},\n\t\t'strike': {\n\t\t\t// ~~strike through~~\n\t\t\t// ~strike~\n\t\t\t// eslint-disable-next-line regexp/strict\n\t\t\tpattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /~~?/\n\t\t\t}\n\t\t},\n\t\t'code-snippet': {\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: ['code', 'keyword']\n\t\t},\n\t\t'url': {\n\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t// [example][id]\n\t\t\t// [example] [id]\n\t\t\tpattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'operator': /^!/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /(^\\]\\()[^\\s)]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n\t\t['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n\t\t\tif (token !== inside) {\n\t\t\t\tPrism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n\t\t\t}\n\t\t});\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction walkTokens(tokens) {\n\t\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (token.type !== 'code') {\n\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n\t\t\t\t * is optional. But the grammar is defined so that there is only one case we have to handle:\n\t\t\t\t *\n\t\t\t\t * token.content = [\n\t\t\t\t *     <span class=\"punctuation\">```</span>,\n\t\t\t\t *     <span class=\"code-language\">xxxx</span>,\n\t\t\t\t *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n\t\t\t\t *     <span class=\"code-block\">...</span>,\n\t\t\t\t *     '\\n', // exactly one new lines again\n\t\t\t\t *     <span class=\"punctuation\">```</span>\n\t\t\t\t * ];\n\t\t\t\t */\n\n\t\t\t\tvar codeLang = token.content[1];\n\t\t\t\tvar codeBlock = token.content[3];\n\n\t\t\t\tif (codeLang && codeBlock &&\n\t\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t\t// this might be a language that Prism does not support\n\n\t\t\t\t\t// do some replacements to support C++, C#, and F#\n\t\t\t\t\tvar lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n\t\t\t\t\t// only use the first word\n\t\t\t\t\tlang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n\t\t\t\t\tvar alias = 'language-' + lang;\n\n\t\t\t\t\t// add alias\n\t\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twalkTokens(env.tokens);\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type !== 'code-block') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar codeLang = '';\n\t\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\t\tvar cls = env.classes[i];\n\t\t\tvar match = /language-(.+)/.exec(cls);\n\t\t\tif (match) {\n\t\t\t\tcodeLang = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar grammar = Prism.languages[codeLang];\n\n\t\tif (!grammar) {\n\t\t\tif (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n\t\t\t\tvar id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n\t\t\t\tenv.attributes['id'] = id;\n\n\t\t\t\tPrism.plugins.autoloader.loadLanguages(codeLang, function () {\n\t\t\t\t\tvar ele = document.getElementById(id);\n\t\t\t\t\tif (ele) {\n\t\t\t\t\t\tele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tenv.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n\t\t}\n\t});\n\n\tvar tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n\n\t/**\n\t * A list of known entity names.\n\t *\n\t * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n\t *\n\t * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n\t */\n\tvar KNOWN_ENTITY_NAMES = {\n\t\t'amp': '&',\n\t\t'lt': '<',\n\t\t'gt': '>',\n\t\t'quot': '\"',\n\t};\n\n\t// IE 11 doesn't support `String.fromCodePoint`\n\tvar fromCodePoint = String.fromCodePoint || String.fromCharCode;\n\n\t/**\n\t * Returns the text content of a given HTML source code string.\n\t *\n\t * @param {string} html\n\t * @returns {string}\n\t */\n\tfunction textContent(html) {\n\t\t// remove all tags\n\t\tvar text = html.replace(tagPattern, '');\n\n\t\t// decode known entities\n\t\ttext = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n\t\t\tcode = code.toLowerCase();\n\n\t\t\tif (code[0] === '#') {\n\t\t\t\tvar value;\n\t\t\t\tif (code[1] === 'x') {\n\t\t\t\t\tvalue = parseInt(code.slice(2), 16);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(code.slice(1));\n\t\t\t\t}\n\n\t\t\t\treturn fromCodePoint(value);\n\t\t\t} else {\n\t\t\t\tvar known = KNOWN_ENTITY_NAMES[code];\n\t\t\t\tif (known) {\n\t\t\t\t\treturn known;\n\t\t\t\t}\n\n\t\t\t\t// unable to decode\n\t\t\t\treturn m;\n\t\t\t}\n\t\t});\n\n\t\treturn text;\n\t}\n\n\tPrism.languages.md = Prism.languages.markdown;\n\n}(Prism));\n","Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","export function deepCompareStrict(a, b) {\n    const typeofa = typeof a;\n    if (typeofa !== typeof b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        const length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!deepCompareStrict(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (typeofa === 'object') {\n        if (!a || !b) {\n            return a === b;\n        }\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        const length = aKeys.length;\n        if (length !== bKeys.length) {\n            return false;\n        }\n        for (const k of aKeys) {\n            if (!deepCompareStrict(a[k], b[k])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n}\n","export function encodePointer(p) {\n    return encodeURI(escapePointer(p));\n}\nexport function escapePointer(p) {\n    return p.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import { encodePointer } from './pointer.js';\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true\n};\nexport let initialBaseURI = typeof self !== 'undefined' && self.location\n    ?\n        new URL(self.location.origin + self.location.pathname + location.search)\n    : new URL('https://github.com/cfworker');\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = '') {\n    if (schema && typeof schema === 'object' && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = '';\n                if (basePointer === '') {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    const schemaURI = baseURI.href + (basePointer ? '#' + basePointer : '');\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, '__absolute_uri__', {\n            enumerable: false,\n            value: schemaURI\n        });\n    }\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_recursive_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$anchor) {\n        const url = new URL('#' + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n","const DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\nconst FASTDATE = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/;\nconst FASTTIME = /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst FASTDATETIME = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i;\nconst FASTURIREFERENCE = /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i;\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split('@');\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === '.' || name.endsWith('.') || name.includes('..'))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split('.')\n        .every(part => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const fullFormat = {\n    date,\n    time: time.bind(undefined, false),\n    'date-time': date_time,\n    duration: DURATION,\n    uri,\n    'uri-reference': bind(URIREF),\n    'uri-template': bind(URITEMPLATE),\n    url: bind(URL_),\n    email: EMAIL,\n    hostname: bind(HOSTNAME),\n    ipv4: bind(IPV4),\n    ipv6: bind(IPV6),\n    regex: regex,\n    uuid: bind(UUID),\n    'json-pointer': bind(JSON_POINTER),\n    'json-pointer-uri-fragment': bind(JSON_POINTER_URI_FRAGMENT),\n    'relative-json-pointer': bind(RELATIVE_JSON_POINTER)\n};\nexport const fastFormat = {\n    ...fullFormat,\n    date: bind(FASTDATE),\n    time: bind(FASTTIME),\n    'date-time': bind(FASTDATETIME),\n    'uri-reference': bind(FASTURIREFERENCE)\n};\nfunction isLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n","export function ucs2length(s) {\n    let result = 0;\n    let length = s.length;\n    let index = 0;\n    let charCode;\n    while (index < length) {\n        result++;\n        charCode = s.charCodeAt(index++);\n        if (charCode >= 0xd800 && charCode <= 0xdbff && index < length) {\n            charCode = s.charCodeAt(index);\n            if ((charCode & 0xfc00) == 0xdc00) {\n                index++;\n            }\n        }\n    }\n    return result;\n}\n","import { deepCompareStrict } from './deep-compare-strict.js';\nimport { dereference } from './dereference.js';\nimport { fastFormat } from './format.js';\nimport { encodePointer } from './pointer.js';\nimport { ucs2length } from './ucs2-length.js';\nexport function validate(instance, schema, draft = '2019-09', lookup = dereference(schema), shortCircuit = true, recursiveAnchor = null, instanceLocation = '#', schemaLocation = '#', evaluated = Object.create(null)) {\n    if (schema === true) {\n        return { valid: true, errors: [] };\n    }\n    if (schema === false) {\n        return {\n            valid: false,\n            errors: [\n                {\n                    instanceLocation,\n                    keyword: 'false',\n                    keywordLocation: instanceLocation,\n                    error: 'False boolean schema.'\n                }\n            ]\n        };\n    }\n    const rawInstanceType = typeof instance;\n    let instanceType;\n    switch (rawInstanceType) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            instanceType = rawInstanceType;\n            break;\n        case 'object':\n            if (instance === null) {\n                instanceType = 'null';\n            }\n            else if (Array.isArray(instance)) {\n                instanceType = 'array';\n            }\n            else {\n                instanceType = 'object';\n            }\n            break;\n        default:\n            throw new Error(`Instances of \"${rawInstanceType}\" type are not supported.`);\n    }\n    const { $ref, $recursiveRef, $recursiveAnchor, type: $type, const: $const, enum: $enum, required: $required, not: $not, anyOf: $anyOf, allOf: $allOf, oneOf: $oneOf, if: $if, then: $then, else: $else, format: $format, properties: $properties, patternProperties: $patternProperties, additionalProperties: $additionalProperties, unevaluatedProperties: $unevaluatedProperties, minProperties: $minProperties, maxProperties: $maxProperties, propertyNames: $propertyNames, dependentRequired: $dependentRequired, dependentSchemas: $dependentSchemas, dependencies: $dependencies, prefixItems: $prefixItems, items: $items, additionalItems: $additionalItems, unevaluatedItems: $unevaluatedItems, contains: $contains, minContains: $minContains, maxContains: $maxContains, minItems: $minItems, maxItems: $maxItems, uniqueItems: $uniqueItems, minimum: $minimum, maximum: $maximum, exclusiveMinimum: $exclusiveMinimum, exclusiveMaximum: $exclusiveMaximum, multipleOf: $multipleOf, minLength: $minLength, maxLength: $maxLength, pattern: $pattern, __absolute_ref__, __absolute_recursive_ref__ } = schema;\n    const errors = [];\n    if ($recursiveAnchor === true && recursiveAnchor === null) {\n        recursiveAnchor = schema;\n    }\n    if ($recursiveRef === '#') {\n        const refSchema = recursiveAnchor === null\n            ? lookup[__absolute_recursive_ref__]\n            : recursiveAnchor;\n        const keywordLocation = `${schemaLocation}/$recursiveRef`;\n        const result = validate(instance, recursiveAnchor === null ? schema : recursiveAnchor, draft, lookup, shortCircuit, refSchema, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$recursiveRef',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n    }\n    if ($ref !== undefined) {\n        const uri = __absolute_ref__ || $ref;\n        const refSchema = lookup[uri];\n        if (refSchema === undefined) {\n            let message = `Unresolved $ref \"${$ref}\".`;\n            if (__absolute_ref__ && __absolute_ref__ !== $ref) {\n                message += `  Absolute URI \"${__absolute_ref__}\".`;\n            }\n            message += `\\nKnown schemas:\\n- ${Object.keys(lookup).join('\\n- ')}`;\n            throw new Error(message);\n        }\n        const keywordLocation = `${schemaLocation}/$ref`;\n        const result = validate(instance, refSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$ref',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n        if (draft === '4' || draft === '7') {\n            return { valid: errors.length === 0, errors };\n        }\n    }\n    if (Array.isArray($type)) {\n        let length = $type.length;\n        let valid = false;\n        for (let i = 0; i < length; i++) {\n            if (instanceType === $type[i] ||\n                ($type[i] === 'integer' &&\n                    instanceType === 'number' &&\n                    instance % 1 === 0 &&\n                    instance === instance)) {\n                valid = true;\n                break;\n            }\n        }\n        if (!valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type.join('\", \"')}\".`\n            });\n        }\n    }\n    else if ($type === 'integer') {\n        if (instanceType !== 'number' || instance % 1 || instance !== instance) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n            });\n        }\n    }\n    else if ($type !== undefined && instanceType !== $type) {\n        errors.push({\n            instanceLocation,\n            keyword: 'type',\n            keywordLocation: `${schemaLocation}/type`,\n            error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n        });\n    }\n    if ($const !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!deepCompareStrict(instance, $const)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'const',\n                    keywordLocation: `${schemaLocation}/const`,\n                    error: `Instance does not match ${JSON.stringify($const)}.`\n                });\n            }\n        }\n        else if (instance !== $const) {\n            errors.push({\n                instanceLocation,\n                keyword: 'const',\n                keywordLocation: `${schemaLocation}/const`,\n                error: `Instance does not match ${JSON.stringify($const)}.`\n            });\n        }\n    }\n    if ($enum !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!$enum.some(value => deepCompareStrict(instance, value))) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'enum',\n                    keywordLocation: `${schemaLocation}/enum`,\n                    error: `Instance does not match any of ${JSON.stringify($enum)}.`\n                });\n            }\n        }\n        else if (!$enum.some(value => instance === value)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'enum',\n                keywordLocation: `${schemaLocation}/enum`,\n                error: `Instance does not match any of ${JSON.stringify($enum)}.`\n            });\n        }\n    }\n    if ($not !== undefined) {\n        const keywordLocation = `${schemaLocation}/not`;\n        const result = validate(instance, $not, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation);\n        if (result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'not',\n                keywordLocation,\n                error: 'Instance matched \"not\" schema.'\n            });\n        }\n    }\n    let subEvaluateds = [];\n    if ($anyOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/anyOf`;\n        const errorsLength = errors.length;\n        let anyValid = false;\n        for (let i = 0; i < $anyOf.length; i++) {\n            const subSchema = $anyOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            anyValid = anyValid || result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (anyValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'anyOf',\n                keywordLocation,\n                error: 'Instance does not match any subschemas.'\n            });\n        }\n    }\n    if ($allOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/allOf`;\n        const errorsLength = errors.length;\n        let allValid = true;\n        for (let i = 0; i < $allOf.length; i++) {\n            const subSchema = $allOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            allValid = allValid && result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (allValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'allOf',\n                keywordLocation,\n                error: `Instance does not match every subschema.`\n            });\n        }\n    }\n    if ($oneOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/oneOf`;\n        const errorsLength = errors.length;\n        const matches = $oneOf.filter((subSchema, i) => {\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n            return result.valid;\n        }).length;\n        if (matches === 1) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'oneOf',\n                keywordLocation,\n                error: `Instance does not match exactly one subschema (${matches} matches).`\n            });\n        }\n    }\n    if (instanceType === 'object' || instanceType === 'array') {\n        Object.assign(evaluated, ...subEvaluateds);\n    }\n    if ($if !== undefined) {\n        const keywordLocation = `${schemaLocation}/if`;\n        const conditionResult = validate(instance, $if, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated).valid;\n        if (conditionResult) {\n            if ($then !== undefined) {\n                const thenResult = validate(instance, $then, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/then`, evaluated);\n                if (!thenResult.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'if',\n                        keywordLocation,\n                        error: `Instance does not match \"then\" schema.`\n                    }, ...thenResult.errors);\n                }\n            }\n        }\n        else if ($else !== undefined) {\n            const elseResult = validate(instance, $else, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/else`, evaluated);\n            if (!elseResult.valid) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'if',\n                    keywordLocation,\n                    error: `Instance does not match \"else\" schema.`\n                }, ...elseResult.errors);\n            }\n        }\n    }\n    if (instanceType === 'object') {\n        if ($required !== undefined) {\n            for (const key of $required) {\n                if (!(key in instance)) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'required',\n                        keywordLocation: `${schemaLocation}/required`,\n                        error: `Instance does not have required property \"${key}\".`\n                    });\n                }\n            }\n        }\n        const keys = Object.keys(instance);\n        if ($minProperties !== undefined && keys.length < $minProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minProperties',\n                keywordLocation: `${schemaLocation}/minProperties`,\n                error: `Instance does not have at least ${$minProperties} properties.`\n            });\n        }\n        if ($maxProperties !== undefined && keys.length > $maxProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxProperties',\n                keywordLocation: `${schemaLocation}/maxProperties`,\n                error: `Instance does not have at least ${$maxProperties} properties.`\n            });\n        }\n        if ($propertyNames !== undefined) {\n            const keywordLocation = `${schemaLocation}/propertyNames`;\n            for (const key in instance) {\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(key, $propertyNames, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'propertyNames',\n                        keywordLocation,\n                        error: `Property name \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($dependentRequired !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependantRequired`;\n            for (const key in $dependentRequired) {\n                if (key in instance) {\n                    const required = $dependentRequired[key];\n                    for (const dependantKey of required) {\n                        if (!(dependantKey in instance)) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependentRequired',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if ($dependentSchemas !== undefined) {\n            for (const key in $dependentSchemas) {\n                const keywordLocation = `${schemaLocation}/dependentSchemas`;\n                if (key in instance) {\n                    const result = validate(instance, $dependentSchemas[key], draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`, evaluated);\n                    if (!result.valid) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'dependentSchemas',\n                            keywordLocation,\n                            error: `Instance has \"${key}\" but does not match dependant schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($dependencies !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependencies`;\n            for (const key in $dependencies) {\n                if (key in instance) {\n                    const propsOrSchema = $dependencies[key];\n                    if (Array.isArray(propsOrSchema)) {\n                        for (const dependantKey of propsOrSchema) {\n                            if (!(dependantKey in instance)) {\n                                errors.push({\n                                    instanceLocation,\n                                    keyword: 'dependencies',\n                                    keywordLocation,\n                                    error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        const result = validate(instance, propsOrSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`);\n                        if (!result.valid) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependencies',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not match dependant schema.`\n                            }, ...result.errors);\n                        }\n                    }\n                }\n            }\n        }\n        const thisEvaluated = Object.create(null);\n        let stop = false;\n        if ($properties !== undefined) {\n            const keywordLocation = `${schemaLocation}/properties`;\n            for (const key in $properties) {\n                if (!(key in instance)) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $properties[key], draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(key)}`);\n                if (result.valid) {\n                    evaluated[key] = thisEvaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'properties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if (!stop && $patternProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/patternProperties`;\n            for (const pattern in $patternProperties) {\n                const regex = new RegExp(pattern);\n                const subSchema = $patternProperties[pattern];\n                for (const key in instance) {\n                    if (!regex.test(key)) {\n                        continue;\n                    }\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], subSchema, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(pattern)}`);\n                    if (result.valid) {\n                        evaluated[key] = thisEvaluated[key] = true;\n                    }\n                    else {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'patternProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" matches pattern \"${pattern}\" but does not match associated schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if (!stop && $additionalProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/additionalProperties`;\n            for (const key in instance) {\n                if (thisEvaluated[key]) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $additionalProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (result.valid) {\n                    evaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'additionalProperties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match additional properties schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        else if (!stop && $unevaluatedProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedProperties`;\n            for (const key in instance) {\n                if (!evaluated[key]) {\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], $unevaluatedProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                    if (result.valid) {\n                        evaluated[key] = true;\n                    }\n                    else {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'unevaluatedProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" does not match unevaluated properties schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'array') {\n        if ($maxItems !== undefined && instance.length > $maxItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxItems',\n                keywordLocation: `${schemaLocation}/maxItems`,\n                error: `Array has too many items (${instance.length} > ${$maxItems}).`\n            });\n        }\n        if ($minItems !== undefined && instance.length < $minItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minItems',\n                keywordLocation: `${schemaLocation}/minItems`,\n                error: `Array has too few items (${instance.length} < ${$minItems}).`\n            });\n        }\n        const length = instance.length;\n        let i = 0;\n        let stop = false;\n        if ($prefixItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/prefixItems`;\n            const length2 = Math.min($prefixItems.length, length);\n            for (; i < length2; i++) {\n                const result = validate(instance[i], $prefixItems[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'prefixItems',\n                        keywordLocation,\n                        error: `Items did not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if ($items !== undefined) {\n            const keywordLocation = `${schemaLocation}/items`;\n            if (Array.isArray($items)) {\n                const length2 = Math.min($items.length, length);\n                for (; i < length2; i++) {\n                    const result = validate(instance[i], $items[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            else {\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $items, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            if (!stop && $additionalItems !== undefined) {\n                const keywordLocation = `${schemaLocation}/additionalItems`;\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $additionalItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'additionalItems',\n                            keywordLocation,\n                            error: `Items did not match additional items schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($contains !== undefined) {\n            if (length === 0 && $minContains === undefined) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'contains',\n                    keywordLocation: `${schemaLocation}/contains`,\n                    error: `Array is empty. It must contain at least one item matching the schema.`\n                });\n            }\n            else if ($minContains !== undefined && length < $minContains) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minContains',\n                    keywordLocation: `${schemaLocation}/minContains`,\n                    error: `Array has less items (${length}) than minContains (${$minContains}).`\n                });\n            }\n            else {\n                const keywordLocation = `${schemaLocation}/contains`;\n                const errorsLength = errors.length;\n                let contained = 0;\n                for (let j = 0; j < length; j++) {\n                    const result = validate(instance[j], $contains, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${j}`, keywordLocation);\n                    if (result.valid) {\n                        evaluated[j] = true;\n                        contained++;\n                    }\n                    else {\n                        errors.push(...result.errors);\n                    }\n                }\n                if (contained >= ($minContains || 0)) {\n                    errors.length = errorsLength;\n                }\n                if ($minContains === undefined &&\n                    $maxContains === undefined &&\n                    contained === 0) {\n                    errors.splice(errorsLength, 0, {\n                        instanceLocation,\n                        keyword: 'contains',\n                        keywordLocation,\n                        error: `Array does not contain item matching schema.`\n                    });\n                }\n                else if ($minContains !== undefined && contained < $minContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'minContains',\n                        keywordLocation: `${schemaLocation}/minContains`,\n                        error: `Array must contain at least ${$minContains} items matching schema. Only ${contained} items were found.`\n                    });\n                }\n                else if ($maxContains !== undefined && contained > $maxContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'maxContains',\n                        keywordLocation: `${schemaLocation}/maxContains`,\n                        error: `Array may contain at most ${$maxContains} items matching schema. ${contained} items were found.`\n                    });\n                }\n            }\n        }\n        if (!stop && $unevaluatedItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedItems`;\n            for (i; i < length; i++) {\n                if (evaluated[i]) {\n                    continue;\n                }\n                const result = validate(instance[i], $unevaluatedItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'unevaluatedItems',\n                        keywordLocation,\n                        error: `Items did not match unevaluated items schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($uniqueItems) {\n            for (let j = 0; j < length; j++) {\n                const a = instance[j];\n                const ao = typeof a === 'object' && a !== null;\n                for (let k = 0; k < length; k++) {\n                    if (j === k) {\n                        continue;\n                    }\n                    const b = instance[k];\n                    const bo = typeof b === 'object' && b !== null;\n                    if (a === b || (ao && bo && deepCompareStrict(a, b))) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'uniqueItems',\n                            keywordLocation: `${schemaLocation}/uniqueItems`,\n                            error: `Duplicate items at indexes ${j} and ${k}.`\n                        });\n                        j = Number.MAX_SAFE_INTEGER;\n                        k = Number.MAX_SAFE_INTEGER;\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'number') {\n        if (draft === '4') {\n            if ($minimum !== undefined &&\n                (($exclusiveMinimum === true && instance <= $minimum) ||\n                    instance < $minimum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum ? 'or equal to ' : ''} ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined &&\n                (($exclusiveMaximum === true && instance >= $maximum) ||\n                    instance > $maximum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$exclusiveMaximum ? 'or equal to ' : ''} ${$maximum}.`\n                });\n            }\n        }\n        else {\n            if ($minimum !== undefined && instance < $minimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined && instance > $maximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$maximum}.`\n                });\n            }\n            if ($exclusiveMinimum !== undefined && instance <= $exclusiveMinimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMinimum',\n                    keywordLocation: `${schemaLocation}/exclusiveMinimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum}.`\n                });\n            }\n            if ($exclusiveMaximum !== undefined && instance >= $exclusiveMaximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMaximum',\n                    keywordLocation: `${schemaLocation}/exclusiveMaximum`,\n                    error: `${instance} is greater than or equal to ${$exclusiveMaximum}.`\n                });\n            }\n        }\n        if ($multipleOf !== undefined) {\n            const remainder = instance % $multipleOf;\n            if (Math.abs(0 - remainder) >= 1.1920929e-7 &&\n                Math.abs($multipleOf - remainder) >= 1.1920929e-7) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'multipleOf',\n                    keywordLocation: `${schemaLocation}/multipleOf`,\n                    error: `${instance} is not a multiple of ${$multipleOf}.`\n                });\n            }\n        }\n    }\n    else if (instanceType === 'string') {\n        const length = $minLength === undefined && $maxLength === undefined\n            ? 0\n            : ucs2length(instance);\n        if ($minLength !== undefined && length < $minLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minLength',\n                keywordLocation: `${schemaLocation}/minLength`,\n                error: `String is too short (${length} < ${$minLength}).`\n            });\n        }\n        if ($maxLength !== undefined && length > $maxLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxLength',\n                keywordLocation: `${schemaLocation}/maxLength`,\n                error: `String is too long (${length} > ${$maxLength}).`\n            });\n        }\n        if ($pattern !== undefined && !new RegExp($pattern).test(instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'pattern',\n                keywordLocation: `${schemaLocation}/pattern`,\n                error: `String does not match pattern.`\n            });\n        }\n        if ($format !== undefined &&\n            fastFormat[$format] &&\n            !fastFormat[$format](instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'format',\n                keywordLocation: `${schemaLocation}/format`,\n                error: `String does not match format \"${$format}\".`\n            });\n        }\n    }\n    return { valid: errors.length === 0, errors };\n}\n","import { dereference } from './dereference.js';\nimport { validate } from './validate.js';\nexport class Validator {\n    constructor(schema, draft = '2019-09', shortCircuit = true) {\n        this.schema = schema;\n        this.draft = draft;\n        this.shortCircuit = shortCircuit;\n        this.lookup = dereference(schema);\n    }\n    validate(instance) {\n        return validate(instance, this.schema, this.draft, this.lookup, this.shortCircuit);\n    }\n    addSchema(schema, id) {\n        if (id) {\n            schema = { ...schema, $id: id };\n        }\n        dereference(schema, this.lookup);\n    }\n}\n"],"names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","_transformCaseFunc","l","element","lcElement","clone","object","newObject","property","value","lookupGetter","prop","desc","get","fallbackValue","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","createDOMPurify","undefined","DOMPurify","root","version","removed","document","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","childCount","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmod","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","unescapeTest","unescape","_","n","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","splitCells","tableRow","count","row","offset","str","escaped","curr","cells","split","shift","splice","c","invert","suffLen","currChar","slice","findClosingBracket","b","level","checkDeprecations","callback","outputLink","cap","link","raw","lexer","title","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","join","Tokenizer","constructor","options","this","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","e","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","anyPunctuation","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","out","charCodeAt","random","Lexer","inlineQueue","static","lex","next","leading","tabs","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","id","slug","startatt","listitem","checkbox","tablerow","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","Hooks","preprocess","markdown","postprocess","Set","Marked","parseMarkdown","onError","setOptions","lexInline","use","values","concat","childTokens","pack","opts","ext","prevRenderer","prevTokenizer","prevHook","passThroughHooks","has","arg","Promise","resolve","then","origOpt","throwError","done","err","pending","setTimeout","all","catch","message","msg","reject","markedInstance","marked","startsWith","email","mangledEmail","mangleEmail","gfmHeadingId","prefix","GithubSlugger","_self","WorkerGlobalScope","self","Prism","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","Token","alias","isArray","o","objId","defineProperty","deepClone","visited","key","r","v","getLanguage","m","className","parentElement","setLanguage","language","classList","add","stack","scripts","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","inside","before","insert","grammar","newToken","old","DFS","propertyType","plugins","highlightAll","highlightAllUnder","container","env","selector","run","elements","querySelectorAll","highlightElement","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","callbacks","matchedStr","s","classes","aliases","matchPattern","pattern","pos","lookbehind","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","greedy","global","tail","reach","removeCount","to","p","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","newNode","addEventListener","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","module","exports","markup","comment","prolog","string","cdata","namespace","entity","includedCdataInside","mathml","ssml","atom","rss","css","atrule","rule","keyword","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","parameter","constant","hashbang","interpolation","js","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","loadFile","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","parseRange","range","Number","comma","end","extension","autoloader","loadLanguages","lines","max","fileHighlight","logged","char","macro","directive","expression","modName","cpp","generic","lua","json","null","webmanifest","python","decorator","builtin","inner","createInline","tableCell","tableLine","yaml","variable","bold","italic","strike","codeLang","codeBlock","cls","Date","valueOf","floor","ele","getElementById","tagPattern","KNOWN_ENTITY_NAMES","amp","lt","gt","quot","fromCodePoint","known","md","deepCompareStrict","a","typeofa","aKeys","bKeys","encodePointer","escapePointer","schemaArrayKeyword","prefixItems","allOf","anyOf","oneOf","schemaMapKeyword","$defs","definitions","properties","patternProperties","dependentSchemas","ignoredKeyword","$id","$ref","$schema","$anchor","$vocabulary","$comment","default","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","initialBaseURI","location","URL","origin","pathname","dereference","schema","lookup","baseURI","basePointer","hash","schemaURI","__absolute_uri__","__absolute_ref__","$recursiveRef","__absolute_recursive_ref__","keyBase","subSchema","subKey","DATE","DAYS","TIME","HOSTNAME","URIREF","URITEMPLATE","URL_","UUID","JSON_POINTER","JSON_POINTER_URI_FRAGMENT","RELATIVE_JSON_POINTER","FASTDATE","FASTTIME","FASTDATETIME","FASTURIREFERENCE","EMAIL","input","host","endsWith","every","part","IPV4","IPV6","DURATION","bind","fullFormat","date","time","date_time","duration","uri","It","hostname","ipv4","ipv6","uuid","fastFormat","isLeapYear","year","month","day","full","hour","minute","second","timeZone","DATE_TIME_SEPARATOR","dateTime","NOT_URI_FRAGMENT","URI_PATTERN","Z_ANCHOR","ucs2length","result","charCode","validate","instance","draft","shortCircuit","recursiveAnchor","instanceLocation","schemaLocation","evaluated","valid","errors","keywordLocation","rawInstanceType","instanceType","$recursiveAnchor","$type","$const","$enum","$required","not","$not","$anyOf","$allOf","$oneOf","if","$if","$then","else","$else","$format","$properties","$patternProperties","additionalProperties","$additionalProperties","unevaluatedProperties","$unevaluatedProperties","$minProperties","$maxProperties","propertyNames","$propertyNames","dependentRequired","$dependentRequired","$dependentSchemas","dependencies","$dependencies","$prefixItems","$items","additionalItems","$additionalItems","unevaluatedItems","$unevaluatedItems","$contains","minContains","$minContains","maxContains","$maxContains","$minItems","$maxItems","$uniqueItems","$minimum","$maximum","$exclusiveMinimum","$exclusiveMaximum","$multipleOf","$minLength","$maxLength","$pattern","refSchema","subEvaluateds","errorsLength","anyValid","subEvaluated","allValid","assign","thenResult","elseResult","subInstancePointer","dependantKey","propsOrSchema","thisEvaluated","stop","length2","contained","ao","bo","MAX_SAFE_INTEGER","remainder","abs","Validator","addSchema"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}