{"version":3,"file":"ModForm-9a1cf70e.js","sources":["../../../../../../src/lib/models/mods.ts","../../../../../../src/lib/components/mods/ModAuthor.svelte","../../../../../../src/lib/components/mods/ModForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type ModData = {\n  name: string;\n  mod_reference: string;\n  short_description: string;\n  full_description?: string;\n  logo?: string;\n  source_url?: string;\n  authors?: {\n    role: string;\n    user_id: string;\n  }[];\n  hidden: boolean;\n};\n\nexport const modSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  mod_reference: zod\n    .string()\n    .min(3)\n    .max(32)\n    .regex(/^([a-zA-Z][a-zA-Z0-9_]*)$/)\n    .refine(async () => {\n      // TODO Check if mod reference exists\n      return true;\n    }),\n  short_description: zod.string().min(16).max(128),\n  full_description: zod.optional(zod.string()),\n  logo: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n  source_url: zod.string().url().optional().or(zod.literal('')),\n  authors: zod.optional(\n    zod\n      .object({\n        role: zod.string(),\n        user_id: zod.string()\n      })\n      .array()\n  ),\n  hidden: zod.boolean()\n});\n","<script lang=\"ts\">\n  import { operationStore, query } from '@urql/svelte';\n  import { GetUserDocument } from '$lib/generated';\n  import { assets } from '$app/paths';\n\n  export let id: string;\n\n  const user = operationStore(GetUserDocument, { user: id });\n\n  $: {\n    $user.variables.user = id;\n    $user.reexecute();\n  }\n\n  query(user);\n</script>\n\n{#if $user.fetching}\n  <p class=\"mr-2\">Loading...</p>\n{:else if $user.error}\n  <p class=\"mr-2\">Oh no... {$user.error.message}</p>\n{:else if $user.data.getUser}\n  <div class=\"grid grid-flow-col auto-cols-max gap-x-2 mr-2\">\n    <div\n      class=\"rounded-full bg-cover w-7 h-7\"\n      style={`background-image: url(\"${$user.data.getUser.avatar || assets + '/images/no_image.webp'}\")`}\n    />\n    <div class=\"grid grid-flow-row\">\n      <span class=\"text-yellow-500\">{$user.data.getUser.username}</span>\n    </div>\n  </div>\n{:else}\n  <p class=\"mr-2 whitespace-nowrap\">Unknown User ID</p>\n{/if}\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { ModData } from '$lib/models/mods';\n  import { modSchema } from '$lib/models/mods';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import HelperText from '@smui/textfield/helper-text';\n  import Button, { Label } from '@smui/button';\n  import ModAuthor from '$lib/components/mods/ModAuthor.svelte';\n  import FormField from '@smui/form-field';\n  import Switch from '@smui/switch';\n\n  export let onSubmit: (data: ModData) => void;\n  export let initialValues: ModData = {\n    full_description: '',\n    mod_reference: '',\n    name: '',\n    short_description: '',\n    source_url: '',\n    hidden: false\n  };\n  export let submitText = 'Create';\n\n  export let editing = false;\n\n  const { form, data } = createForm<ModData>({\n    initialValues: initialValues,\n    extend: [validator, svelteReporter],\n    validateSchema: modSchema,\n    onSubmit: (data: ModData) => onSubmit(trimNonSchema(data, modSchema))\n  });\n\n  $: preview = ($data.full_description as string) || '';\n\n  const addAuthor = () => {\n    $data.authors.push({ role: 'editor', user_id: '' });\n    $data.authors = $data.authors;\n  };\n\n  const removeAuthor = (i: number) => {\n    $data.authors.splice(i, 1);\n    $data.authors = $data.authors;\n  };\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.mod_reference} label=\"Mod Reference\" required disabled={editing}>\n        <HelperText persistent={!editing} slot=\"helper\">\n          {#if !editing}\n            Warning! You will not be able to change this after creating the mod! Please ensure this is a unique modifier\n            that closely matches the name of your mod!\n          {/if}\n        </HelperText>\n      </Textfield>\n      <ValidationMessage for=\"mod_reference\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.full_description}\n          label=\"Full Description\"\n          required\n          input$rows={10}\n        />\n        <ValidationMessage for=\"full_description\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"logo\">Logo:</label>\n      <input\n        id=\"logo\"\n        class=\"base-input\"\n        name=\"logo\"\n        type=\"file\"\n        accept=\"image/png,image/jpeg,image/gif\"\n        placeholder=\"Logo\"\n      />\n      <ValidationMessage for=\"logo\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.source_url} label=\"Source URL\" />\n      <ValidationMessage for=\"source_url\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <FormField>\n        <Switch bind:checked={$data.hidden} />\n        <span slot=\"label\">Hidden</span>\n      </FormField>\n      <ValidationMessage for=\"hidden\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    {#if editing}\n      <div class=\"grid grid-flow-row gap-2\">\n        <div class=\"flex items-baseline\">\n          <h4 class=\"mr-4\">Authors</h4>\n          <Button type=\"button\" on:click={addAuthor}>\n            <Label>Add</Label>\n          </Button>\n        </div>\n        {#each $data.authors as author, i}\n          <div class=\"flex items-baseline\">\n            {#if $data.authors[i].user_id}\n              <ModAuthor id={$data.authors[i].user_id} />\n            {/if}\n            <Textfield\n              bind:value={$data.authors[i].user_id}\n              label=\"User ID\"\n              class=\"mr-4 w-full\"\n              disabled={author.role === 'creator'}\n            />\n            {#if author.role !== 'creator'}\n              <Button type=\"button\" on:click={() => removeAuthor(i)} variant=\"raised\">\n                <Label>Remove</Label>\n              </Button>\n            {/if}\n          </div>\n        {/each}\n      </div>\n    {/if}\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["modSchema","zod.object","name","zod.string","min","max","mod_reference","regex","refine","async","short_description","full_description","zod.optional","logo","zod.any","source_url","url","optional","or","zod.literal","authors","role","user_id","array","hidden","zod.boolean","insert_hydration_dev","target","p","anchor","t1_value","ctx","data","getUser","username","avatar","assets","div2","append_hydration_dev","div0","div1","span","dirty","set_data_dev","t1","error","message","fetching","create_if_block","create_if_block_1","create_if_block_2","id","$$props","user","operationStore","GetUserDocument","query","set_store_value","$user","variables","reexecute","t_value","t","create_if_block_3","div","innerHTML","raw_value","switch_1_props","checked","switch_1_changes","each_value","length","i","h4","each_blocks","modauthor_changes","if_block0","textfield_props","value","textfield_changes","textfield0_props","textfield1_props","textfield2_props","textfield3_props","handle_promise","promise","markdown","info","textfield4_props","form_1","div10","div5","div3","div4","div6","label","input","div7","div8","div9","textfield0_changes","textfield1_changes","textfield2_changes","textfield3_changes","textfield4_changes","onSubmit","initialValues","submitText","editing","form","createForm","extend","validator","svelteReporter","validateSchema","trimNonSchema","addAuthor","$data","push","removeAuthor","splice","$$self","$$","not_equal","click_handler","preview"],"mappings":"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"}