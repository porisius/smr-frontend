{"version":3,"file":"SMLVersionForm-098caca9.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { VersionStabilities } from '$lib/generated';\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  changelog: string;\n  date: string;\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n\n  export let onSubmit: (data: SMLVersionData) => void;\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    version: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator, svelteReporter],\n    validateSchema: smlVersionSchema,\n    onSubmit: (data: SMLVersionData) => onSubmit(trimNonSchema(data, smlVersionSchema))\n  });\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label=\"Version\" required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory Version\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap Version\" required />\n      <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label=\"Stability\">\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label=\"Changelog\"\n          required\n          input$rows={10}\n        />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label=\"Date and Time\" required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.link} label=\"Link\" required />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlVersionSchema","zod.object","version","zod.string","regex","satisfactory_version","zod.number","bootstrap_version","stability","link","url","changelog","date","t_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t","div","innerHTML","raw_value","textfield0_props","value","message","textfield1_props","textfield2_props","select_props","textfield3_props","handle_promise","promise","markdown","info","textfield4_props","textfield5_props","form_1","append_hydration_dev","div10","div0","div1","div2","div3","div6","div4","div5","div7","div8","div9","textfield0_changes","textfield1_changes","textfield2_changes","select_changes","textfield3_changes","textfield4_changes","textfield5_changes","onSubmit","$$props","initialValues","VersionStabilities","Alpha","submitText","form","data","createForm","extend","validator","svelteReporter","validateSchema","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"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"}