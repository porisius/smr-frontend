{"version":3,"file":"GuideForm.430332f3.js","sources":["../../../../../../src/lib/models/guides.ts","../../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export const { t } = getTranslate();\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = $t('entry.create');\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: guideSchema }), reporter],\n    onSubmit: (submitted: GuideData) => onSubmit(trimNonSchema(submitted, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.name')} *</span>\n        <input type=\"text\" bind:value={$data.name} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.short-description')} *</span>\n        <input type=\"text\" bind:value={$data.short_description} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <label class=\"label\">\n          <span>{$t('guide')} *</span>\n          <textarea class=\"vertical-textarea textarea p-2\" bind:value={$data.guide} required rows={10} />\n        </label>\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>{$t('preview')}:</span>\n        {#await markdown(preview) then previewRendered}\n          <!-- eslint-disable -->\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <button class=\"btn variant-ghost-primary\" type=\"submit\">{submitText}</button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["guideSchema","zod.object","name","zod.string","min","max","short_description","guide","t_1_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t_1","div","html_tag","p","raw_value","t0_value","t5_value","t10_value","t15_value","message","handle_promise","promise","markdown","info","form_1","append_hydration_dev","div6","div0","label0","span0","input0","set_input_value","div1","label1","span1","input1","div4","div2","label2","span2","textarea","div3","span3","div5","button","current","t0","value","t5","t10","t15","t","getTranslate","onSubmit","$$props","initialValues","submitText","$t","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$data","this","preview"],"mappings":"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"}