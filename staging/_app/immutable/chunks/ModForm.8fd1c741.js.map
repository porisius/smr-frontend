{"version":3,"file":"ModForm.8fd1c741.js","sources":["../../../../../../src/lib/models/mods.ts","../../../../../../src/lib/components/mods/ModAuthor.svelte","../../../../../../src/lib/components/mods/ModForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { CompatibilityState, Tag } from '$lib/generated';\n\nexport type ModData = {\n  name: string;\n  mod_reference: string;\n  short_description: string;\n  full_description?: string;\n  logo?: string;\n  source_url?: string;\n  authors?: {\n    role: string;\n    user_id: string;\n  }[];\n  compatibility?: {\n    EA: {\n      state: CompatibilityState;\n      note?: string;\n    };\n    EXP: {\n      state: CompatibilityState;\n      note?: string;\n    };\n  };\n  hidden: boolean;\n  tagIDs?: string[];\n  tags?: Tag[];\n};\n\nexport const modSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  mod_reference: zod\n    .string()\n    .min(3)\n    .max(32)\n    .regex(/^([a-zA-Z][a-zA-Z0-9_]*)$/)\n    .refine(\n      async () =>\n        // TODO Check if mod reference exists\n        true\n    ),\n  short_description: zod.string().min(16).max(128),\n  full_description: zod.optional(zod.string()),\n  logo: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n  source_url: zod.string().url().optional().or(zod.literal('')),\n  authors: zod.optional(\n    zod\n      .object({\n        role: zod.string(),\n        user_id: zod.string()\n      })\n      .array()\n  ),\n  compatibility: zod.optional(\n    zod.object({\n      EA: zod.object({\n        state: zod.string(),\n        note: zod.ostring()\n      }),\n      EXP: zod.object({\n        state: zod.string(),\n        note: zod.ostring()\n      })\n    })\n  ),\n  hidden: zod.boolean(),\n  tagIDs: zod.optional(zod.string().array())\n});\n","<script lang=\"ts\">\n  import { queryStore, getContextClient } from '@urql/svelte';\n  import { GetUserDocument } from '$lib/generated';\n  import { assets } from '$app/paths';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let id: string;\n\n  export const { t } = getTranslate();\n\n  const client = getContextClient();\n\n  $: user = queryStore({\n    query: GetUserDocument,\n    client,\n    variables: { user: id }\n  });\n</script>\n\n{#if $user.fetching}\n  <p class=\"mr-2\">{$t('loading')}...</p>\n{:else if $user.error}\n  <p class=\"mr-2\">{$t('error.oh-no')}... {$user.error.message}</p>\n{:else if $user.data.getUser}\n  <div class=\"grid grid-flow-col auto-cols-max gap-x-2 mr-2\">\n    <div\n      class=\"rounded-full bg-cover w-7 h-7\"\n      style={`background-image: url(\"${$user.data.getUser.avatar || assets + '/images/no_image.webp'}\")`} />\n    <div class=\"grid grid-flow-row\">\n      <span class=\"text-yellow-500\">{$user.data.getUser.username}</span>\n    </div>\n  </div>\n{:else}\n  <p class=\"mr-2 whitespace-nowrap\">Unknown User ID</p>\n{/if}\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { ModData } from '$lib/models/mods';\n  import { modSchema } from '$lib/models/mods';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import ModAuthor from '$lib/components/mods/ModAuthor.svelte';\n  import TagList from '$lib/components/utils/TagList.svelte';\n  import { CompatibilityState } from '$lib/generated';\n  import ModCompatibility from '$lib/components/mods/compatibility/ModCompatibilityEdit.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { SlideToggle } from '@skeletonlabs/skeleton';\n\n  export const { t } = getTranslate();\n\n  export let onSubmit: (data: ModData) => void;\n  export let initialValues: ModData = {\n    full_description: '',\n    mod_reference: '',\n    name: '',\n    short_description: '',\n    source_url: '',\n    hidden: false,\n    tagIDs: [],\n    compatibility: {\n      EA: {\n        state: CompatibilityState.Works,\n        note: ''\n      },\n      EXP: {\n        state: CompatibilityState.Works,\n        note: ''\n      }\n    }\n  };\n  export let submitText = $t('entry.create');\n\n  export let editing = false;\n\n  const { form, data } = createForm<ModData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: modSchema }), reporter],\n    onSubmit: (submitted: ModData) => onSubmit(trimNonSchema(submitted, modSchema))\n  });\n\n  let tags = [];\n  $: {\n    const anyData = $data;\n    if (anyData.tags) {\n      tags = anyData.tags;\n      delete anyData.tags;\n    }\n    $data.tagIDs = tags.map((tag) => tag.id);\n  }\n\n  // The GQL type NewMod does not have a compatibility field.\n  // We remove the field from the data so that the GQL request is valid\n  $: {\n    if (!editing) {\n      delete $data.compatibility;\n    }\n  }\n\n  $: preview = ($data.full_description as string) || '';\n\n  const addAuthor = () => {\n    $data.authors.push({ role: 'editor', user_id: '', key: '' });\n    $data.authors = $data.authors;\n  };\n\n  const removeAuthor = (i: number) => {\n    $data.authors.splice(i, 1);\n    $data.authors = $data.authors;\n  };\n\n  let editCompatibility = false;\n  $: $data.compatibility = $data.compatibility ? $data.compatibility : undefined;\n  const originalCompatibility = $data.compatibility;\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.name')} *</span>\n        <input type=\"text\" bind:value={$data.name} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('mod.reference')} *</span>\n        <input type=\"text\" bind:value={$data.mod_reference} required class=\"input p-2\" disabled={editing} />\n        {#if !editing}\n          <span>{$t('mod.reference-warning')}</span>\n        {/if}\n      </label>\n      <ValidationMessage for=\"mod_reference\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.short-description')} *</span>\n        <input type=\"text\" bind:value={$data.short_description} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <label class=\"label\">\n          <span>{$t('entry.full-description')} *</span>\n          <textarea class=\"vertical-textarea textarea p-2\" bind:value={$data.full_description} required rows={10} />\n        </label>\n        <ValidationMessage for=\"full_description\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>{$t('preview')}:</span>\n        {#await markdown(preview) then previewRendered}\n          <!-- eslint-disable -->\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <TagList editable={true} bind:tags />\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label for=\"logo\">{$t('logo')}:</label>\n      <input\n        id=\"logo\"\n        class=\"base-input\"\n        name=\"logo\"\n        type=\"file\"\n        accept=\"image/png,image/jpeg,image/gif\"\n        placeholder=\"Logo\" />\n      <ValidationMessage for=\"logo\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <label class=\"label\">\n        <span>{$t('entry.source-url')}</span>\n        <input type=\"text\" bind:value={$data.source_url} required class=\"input p-2\" />\n      </label>\n      <ValidationMessage for=\"source_url\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <SlideToggle name=\"slider-label\" bind:checked={$data.hidden}>\n        {$t('entry.hidden')}\n      </SlideToggle>\n      <ValidationMessage for=\"hidden\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n    {#if editing}\n      <div>\n        <SlideToggle\n          name=\"slider-label\"\n          bind:checked={editCompatibility}\n          on:change={() => {\n            $data.compatibility = editCompatibility ? originalCompatibility : undefined;\n          }}>\n          {$t('compatibility-info.edit')}\n        </SlideToggle>\n      </div>\n\n      {#if editCompatibility}\n        <ModCompatibility bind:compatibilityInfo={$data.compatibility} />\n      {/if}\n\n      <div class=\"grid grid-flow-row gap-2\">\n        <div class=\"flex items-center\">\n          <h4 class=\"mr-4\">{$t('authors')}</h4>\n          <button class=\"btn variant-ghost-primary\" type=\"button\" on:click={addAuthor}>\n            <span>{$t('add')}</span>\n          </button>\n        </div>\n        {#each $data.authors as author, i}\n          <div class=\"flex items-end\">\n            {#if $data.authors[i].user_id}\n              <div class=\"p-2\">\n                <ModAuthor id={$data.authors[i].user_id} />\n              </div>\n            {/if}\n            <label class=\"label\">\n              <span>User ID</span>\n              <input\n                type=\"text\"\n                bind:value={$data.authors[i].user_id}\n                required\n                class=\"input p-2\"\n                disabled={author.role === 'creator'} />\n            </label>\n            {#if author.role !== 'creator'}\n              <button class=\"btn variant-ghost-primary\" type=\"button\" on:click={() => removeAuthor(i)}>\n                <span>{$t('remove')}</span>\n              </button>\n            {/if}\n          </div>\n        {/each}\n      </div>\n    {/if}\n\n    <div>\n      <button class=\"btn variant-ghost-primary\" type=\"submit\">{submitText}</button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["modSchema","zod.object","name","zod.string","min","max","mod_reference","regex","refine","async","short_description","full_description","zod.optional","logo","zod.any","source_url","url","optional","or","zod.literal","authors","role","user_id","array","compatibility","EA","state","note","zod.ostring","EXP","hidden","zod.boolean","tagIDs","insert_hydration_dev","target","p","anchor","t1_value","ctx","data","getUser","username","avatar","assets","div2","append_hydration_dev","div0","div1","span","dirty","set_data_dev","t1","t0_value","error","message","t0","t2","t2_value","fetching","create_if_block","create_if_block_1","create_if_block_2","id","$$props","t","getTranslate","client","getContextClient","$$subscribe_user","$$invalidate","user","queryStore","query","GetUserDocument","variables","t_1_value","t_1","div","html_tag","raw_value","t4_value","create_if_block_3","each_value","ensure_array_like_dev","length","i","h4","button","current","t4","each_blocks","modcompatibility_props","compatibilityInfo","modcompatibility_changes","modauthor_changes","if_block0","label","input","set_input_value","value","t5_value","t11_value","t16_value","t21_value","t26_value","t31_value","create_if_block_4","handle_promise","promise","markdown","info","slidetoggle_props","checked","form_1","div11","label0","span0","input0","label1","span1","input1","label2","span2","input2","div5","div3","label3","span3","textarea","div4","span4","div6","div7","label4","input3","div8","label5","span5","input4","div9","div10","t5","t11","t16","t21","t26","t31","slidetoggle_changes","onSubmit","initialValues","CompatibilityState","Works","submitText","$t","editing","form","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","tags","addAuthor","$data","push","key","removeAuthor","splice","editCompatibility","originalCompatibility","this","$$self","$$","not_equal","set_store_value","undefined","click_handler","anyData","map","tag","preview"],"mappings":"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"}