{"version":3,"file":"ModCard.H1hn8Bst.js","sources":["../../../../../../src/lib/components/mods/compatibility/CompatibilityButton.svelte","../../../../../../src/lib/components/mods/ModCard.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityIcon from './CompatibilityIcon.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  import { getModalStore } from '@skeletonlabs/skeleton';\n  import CompatibilityModal from '$lib/modals/CompatibilityModal.svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n\n  const modalStore = getModalStore();\n  const openCompatibility = () => {\n    modalStore.trigger({\n      type: 'component',\n      component: {\n        ref: CompatibilityModal,\n        props: {\n          compatibility\n        }\n      }\n    });\n  };\n</script>\n\n<button\n  class=\"variant-soft-surface btn m-0 min-w-0 px-1 py-0 text-xs\"\n  title={$t('compatibility-info.button')}\n  on:click={openCompatibility}>\n  <CompatibilityIcon compatibility={compatibility?.EA} />\n  <CompatibilityIcon compatibility={compatibility?.EXP} EXP={true} />\n</button>\n","<script lang=\"ts\">\n  import type { Mod, Maybe, Version } from '$lib/generated';\n  import { base } from '$app/paths';\n  import FicsitCard from '$lib/components/general/FicsitCard.svelte';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyNumber } from '$lib/utils/formatting';\n  import OutdatedBanner from '$lib/components/mods/compatibility/OutdatedBanner.svelte';\n  import CompatibilityButton from '$lib/components/mods/compatibility/CompatibilityButton.svelte';\n  import TagList from '$lib/components/utils/TagList.svelte';\n\n  export let mod: Pick<\n    Mod,\n    'id' | 'mod_reference' | 'name' | 'logo' | 'views' | 'downloads' | 'short_description' | 'compatibility' | 'tags'\n  > & {\n    latestVersions: {\n      alpha?: Maybe<Pick<Version, 'id' | 'sml_version'>>;\n      beta?: Maybe<Pick<Version, 'id' | 'sml_version'>>;\n      release?: Maybe<Pick<Version, 'id' | 'sml_version'>>;\n    };\n  };\n\n  $: installable =\n    'latestVersions' in mod ? mod.latestVersions.alpha || mod.latestVersions.beta || mod.latestVersions.release : false;\n</script>\n\n<FicsitCard\n  name={mod.name}\n  link={base + '/mod/' + mod.mod_reference}\n  logo={mod.logo}\n  description={mod.short_description}>\n  <div slot=\"stats\" class=\"flex flex-row items-center gap-2\">\n    <span><span class=\"material-icons mr-1 align-middle text-sm\">visibility</span>{prettyNumber(mod.views)}</span>\n    <span><span class=\"material-icons mr-1 align-middle text-sm\">download</span>{prettyNumber(mod.downloads)}</span>\n    <CompatibilityButton compatibility={mod.compatibility} />\n  </div>\n  <div slot=\"tags\">\n    <TagList tags={mod.tags} />\n  </div>\n  <svelte:fragment slot=\"actions\">\n    {#if installable}\n      <button class=\"variant-soft-surface btn btn-sm\" title=\"Install\" on:click={() => installMod(mod.mod_reference)}>\n        <span class=\"material-icons\">download</span>\n      </button>\n    {/if}\n  </svelte:fragment>\n  <div slot=\"outer\">\n    <OutdatedBanner compatibility={mod.compatibility} />\n  </div>\n</FicsitCard>\n"],"names":["compatibility","ctx","EA","EXP","attr_dev","button","button_title_value","insert_hydration_dev","target","anchor","dirty","compatibilityicon0_changes","compatibilityicon1_changes","current","$$props","t","getTranslate","modalStore","getModalStore","openCompatibility","trigger","type","component","ref","CompatibilityModal","props","prettyNumber","views","downloads","div","append_hydration_dev","span1","span0","span3","span2","set_data_dev","t1","t1_value","t4","t4_value","compatibilitybutton_changes","tags","taglist_changes","span","create_if_block","outdatedbanner_changes","name","link","base","mod_reference","logo","description","short_description","ficsitcard_changes","mod","installMod","$$invalidate","installable","latestVersions","alpha","beta","release"],"mappings":"moBA6BoCA,cAAAC,GAAeC,GAAAA,EAAAA,gCACfF,cAAAC,GAAeE,GAAAA,QAAU,EAAA,0TAHpDC,EAAAC,EAAA,QAAAC,EAAAL,KAAG,+DAFZM,CAAAA,EAMQC,EAAAH,EAAAI,0DAHIR,EAAiB,CAAA,EAAA,GAAA,GAAA,GAAA,EAAA,sCACOS,EAAA,IAAAC,EAAAX,cAAAC,GAAeC,GAAAA,yBACfQ,EAAA,IAAAE,EAAAZ,cAAAC,MAAeE,iBAH1CU,GAAAH,EAAA,GAAAJ,KAAAA,EAAAL,GAAG,EAAA,2BAAA,6bApBCD,CAAqCc,EAAAA,EAEjC,KAAAC,CAAAA,EAAAA,CAAMC,EAAAA,EAAAA,gBAEf,MAAAC,EAAaC,IACbC,EAAiB,IAAA,CACrBF,EAAWG,QAAO,CAChBC,KAAM,YACNC,UAAS,CACPC,IAAKC,GACLC,MACE,CAAAzB,cAAAA,CAAAA,CAAAA,CAAAA,CAAAA,gjDCayE0B,EAAazB,EAAG,CAAA,EAAC0B,KAAK,EAAA,0BACxBD,EAAazB,EAAG,CAAC2B,EAAAA,SAAAA,EAAS,4BACnE5B,cAAAC,GAAID,EAAAA,aAAAA,41BAH1CO,CAAAA,EAIKC,EAAAqB,EAAApB,CAHHqB,EAAAA,EAA6GD,EAAAE,CAAAA,EAAvGD,EAAwEC,EAAAC,iBAC9EF,EAA+GD,EAAAI,CAAzGH,EAAAA,EAAsEG,EAAAC,CAAAA,oEADGR,EAAazB,EAAG,CAAA,EAAC0B,KAAK,EAAA,KAAAQ,EAAAC,EAAAC,qBACxBX,EAAazB,EAAG,CAAA,EAAC2B,SAAS,EAAA,KAAAO,EAAAG,EAAAC,cACnE7B,EAAA,IAAA8B,EAAAxC,cAAAC,GAAID,EAAAA,uQAGzByB,MAAA,CAAAgB,KAAAxC,KAAIwC,4OADrBlC,EAEKC,EAAAqB,EAAApB,CAAAA,+CADYC,EAAA,IAAAgC,EAAAD,KAAAxC,KAAIwC,0pBAIjBlC,EAEQC,EAAAH,EAAAI,CADNqB,EAAAA,EAA2CzB,EAAAsC,CAAAA,mNAF1C1C,EAAW,CAAA2C,GAAAA,EAAA3C,8HAAXA,EAAW,CAAA,8QAOeD,cAAAC,GAAID,EAAAA,aAAAA,yOADrCO,EAEKC,EAAAqB,EAAApB,CAAAA,+CAD4BC,EAAA,IAAAmC,EAAA7C,cAAAC,KAAID,2QApB/B8C,KAAA7C,KAAI6C,KACJC,KAAAC,EAAO,QAAU/C,KAAIgD,cACrBC,KAAAjD,KAAIiD,KACGC,YAAAlD,GAAImD,EAAAA,8OAHX1C,EAAA,IAAA2C,EAAAP,KAAA7C,KAAI6C,MACJpC,EAAA,IAAA2C,EAAAN,KAAAC,EAAO,QAAU/C,KAAIgD,eACrBvC,EAAA,IAAA2C,EAAAH,KAAAjD,KAAIiD,MACGxC,EAAA,IAAA2C,EAAAF,YAAAlD,GAAImD,EAAAA,gVAnBNE,CAAAA,EASVxC,mUAqBmFyC,EAAWD,EAAIL,gXAnBhGO,EAAA,EAAAC,EACD,mBAAoBH,EAAMA,EAAII,eAAeC,OAASL,EAAII,eAAeE,MAAQN,EAAII,eAAeG,QAAU,EAAA"}