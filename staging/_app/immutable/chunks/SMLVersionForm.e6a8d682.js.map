{"version":3,"file":"SMLVersionForm.e6a8d682.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { UpdateSmlArch, VersionStabilities } from '$lib/generated';\n\nexport type SMLArchData = {\n  platform: string;\n  link: string;\n};\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  changelog: string;\n  date: string;\n  arch: UpdateSmlArch[];\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlLinksSchema = zod.object({\n  platform: zod.string(),\n  link: zod.string().url()\n});\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  arch: zod.array(smlLinksSchema),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export const { t } = getTranslate();\n\n  export let onSubmit: (data: SMLVersionData) => void;\n\n  export let editing = false;\n\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '0.0.0',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    version: '',\n    arch: [{ platform: '', link: '' }]\n  };\n  export let submitText = $t('entry.create');\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: smlVersionSchema }), reporter],\n    onSubmit: (submitted: SMLVersionData) => onSubmit(trimNonSchema(submitted, smlVersionSchema))\n  });\n\n  const addArch = () => {\n    $data.arch.push({ platform: '', link: '', key: '' });\n    $data.arch = $data.arch;\n  };\n\n  const removeArch = (i: number) => {\n    $data.arch.splice(i, 1);\n    $data.arch = $data.arch;\n  };\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label={$t('version')} required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory {$t('version')}\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    {#if $data.bootstrap_version !== '0.0.0'}\n      <div class=\"grid grid-flow-row gap-2\">\n        <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap {$t('version')}\" required />\n        <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n    {/if}\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label={$t('stability')}>\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label={$t('changelog')}\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>{$t('preview')}:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      {#each $data.arch as data_link, i}\n        <div class=\"gap-6 auto-rows-max\">\n          <Select bind:value={data_link.platform} label=\"Platform\">\n            <Option value=\"WindowsNoEditor\">{$t('arch.windows-client')}</Option>\n            <Option value=\"WindowsServer\">{$t('arch.windows-server')}</Option>\n            <Option value=\"LinuxServer\">{$t('arch.linux-server')}</Option>\n          </Select>\n\n          <Textfield\n            name={`data_link.link`}\n            placeholder=\"URL\"\n            bind:value={data_link.link}\n            style=\"min-width: 850px;\"\n            label=\"URL\" />\n          <ValidationMessage for=\"data_link.link\" let:messages={message}>\n            <span class=\"validation-message\">{message || ''}</span>\n          </ValidationMessage>\n\n          {#if !editing}\n            <Button type=\"button\" on:click={addArch}>{$t('add')}</Button>\n            <Button type=\"button\" disabled={$data.arch.length == 1} on:click={() => removeArch(i)}\n              >{$t('remove')}</Button>\n          {/if}\n        </div>\n      {/each}\n\n      <Textfield bind:value={$data.link} label={$t('link')} />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label={$t('date-and-time')} required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlLinksSchema","zod.object","platform","zod.string","link","url","smlVersionSchema","version","regex","satisfactory_version","zod.number","bootstrap_version","stability","arch","zod.array","changelog","date","t_1_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t_1","label","textfield_props","value","message","div","textfield_changes","innerHTML","raw_value","disabled","length","button1_changes","select_props","create_if_block","select_changes","t9_value","textfield0_props","textfield1_props","create_if_block_1","textfield2_props","handle_promise","promise","markdown","info","each_value","i","textfield3_props","textfield4_props","form_1","append_hydration_dev","div9","div0","div1","div2","div5","div3","div4","div6","div7","div8","textfield0_changes","textfield1_changes","textfield2_changes","current","t9","each_blocks","textfield3_changes","textfield4_changes","t","getTranslate","onSubmit","$$props","editing","initialValues","VersionStabilities","Alpha","submitText","$t","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","addArch","$data","push","key","removeArch","splice","$$self","$$","not_equal","data_link","click_handler","preview"],"mappings":"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"}