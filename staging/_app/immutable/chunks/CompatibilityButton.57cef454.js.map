{"version":3,"file":"CompatibilityButton.57cef454.js","sources":["../../../../../../src/lib/components/mods/compatibility/OutdatedBanner.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityStateText.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityInfo.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityIcon.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityButton.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInfoInput;\n  export let logo = false;\n\n  function Worst(input: CompatibilityInfoInput): CompatibilityState {\n    const EA = input.EA.state;\n    if (EA == CompatibilityState.Broken) {\n      // Broken is always the worst\n      return EA;\n    }\n    if (EA == CompatibilityState.Works) {\n      return input.EXP.state; // Anything other than Works is worse\n    }\n    if (input.EXP.state != CompatibilityState.Works) {\n      // If it's not better then it is the worst\n      return input.EXP.state;\n    }\n    return EA;\n  }\n\n  let worst = CompatibilityState.Works;\n  $: if (compatibility) {\n    worst = Worst(compatibility);\n  } else {\n    worst = CompatibilityState.Works;\n  }\n  $: works = worst === CompatibilityState.Works;\n</script>\n\n{#if !works}\n  <div\n    class=\"mod-outdated-stripe\"\n    class:mod-damaged={worst === CompatibilityState.Damaged}\n    class:mod-broken={worst === CompatibilityState.Broken}\n    class:mod-logo-outdated={logo} />\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityState } from '$lib/generated';\n  import { getTranslate } from '@tolgee/svelte';\n  export let state: CompatibilityState;\n\n  export const { t } = getTranslate();\n\n  const classForState = (s: CompatibilityState): string => `mod-state-${s.toString().toLowerCase()}`;\n</script>\n\n<p class=\"{classForState(state)} mod-state\">{$t(`compatibility-info.state.${state.toString().toLowerCase()}`)}</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityStateText from '$lib/components/mods/compatibility/CompatibilityStateText.svelte';\n  import { markdown } from '../../../utils/markdown';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n  export const compatibilityStateDescriptions: {\n    [key: string]: string;\n  } = {\n    Works: $t('compatibility-info.state.works.description'),\n    Damaged: $t('compatibility-info.state.damaged.description'),\n    Broken: $t('compatibility-info.state.broken.description'),\n    Unknown: $t('compatibility-info.state.unknown.description')\n  };\n</script>\n\n<div>\n  {$t('compatibility-info.maintained-by')}\n  <a href=\"https://discord.gg/xkVJ73E\" style=\"text-decoration: underline\">{$t('discord')}</a>!\n</div>\n<br />\n{#if compatibility}\n  <div>{$t('early-access')}: <CompatibilityStateText state={compatibility?.EA?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EA?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EA.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EA.note) then rendered}\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n  <div>{$t('experimental')}: <CompatibilityStateText state={compatibility?.EXP?.state} /></div>\n  <div class=\"compatibility-state-description\">\n    {compatibilityStateDescriptions[compatibility?.EXP?.state || 'Unknown']}\n  </div>\n  {#if compatibility.EXP.note}\n    <div>\n      {$t('compatibility-info.note')}: {#await markdown(compatibility.EXP.note) then rendered}\n        {@html rendered}\n      {/await}\n    </div>\n  {/if}\n{:else}\n  <div>\n    {compatibilityStateDescriptions.Unknown}\n  </div>\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInput;\n  export let EXP = false;\n  let iconText = 'rocket_launch';\n  if (EXP) {\n    iconText = 'science';\n  }\n</script>\n\n<p\n  class=\"material-icons text-base\"\n  class:mod-state-works={compatibility?.state === CompatibilityState.Works}\n  class:mod-state-damaged={compatibility?.state === CompatibilityState.Damaged}\n  class:mod-state-broken={compatibility?.state === CompatibilityState.Broken}\n  class:mod-state-unknown={!compatibility}>\n  {iconText}\n</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import Dialog, { Content, Title } from '@smui/dialog';\n  import CompatibilityInfo from '$lib/components/mods/compatibility/CompatibilityInfo.svelte';\n  import Button from '@smui/button';\n  import CompatibilityIcon from './CompatibilityIcon.svelte';\n  import { getTranslate } from '@tolgee/svelte';\n  let open = false;\n\n  export let compatibility: CompatibilityInfoInput;\n\n  export const { t } = getTranslate();\n</script>\n\n<Button\n  --mdc-text-button-container-height=\"20px\"\n  class=\"min-w-0 m-0\"\n  title={$t('compatibility-info.button')}\n  on:click={() => {\n    open = true;\n  }}>\n  <CompatibilityIcon compatibility={compatibility?.EA} />\n  <CompatibilityIcon compatibility={compatibility?.EXP} EXP={true} />\n</Button>\n\n<Dialog bind:open>\n  <Title>{$t('compatibility-info')}</Title>\n  <Content>\n    <CompatibilityInfo {compatibility} />\n  </Content>\n</Dialog>\n"],"names":["ctx","CompatibilityState","Damaged","Broken","insert_hydration_dev","target","div","anchor","create_if_block","compatibility","$$props","logo","Worst","input","EA","state","Works","EXP","worst","works","t_1_value","toString","toLowerCase","attr_dev","p","p_class_value","dirty","set_data_dev","t_1","t","getTranslate","classForState","s","Unknown","t0_value","t3_value","t6_value","t9_value","note","create_if_block_2","create_if_block_1","div0","div1","div2","div3","current","t0","t3","t6","t9","handle_promise","promise","markdown","info","html_tag","raw_value","t2_value","append_hydration_dev","a","br","t2","compatibilityStateDescriptions","$t","toggle_class","iconText","compatibilityicon0_changes","compatibilityicon1_changes","title","button_changes","open","$$invalidate"],"mappings":"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"}