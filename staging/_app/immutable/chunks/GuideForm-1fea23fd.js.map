{"version":3,"file":"GuideForm-1fea23fd.js","sources":["../../../../../../src/lib/models/guides.ts","../../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator, svelteReporter],\n    validateSchema: guideSchema,\n    onSubmit: (data: GuideData) => onSubmit(trimNonSchema(data, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield textarea class=\"vertical-textarea\" bind:value={$data.guide} label=\"Guide\" required input$rows={10} />\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["guideSchema","zod.object","name","zod.string","min","max","short_description","guide","t_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t","div","innerHTML","raw_value","textfield0_props","value","message","textfield1_props","textfield2_props","handle_promise","promise","markdown","info","form_1","append_hydration_dev","div6","div0","div1","div4","div2","div3","div5","textfield0_changes","textfield1_changes","textfield2_changes","onSubmit","$$props","initialValues","submitText","form","data","createForm","extend","validator","svelteReporter","validateSchema","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"6dAQa,KAAAA,IAAcC,GAAW,CACpCC,KAAMC,GAAAA,EAAaC,IAAI,CAAA,EAAGC,IAAI,EAAA,EAC9BC,kBAAmBH,GAAAA,EAAaC,IAAI,EAAA,EAAIC,IAAI,GAC5CE,EAAAA,MAAOJ;+ECuBiCK,EAAAC,QAAW,IAAE,2OAA/CC,EAAsDC,EAAAC,EAAAC,CAAAA,0BAApB,AAAAC,EAAA,MAAAN,IAAAA,GAAAC,QAAW,IAAE,KAAAM,GAAAC,EAAAR,oMAObA,EAAAC,QAAW,IAAE,2OAA/CC,EAAsDC,EAAAC,EAAAC,0BAApB,CAAA,AAAAC,EAAA,MAAAN,IAAAA,GAAAC,QAAW,IAAE,KAAAM,GAAAC,EAAAR,iNAQXA,EAAAC,QAAW,IAAE,4OAA/CC,EAAsDC,EAAAC,EAAAC,CAAAA,0BAApB,AAAAC,EAAA,MAAAN,IAAAA,GAAAC,QAAW,IAAE,KAAAM,GAAAC,EAAAR,yXAMJC,EAAe,IAAA,0NAA1DC,CAAAA,EAAgEC,EAAAM,EAAAJ,8CAArBJ,EAAe,IAAA,KAAAQ,GAAAC,UAAAC,oaAMpBV,EAAU,0BAAVA,EAAU,EAAA,CAAA,sDAAVA,EAAU,EAAA,CAAA,yTA7B7B,EAAA,AAAAA,KAAMP,OAAI,QAAVkB,IAAAC,MAAAZ,KAAMP,iIACeoB,KAAO,EAAA,GAAAA,eAAPA,KAAOA,EAAA,KAAA,yGAM5B,AAAAb,KAAMH,oBAAAA,QAANiB,IAAAF,MAAAZ,KAAMH,2JAC4BgB,KAAO,EAAA,GAAAA,CAAAA,cAAPA,KAAOA,EAAA,KAAA,CAAA,CAAA,2IAO4C,EAAhD,EAAA,AAAAb,KAAMF,QAAK,QAAXiB,IAAAH,MAAAZ,KAAMF,mIACnBe,KAAO,EAAA,GAAAA,eAAPA,KAAOA,EAAA,KAAA,CAAA,CAAA,sHAM5CG,EAAAA,GAAAC,GAAAC,GAASlB,EAAO,EAAAmB,EAAAA,CAAAA,4WADlB,ikBAAA,UAAA,4xBAxBdlB,EAmCMC,EAAAkB,EAAAhB,CAAAA,EAlCJiB,EAiCKD,EAAAE,CAhCHD,EAAAA,EAKKC,EAAAC,CAAAA,sCAELF,EAAAA,EAKKC,EAAAE,CAAAA,wCAELH,EAaKC,EAAAG,CAZHJ,EAAAA,EAKKI,EAAAC,CAAAA,wCACLL,EAAAA,EAKKI,EAAAE,CAAAA,EAJHN,EAAoBM,EAAAxB,gFAOxBkB,EAAAA,EAEKC,EAAAM,CAAAA,0GA9BoBC,EAAAjB,MAAAZ,KAAMP,gHAONqC,EAAAlB,MAAAZ,KAAMH,+HAQ+BkC,EAAAnB,MAAAZ,KAAMF,gGAOxDO,EAAA,GAAAY,KAAAA,IAAAC,GAASlB,EAAO,EAAAgB,IAAAA,GAAAC,GAAAE,CAAAA,ypBA3CnBa,GAAmCC,iBACnCC,EAAa,CACtBzC,KAAM,GACNK,MAAO,GACPD,kBAAmB,OAEVsC,CAAAA,WAAAA,EAAa,UAAQF,aAExBG,EAAIC,KAAEA,GAASC,GAAU,CAChBJ,cACfK,EAAAA,OAAM,CAAGC,GAAWC,EACpBC,EAAAA,eAAgBnD,GAChByC,SAAWK,GAAoBL,EAASW,GAAcN,EAAM9C,EAAAA,CAAAA,CAAAA,CAAAA,iPASnC,CAAA,AAAAqD,EAAAC,GAAAC,UAAAC,EAAMtD,KAAImB,CAAAA,GAAVmC,GAAMtD,KAAImB,0BAOV,AAAAgC,EAAAC,GAAAC,UAAAC,EAAMlD,kBAAiBe,CAAAA,GAAvBmC,GAAMlD,kBAAiBe,0BAQc,AAAAgC,EAAAC,GAAAC,UAAAC,EAAMjD,MAAKc,CAAA,GAAXmC,GAAMjD,MAAKc,qnBArBxEoC,EAAWD,EAAMjD,OAAoB,EAAA,CAAA"}