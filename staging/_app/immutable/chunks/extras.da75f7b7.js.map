{"version":3,"file":"extras.da75f7b7.js","sources":["../../../../../../node_modules/dompurify/dist/purify.es.js","../../../../../../node_modules/marked/lib/marked.esm.js","../../../../../../node_modules/marked-mangle/src/index.js","../../../../../../node_modules/marked-gfm-heading-id/src/index.js","../../../../../../node_modules/prismjs/prism.js","../../../../../../node_modules/prismjs/components/prism-c.js","../../../../../../node_modules/prismjs/components/prism-cpp.js","../../../../../../node_modules/prismjs/components/prism-lua.js","../../../../../../node_modules/prismjs/components/prism-javascript.js","../../../../../../node_modules/prismjs/components/prism-json.js","../../../../../../node_modules/prismjs/components/prism-python.js","../../../../../../node_modules/prismjs/components/prism-markdown.js","../../../../../../node_modules/prismjs/components/prism-markup.js","../../../../../../node_modules/@cfworker/json-schema/dist/deep-compare-strict.js","../../../../../../node_modules/@cfworker/json-schema/dist/pointer.js","../../../../../../node_modules/@cfworker/json-schema/dist/dereference.js","../../../../../../node_modules/@cfworker/json-schema/dist/format.js","../../../../../../node_modules/@cfworker/json-schema/dist/ucs2-length.js","../../../../../../node_modules/@cfworker/json-schema/dist/validate.js","../../../../../../node_modules/@cfworker/json-schema/dist/validator.js"],"sourcesContent":["/*! @license DOMPurify 3.0.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\n\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\n\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\n\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\n\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\n\n\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\n\n\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n\n  while (l--) {\n    let element = array[l];\n\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\n\n\nfunction clone(object) {\n  const newObject = create(null);\n\n  for (const [property, value] of entries(object)) {\n    if (getOwnPropertyDescriptor(object, property) !== undefined) {\n      newObject[property] = value;\n    }\n  }\n\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\n\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\n\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\n\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME\n});\n\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\n\n\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  } // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n\n\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\n\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n  const DOMPurify = root => createDOMPurify(root);\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n\n\n  DOMPurify.version = '3.0.6';\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n\n  let SAFE_FOR_TEMPLATES = false;\n  /* Decide if document with <html>... should be returned */\n\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  /* Parsing of strict XHTML documents */\n\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n\n\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n\n\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n\n    ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n    cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n    cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n    transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n    : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n\n\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...text]);\n      ALLOWED_ATTR = [];\n\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n\n\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n\n\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      } // Overwrite existing TrustedTypes policy.\n\n\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      } // If creating the internal policy succeeded sign internal variables.\n\n\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    } // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n\n\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n\n  const ALL_SVG_TAGS = addToSet({}, svg$1);\n  addToSet(ALL_SVG_TAGS, svgFilters);\n  addToSet(ALL_SVG_TAGS, svgDisallowed);\n  const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n  addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      } // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n\n\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      } // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n\n\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      } // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n\n\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      } // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n\n\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      } // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n\n\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    } // For XHTML and XML documents that support custom namespaces\n\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    } // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n\n\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      node.remove();\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n\n\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n\n    node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n\n\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n\n\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {// Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n\n\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n\n\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n\n\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n\n\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n\n\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n\n\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n\n    _executeHook('beforeSanitizeElements', currentNode, null);\n    /* Check if element is clobbered or can clobber */\n\n\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Now let's check the element's type and name */\n\n\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n\n\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n\n\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n\n\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n\n\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n\n\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n\n\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n\n\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n\n\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n\n\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n\n\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n\n\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n\n\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n\n\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n\n\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Handle attributes that require Trusted Types */\n\n\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n\n\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n\n\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n\n\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n      /* Sanitize tags and elements */\n\n\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n      /* Deep shadow DOM detected */\n\n\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(shadowNode);\n    }\n    /* Execute a hook if present */\n\n\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n\n\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n\n    IS_EMPTY_INPUT = !dirty;\n\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n\n\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n\n\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n\n\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n\n\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n\n\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n\n\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n\n\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n      /* Shadow DOM detected, sanitize it */\n\n\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n      /* Check attributes, sanitize if necessary */\n\n\n      _sanitizeAttributes(currentNode);\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n\n\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n\n\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n\n\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n\n\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _parseConfig(cfg);\n\n    SET_CONFIG = true;\n  };\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n\n\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n\n\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n\n\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n\n\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n\n\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n\n\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.js.map\n","/**\n * marked v9.1.5 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            val = typeof val === 'object' && 'source' in val ? val.source : val;\n            val = val.replace(caret, '$1');\n            regex = regex.replace(name, val);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(regex, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    // TODO: Fix this rules type\n    rules;\n    lexer;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            list.items[list.items.length - 1].text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (cap) {\n            if (!/[:|]/.test(cap[2])) {\n                // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n                return;\n            }\n            const item = {\n                type: 'table',\n                raw: cap[0],\n                header: splitCells(cap[1]).map(c => {\n                    return { text: c, tokens: [] };\n                }),\n                align: cap[2].replace(/^\\||\\| *$/g, '').split('|'),\n                rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n            };\n            if (item.header.length === item.align.length) {\n                let l = item.align.length;\n                let i, j, k, row;\n                for (i = 0; i < l; i++) {\n                    const align = item.align[i];\n                    if (align) {\n                        if (/^ *-+: *$/.test(align)) {\n                            item.align[i] = 'right';\n                        }\n                        else if (/^ *:-+: *$/.test(align)) {\n                            item.align[i] = 'center';\n                        }\n                        else if (/^ *:-+ *$/.test(align)) {\n                            item.align[i] = 'left';\n                        }\n                        else {\n                            item.align[i] = null;\n                        }\n                    }\n                }\n                l = item.rows.length;\n                for (i = 0; i < l; i++) {\n                    item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => {\n                        return { text: c, tokens: [] };\n                    });\n                }\n                // parse child tokens inside headers and cells\n                // header child tokens\n                l = item.header.length;\n                for (j = 0; j < l; j++) {\n                    item.header[j].tokens = this.lexer.inline(item.header[j].text);\n                }\n                // cell child tokens\n                l = item.rows.length;\n                for (j = 0; j < l; j++) {\n                    row = item.rows[j];\n                    for (k = 0; k < row.length; k++) {\n                        row[k].tokens = this.lexer.inline(row[k].text);\n                    }\n                }\n                return item;\n            }\n        }\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n                title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            link = links[link.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrong.lDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n                } while (prevCapZero !== cap[0]);\n                text = escape(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\n// Not all rules are defined in the object literal\n// @ts-expect-error\nconst block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n        + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n        + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n        + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n        + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n        + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n        + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n        + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n        + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n        + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n};\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n    .replace('label', block._label)\n    .replace('title', block._title)\n    .getRegex();\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n    .replace('bull', block.bullet)\n    .getRegex();\nblock.list = edit(block.list)\n    .replace(/bull/g, block.bullet)\n    .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n    .replace('def', '\\\\n+(?=' + block.def.source + ')')\n    .getRegex();\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n    .replace('comment', block._comment)\n    .replace('tag', block._tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nblock.lheading = edit(block.lheading)\n    .replace(/bull/g, block.bullet) // lists can interrupt\n    .getRegex();\nblock.paragraph = edit(block._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nblock.blockquote = edit(block.blockquote)\n    .replace('paragraph', block.paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nblock.normal = { ...block };\n/**\n * GFM Block Grammar\n */\nblock.gfm = {\n    ...block.normal,\n    table: '^ *([^\\\\n ].*)\\\\n' // Header\n        + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n        + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\nblock.gfm.table = edit(block.gfm.table)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nblock.gfm.paragraph = edit(block._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('table', block.gfm.table) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nblock.pedantic = {\n    ...block.normal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', block._comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(block.normal._paragraph)\n        .replace('hr', block.hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', block.lheading)\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\n// Not all rules are defined in the object literal\n// @ts-expect-error\nconst inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment'\n        + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n        + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n        + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n        + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n        + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n        lDelim: /^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\n        //         (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n        //         | Skip orphan inside strong      | Consume to delim | (1) #***              | (2) a***#, a***                    | (3) #***a, ***a                  | (4) ***#                 | (5) #***#                         | (6) a***a\n        rDelimAst: /^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])/,\n        rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/ // ^- Not allowed for _\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^((?![*_])[\\spunctuation])/\n};\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\ninline._punctuation = '\\\\p{P}$+<=>`^|~';\ninline.punctuation = edit(inline.punctuation, 'u').replace(/punctuation/g, inline._punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\ninline.anyPunctuation = /\\\\[punct]/g;\ninline._escapes = /\\\\([punct])/g;\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim, 'u')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.anyPunctuation = edit(inline.anyPunctuation, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline._escapes = edit(inline._escapes, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n    .replace('scheme', inline._scheme)\n    .replace('email', inline._email)\n    .getRegex();\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\ninline.tag = edit(inline.tag)\n    .replace('comment', inline._comment)\n    .replace('attribute', inline._attribute)\n    .getRegex();\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\ninline.link = edit(inline.link)\n    .replace('label', inline._label)\n    .replace('href', inline._href)\n    .replace('title', inline._title)\n    .getRegex();\ninline.reflink = edit(inline.reflink)\n    .replace('label', inline._label)\n    .replace('ref', block._label)\n    .getRegex();\ninline.nolink = edit(inline.nolink)\n    .replace('ref', block._label)\n    .getRegex();\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n    .replace('reflink', inline.reflink)\n    .replace('nolink', inline.nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\ninline.normal = { ...inline };\n/**\n * Pedantic Inline Grammar\n */\ninline.pedantic = {\n    ...inline.normal,\n    strong: {\n        start: /^__|\\*\\*/,\n        middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        endAst: /\\*\\*(?!\\*)/g,\n        endUnd: /__(?!_)/g\n    },\n    em: {\n        start: /^_|\\*/,\n        middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n        endAst: /\\*(?!\\*)/g,\n        endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', inline._label)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', inline._label)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\ninline.gfm = {\n    ...inline.normal,\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\ninline.gfm.url = edit(inline.gfm.url, 'i')\n    .replace('email', inline.gfm._extended_email)\n    .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\ninline.breaks = {\n    ...inline.gfm,\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        // @ts-expect-error\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        let next;\n        while (next = this.inlineQueue.shift()) {\n            this.inlineTokens(next.src, next.tokens);\n        }\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(lang)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    parser = _Parser.parse;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    lexer = _Lexer.lex;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            values = values.concat(this.walkTokens(genericToken[childTokens], callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    const rendererFunc = pack.renderer[prop];\n                    const rendererKey = prop;\n                    const prevRenderer = renderer[rendererKey];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererKey] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    const tokenizerFunc = pack.tokenizer[prop];\n                    const tokenizerKey = prop;\n                    const prevTokenizer = tokenizer[tokenizerKey];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    tokenizer[tokenizerKey] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    const hooksFunc = pack.hooks[prop];\n                    const hooksKey = prop;\n                    const prevHook = hooks[hooksKey];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        hooks[hooksKey] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        hooks[hooksKey] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                const tokens = lexer(src, opt);\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","export function mangle() {\n  return {\n    mangle: false, // remove this once mangle option is removed\n    walkTokens(token) {\n      if (token.type !== 'link') {\n        return;\n      }\n\n      if (!token.href.startsWith('mailto:')) {\n        return;\n      }\n\n      const email = token.href.substring(7);\n      const mangledEmail = mangleEmail(email);\n\n      token.href = `mailto:${mangledEmail}`;\n\n      if (token.tokens.length !== 1 || token.tokens[0].type !== 'text' || token.tokens[0].text !== email) {\n        return;\n      }\n\n      token.text = mangledEmail;\n      token.tokens[0].text = mangledEmail;\n    }\n  };\n}\n\nfunction mangleEmail(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n","import GithubSlugger from 'github-slugger';\nlet slugger;\n\nlet headings = [];\n\nexport function gfmHeadingId({ prefix = '' } = {}) {\n  return {\n    headerIds: false, // prevent deprecation warning; remove this once headerIds option is removed\n    hooks: {\n      preprocess(src) {\n        headings = [];\n        slugger = new GithubSlugger();\n        return src;\n      }\n    },\n    renderer: {\n      heading(text, level, raw) {\n        raw = raw\n          .toLowerCase()\n          .trim()\n          .replace(/<[!\\/a-z].*?>/gi, '');\n        const id = `${prefix}${slugger.slug(raw)}`;\n        const heading = { level, text, id };\n        headings.push(heading);\n\n        return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n      }\n    }\n  };\n}\n\nexport function getHeadingList() {\n  return headings;\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","Prism.languages.c = Prism.languages.extend('clike', {\n\t'comment': {\n\t\tpattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\t// https://en.cppreference.com/w/c/language/string_literal\n\t\tpattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n\t\tlookbehind: true\n\t},\n\t'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n\t'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n\t'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n\t'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'char': {\n\t\t// https://en.cppreference.com/w/c/language/character_constant\n\t\tpattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n\t\tgreedy: true\n\t}\n});\n\nPrism.languages.insertBefore('c', 'string', {\n\t'macro': {\n\t\t// allow for multiline macro definitions\n\t\t// spaces after the # character compile fine with gcc\n\t\tpattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property',\n\t\tinside: {\n\t\t\t'string': [\n\t\t\t\t{\n\t\t\t\t\t// highlight the path of the include statement as a string\n\t\t\t\t\tpattern: /^(#\\s*include\\s*)<[^>]+>/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\tPrism.languages.c['string']\n\t\t\t],\n\t\t\t'char': Prism.languages.c['char'],\n\t\t\t'comment': Prism.languages.c['comment'],\n\t\t\t'macro-name': [\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'function'\n\t\t\t\t}\n\t\t\t],\n\t\t\t// highlight macro directives as keywords\n\t\t\t'directive': {\n\t\t\t\tpattern: /^(#\\s*)[a-z]+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t'directive-hash': /^#/,\n\t\t\t'punctuation': /##|\\\\(?=[\\r\\n])/,\n\t\t\t'expression': {\n\t\t\t\tpattern: /\\S[\\s\\S]*/,\n\t\t\t\tinside: Prism.languages.c\n\t\t\t}\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('c', 'function', {\n\t// highlight predefined macros as constants\n\t'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\n\ndelete Prism.languages.c['boolean'];\n","(function (Prism) {\n\n\tvar keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n\tvar modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () { return keyword.source; });\n\n\tPrism.languages.cpp = Prism.languages.extend('c', {\n\t\t'class-name': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source\n\t\t\t\t\t.replace(/<keyword>/g, function () { return keyword.source; })),\n\t\t\t\tlookbehind: true\n\t\t\t},\n\t\t\t// This is intended to capture the class name of method implementations like:\n\t\t\t//   void foo::bar() const {}\n\t\t\t// However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n\t\t\t// it starts with an uppercase letter. This approximation should give decent results.\n\t\t\t/\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n\t\t\t// This will capture the class name before destructors like:\n\t\t\t//   Foo::~Foo() {}\n\t\t\t/\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n\t\t\t// This also intends to capture the class name of method implementations but here the class has template\n\t\t\t// parameters, so it can't be a namespace (until C++ adds generic namespaces).\n\t\t\t/\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n\t\t],\n\t\t'keyword': keyword,\n\t\t'number': {\n\t\t\tpattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n\t\t\tgreedy: true\n\t\t},\n\t\t'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n\t\t'boolean': /\\b(?:false|true)\\b/\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'string', {\n\t\t'module': {\n\t\t\t// https://en.cppreference.com/w/cpp/language/modules\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:import|module)\\s+)/.source +\n\t\t\t\t'(?:' +\n\t\t\t\t// header-name\n\t\t\t\t/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n\t\t\t\t'|' +\n\t\t\t\t// module name or partition or both\n\t\t\t\t/<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () { return modName; }) +\n\t\t\t\t')'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'string': /^[<\"][\\s\\S]+/,\n\t\t\t\t'operator': /:/,\n\t\t\t\t'punctuation': /\\./\n\t\t\t}\n\t\t},\n\t\t'raw-string': {\n\t\t\tpattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n\t\t\talias: 'string',\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'keyword', {\n\t\t'generic-function': {\n\t\t\tpattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n\t\t\tinside: {\n\t\t\t\t'function': /^\\w+/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/,\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: Prism.languages.cpp\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'operator', {\n\t\t'double-colon': {\n\t\t\tpattern: /::/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('cpp', 'class-name', {\n\t\t// the base clause is an optional list of parent classes\n\t\t// https://en.cppreference.com/w/cpp/language/class\n\t\t'base-clause': {\n\t\t\tpattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: Prism.languages.extend('cpp', {})\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('inside', 'double-colon', {\n\t\t// All untokenized words that are not namespaces should be class names\n\t\t'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n\t}, Prism.languages.cpp['base-clause']);\n\n}(Prism));\n","Prism.languages.lua = {\n\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n\t// \\z may be used to skip the following space\n\t'string': {\n\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n\t\tgreedy: true\n\t},\n\t'number': /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n\t'operator': [\n\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n\t\t{\n\t\t\t// Match \"..\" but don't break \"...\"\n\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'punctuation': /[\\[\\](){},;]|\\.+|:+/\n};\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","// https://www.json.org/json-en.html\nPrism.languages.json = {\n\t'property': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'comment': {\n\t\tpattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\tgreedy: true\n\t},\n\t'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n\nPrism.languages.webmanifest = Prism.languages.json;\n","Prism.languages.python = {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])#.*/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t'string-interpolation': {\n\t\tpattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\t// \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n\t\t\t\tpattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'format-spec': {\n\t\t\t\t\t\tpattern: /(:)[^:(){}]+(?=\\}$)/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'conversion-option': {\n\t\t\t\t\t\tpattern: /![sra](?=[:}]$)/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'triple-quoted-string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n\t\tgreedy: true,\n\t\talias: 'string'\n\t},\n\t'string': {\n\t\tpattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n\t\tgreedy: true\n\t},\n\t'function': {\n\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n\t\tlookbehind: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\bclass\\s+)\\w+/i,\n\t\tlookbehind: true\n\t},\n\t'decorator': {\n\t\tpattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n\t\tlookbehind: true,\n\t\talias: ['annotation', 'punctuation'],\n\t\tinside: {\n\t\t\t'punctuation': /\\./\n\t\t}\n\t},\n\t'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n\t'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n\t'boolean': /\\b(?:False|None|True)\\b/,\n\t'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n\t'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n\nPrism.languages.py = Prism.languages.python;\n","(function (Prism) {\n\n\t// Allow only one line break\n\tvar inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n\n\t/**\n\t * This function is intended for the creation of the bold or italic pattern.\n\t *\n\t * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n\t *\n\t * _Note:_ Keep in mind that this adds a capturing group.\n\t *\n\t * @param {string} pattern\n\t * @returns {RegExp}\n\t */\n\tfunction createInline(pattern) {\n\t\tpattern = pattern.replace(/<inner>/g, function () { return inner; });\n\t\treturn RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n\t}\n\n\n\tvar tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n\tvar tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () { return tableCell; });\n\tvar tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n\n\n\tPrism.languages.markdown = Prism.languages.extend('markup', {});\n\tPrism.languages.insertBefore('markdown', 'prolog', {\n\t\t'front-matter-block': {\n\t\t\tpattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^---|---$/,\n\t\t\t\t'front-matter': {\n\t\t\t\t\tpattern: /\\S+(?:\\s+\\S+)*/,\n\t\t\t\t\talias: ['yaml', 'language-yaml'],\n\t\t\t\t\tinside: Prism.languages.yaml\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'blockquote': {\n\t\t\t// > ...\n\t\t\tpattern: /^>(?:[\\t ]*>)*/m,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'table': {\n\t\t\tpattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n\t\t\tinside: {\n\t\t\t\t'table-data-rows': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-data': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-line': {\n\t\t\t\t\tpattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'punctuation': /\\||:?-{3,}:?/\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'table-header-row': {\n\t\t\t\t\tpattern: RegExp('^' + tableRow + '$'),\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'table-header': {\n\t\t\t\t\t\t\tpattern: RegExp(tableCell),\n\t\t\t\t\t\t\talias: 'important',\n\t\t\t\t\t\t\tinside: Prism.languages.markdown\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': /\\|/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'code': [\n\t\t\t{\n\t\t\t\t// Prefixed by 4 spaces or 1 tab and preceded by an empty line\n\t\t\t\tpattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'keyword'\n\t\t\t},\n\t\t\t{\n\t\t\t\t// ```optional language\n\t\t\t\t// code block\n\t\t\t\t// ```\n\t\t\t\tpattern: /^```[\\s\\S]*?^```$/m,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'code-block': {\n\t\t\t\t\t\tpattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'code-language': {\n\t\t\t\t\t\tpattern: /^(```).+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /```/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'title': [\n\t\t\t{\n\t\t\t\t// title 1\n\t\t\t\t// =======\n\n\t\t\t\t// title 2\n\t\t\t\t// -------\n\t\t\t\tpattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /==+$|--+$/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t// # title 1\n\t\t\t\t// ###### title 6\n\t\t\t\tpattern: /(^\\s*)#.+/m,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'important',\n\t\t\t\tinside: {\n\t\t\t\t\tpunctuation: /^#+|#+$/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'hr': {\n\t\t\t// ***\n\t\t\t// ---\n\t\t\t// * * *\n\t\t\t// -----------\n\t\t\tpattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'list': {\n\t\t\t// * item\n\t\t\t// + item\n\t\t\t// - item\n\t\t\t// 1. item\n\t\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'url-reference': {\n\t\t\t// [id]: http://example.com \"Optional title\"\n\t\t\t// [id]: http://example.com 'Optional title'\n\t\t\t// [id]: http://example.com (Optional title)\n\t\t\t// [id]: <http://example.com> \"Optional title\"\n\t\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n\t\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/\n\t\t\t},\n\t\t\talias: 'url'\n\t\t},\n\t\t'bold': {\n\t\t\t// **strong**\n\t\t\t// __strong__\n\n\t\t\t// allow one nested instance of italic text using the same delimiter\n\t\t\tpattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^..)[\\s\\S]+(?=..$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\*\\*|__/\n\t\t\t}\n\t\t},\n\t\t'italic': {\n\t\t\t// *em*\n\t\t\t// _em_\n\n\t\t\t// allow one nested instance of bold text using the same delimiter\n\t\t\tpattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^.)[\\s\\S]+(?=.$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /[*_]/\n\t\t\t}\n\t\t},\n\t\t'strike': {\n\t\t\t// ~~strike through~~\n\t\t\t// ~strike~\n\t\t\t// eslint-disable-next-line regexp/strict\n\t\t\tpattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /~~?/\n\t\t\t}\n\t\t},\n\t\t'code-snippet': {\n\t\t\t// `code`\n\t\t\t// ``code``\n\t\t\tpattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\talias: ['code', 'keyword']\n\t\t},\n\t\t'url': {\n\t\t\t// [example](http://example.com \"Optional title\")\n\t\t\t// [example][id]\n\t\t\t// [example] [id]\n\t\t\tpattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'operator': /^!/,\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /(^\\[)[^\\]]+(?=\\])/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: {} // see below\n\t\t\t\t},\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'url': {\n\t\t\t\t\tpattern: /(^\\]\\()[^\\s)]+/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t},\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n\t\t['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n\t\t\tif (token !== inside) {\n\t\t\t\tPrism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n\t\t\t}\n\t\t});\n\t});\n\n\tPrism.hooks.add('after-tokenize', function (env) {\n\t\tif (env.language !== 'markdown' && env.language !== 'md') {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction walkTokens(tokens) {\n\t\t\tif (!tokens || typeof tokens === 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = tokens.length; i < l; i++) {\n\t\t\t\tvar token = tokens[i];\n\n\t\t\t\tif (token.type !== 'code') {\n\t\t\t\t\twalkTokens(token.content);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n\t\t\t\t * is optional. But the grammar is defined so that there is only one case we have to handle:\n\t\t\t\t *\n\t\t\t\t * token.content = [\n\t\t\t\t *     <span class=\"punctuation\">```</span>,\n\t\t\t\t *     <span class=\"code-language\">xxxx</span>,\n\t\t\t\t *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n\t\t\t\t *     <span class=\"code-block\">...</span>,\n\t\t\t\t *     '\\n', // exactly one new lines again\n\t\t\t\t *     <span class=\"punctuation\">```</span>\n\t\t\t\t * ];\n\t\t\t\t */\n\n\t\t\t\tvar codeLang = token.content[1];\n\t\t\t\tvar codeBlock = token.content[3];\n\n\t\t\t\tif (codeLang && codeBlock &&\n\t\t\t\t\tcodeLang.type === 'code-language' && codeBlock.type === 'code-block' &&\n\t\t\t\t\ttypeof codeLang.content === 'string') {\n\n\t\t\t\t\t// this might be a language that Prism does not support\n\n\t\t\t\t\t// do some replacements to support C++, C#, and F#\n\t\t\t\t\tvar lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp');\n\t\t\t\t\t// only use the first word\n\t\t\t\t\tlang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n\t\t\t\t\tvar alias = 'language-' + lang;\n\n\t\t\t\t\t// add alias\n\t\t\t\t\tif (!codeBlock.alias) {\n\t\t\t\t\t\tcodeBlock.alias = [alias];\n\t\t\t\t\t} else if (typeof codeBlock.alias === 'string') {\n\t\t\t\t\t\tcodeBlock.alias = [codeBlock.alias, alias];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcodeBlock.alias.push(alias);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twalkTokens(env.tokens);\n\t});\n\n\tPrism.hooks.add('wrap', function (env) {\n\t\tif (env.type !== 'code-block') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar codeLang = '';\n\t\tfor (var i = 0, l = env.classes.length; i < l; i++) {\n\t\t\tvar cls = env.classes[i];\n\t\t\tvar match = /language-(.+)/.exec(cls);\n\t\t\tif (match) {\n\t\t\t\tcodeLang = match[1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tvar grammar = Prism.languages[codeLang];\n\n\t\tif (!grammar) {\n\t\t\tif (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n\t\t\t\tvar id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n\t\t\t\tenv.attributes['id'] = id;\n\n\t\t\t\tPrism.plugins.autoloader.loadLanguages(codeLang, function () {\n\t\t\t\t\tvar ele = document.getElementById(id);\n\t\t\t\t\tif (ele) {\n\t\t\t\t\t\tele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tenv.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n\t\t}\n\t});\n\n\tvar tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n\n\t/**\n\t * A list of known entity names.\n\t *\n\t * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n\t *\n\t * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n\t */\n\tvar KNOWN_ENTITY_NAMES = {\n\t\t'amp': '&',\n\t\t'lt': '<',\n\t\t'gt': '>',\n\t\t'quot': '\"',\n\t};\n\n\t// IE 11 doesn't support `String.fromCodePoint`\n\tvar fromCodePoint = String.fromCodePoint || String.fromCharCode;\n\n\t/**\n\t * Returns the text content of a given HTML source code string.\n\t *\n\t * @param {string} html\n\t * @returns {string}\n\t */\n\tfunction textContent(html) {\n\t\t// remove all tags\n\t\tvar text = html.replace(tagPattern, '');\n\n\t\t// decode known entities\n\t\ttext = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n\t\t\tcode = code.toLowerCase();\n\n\t\t\tif (code[0] === '#') {\n\t\t\t\tvar value;\n\t\t\t\tif (code[1] === 'x') {\n\t\t\t\t\tvalue = parseInt(code.slice(2), 16);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = Number(code.slice(1));\n\t\t\t\t}\n\n\t\t\t\treturn fromCodePoint(value);\n\t\t\t} else {\n\t\t\t\tvar known = KNOWN_ENTITY_NAMES[code];\n\t\t\t\tif (known) {\n\t\t\t\t\treturn known;\n\t\t\t\t}\n\n\t\t\t\t// unable to decode\n\t\t\t\treturn m;\n\t\t\t}\n\t\t});\n\n\t\treturn text;\n\t}\n\n\tPrism.languages.md = Prism.languages.markdown;\n\n}(Prism));\n","Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","export function deepCompareStrict(a, b) {\n    const typeofa = typeof a;\n    if (typeofa !== typeof b) {\n        return false;\n    }\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b)) {\n            return false;\n        }\n        const length = a.length;\n        if (length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < length; i++) {\n            if (!deepCompareStrict(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (typeofa === 'object') {\n        if (!a || !b) {\n            return a === b;\n        }\n        const aKeys = Object.keys(a);\n        const bKeys = Object.keys(b);\n        const length = aKeys.length;\n        if (length !== bKeys.length) {\n            return false;\n        }\n        for (const k of aKeys) {\n            if (!deepCompareStrict(a[k], b[k])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a === b;\n}\n","export function encodePointer(p) {\n    return encodeURI(escapePointer(p));\n}\nexport function escapePointer(p) {\n    return p.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import { encodePointer } from './pointer.js';\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true\n};\nexport let initialBaseURI = typeof self !== 'undefined' &&\n    self.location &&\n    self.location.origin !== 'null'\n    ?\n        new URL(self.location.origin + self.location.pathname + location.search)\n    : new URL('https://github.com/cfworker');\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = '') {\n    if (schema && typeof schema === 'object' && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = '';\n                if (basePointer === '') {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    const schemaURI = baseURI.href + (basePointer ? '#' + basePointer : '');\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, '__absolute_uri__', {\n            enumerable: false,\n            value: schemaURI\n        });\n    }\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash;\n        Object.defineProperty(schema, '__absolute_recursive_ref__', {\n            enumerable: false,\n            value: url.href\n        });\n    }\n    if (schema.$anchor) {\n        const url = new URL('#' + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n","const DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\nconst FASTDATE = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/;\nconst FASTTIME = /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst FASTDATETIME = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i;\nconst FASTURIREFERENCE = /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i;\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split('@');\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === '.' || name.endsWith('.') || name.includes('..'))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split('.')\n        .every(part => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const fullFormat = {\n    date,\n    time: time.bind(undefined, false),\n    'date-time': date_time,\n    duration: DURATION,\n    uri,\n    'uri-reference': bind(URIREF),\n    'uri-template': bind(URITEMPLATE),\n    url: bind(URL_),\n    email: EMAIL,\n    hostname: bind(HOSTNAME),\n    ipv4: bind(IPV4),\n    ipv6: bind(IPV6),\n    regex: regex,\n    uuid: bind(UUID),\n    'json-pointer': bind(JSON_POINTER),\n    'json-pointer-uri-fragment': bind(JSON_POINTER_URI_FRAGMENT),\n    'relative-json-pointer': bind(RELATIVE_JSON_POINTER)\n};\nexport const fastFormat = {\n    ...fullFormat,\n    date: bind(FASTDATE),\n    time: bind(FASTTIME),\n    'date-time': bind(FASTDATETIME),\n    'uri-reference': bind(FASTURIREFERENCE)\n};\nfunction isLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n","export function ucs2length(s) {\n    let result = 0;\n    let length = s.length;\n    let index = 0;\n    let charCode;\n    while (index < length) {\n        result++;\n        charCode = s.charCodeAt(index++);\n        if (charCode >= 0xd800 && charCode <= 0xdbff && index < length) {\n            charCode = s.charCodeAt(index);\n            if ((charCode & 0xfc00) == 0xdc00) {\n                index++;\n            }\n        }\n    }\n    return result;\n}\n","import { deepCompareStrict } from './deep-compare-strict.js';\nimport { dereference } from './dereference.js';\nimport { fastFormat } from './format.js';\nimport { encodePointer } from './pointer.js';\nimport { ucs2length } from './ucs2-length.js';\nexport function validate(instance, schema, draft = '2019-09', lookup = dereference(schema), shortCircuit = true, recursiveAnchor = null, instanceLocation = '#', schemaLocation = '#', evaluated = Object.create(null)) {\n    if (schema === true) {\n        return { valid: true, errors: [] };\n    }\n    if (schema === false) {\n        return {\n            valid: false,\n            errors: [\n                {\n                    instanceLocation,\n                    keyword: 'false',\n                    keywordLocation: instanceLocation,\n                    error: 'False boolean schema.'\n                }\n            ]\n        };\n    }\n    const rawInstanceType = typeof instance;\n    let instanceType;\n    switch (rawInstanceType) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            instanceType = rawInstanceType;\n            break;\n        case 'object':\n            if (instance === null) {\n                instanceType = 'null';\n            }\n            else if (Array.isArray(instance)) {\n                instanceType = 'array';\n            }\n            else {\n                instanceType = 'object';\n            }\n            break;\n        default:\n            throw new Error(`Instances of \"${rawInstanceType}\" type are not supported.`);\n    }\n    const { $ref, $recursiveRef, $recursiveAnchor, type: $type, const: $const, enum: $enum, required: $required, not: $not, anyOf: $anyOf, allOf: $allOf, oneOf: $oneOf, if: $if, then: $then, else: $else, format: $format, properties: $properties, patternProperties: $patternProperties, additionalProperties: $additionalProperties, unevaluatedProperties: $unevaluatedProperties, minProperties: $minProperties, maxProperties: $maxProperties, propertyNames: $propertyNames, dependentRequired: $dependentRequired, dependentSchemas: $dependentSchemas, dependencies: $dependencies, prefixItems: $prefixItems, items: $items, additionalItems: $additionalItems, unevaluatedItems: $unevaluatedItems, contains: $contains, minContains: $minContains, maxContains: $maxContains, minItems: $minItems, maxItems: $maxItems, uniqueItems: $uniqueItems, minimum: $minimum, maximum: $maximum, exclusiveMinimum: $exclusiveMinimum, exclusiveMaximum: $exclusiveMaximum, multipleOf: $multipleOf, minLength: $minLength, maxLength: $maxLength, pattern: $pattern, __absolute_ref__, __absolute_recursive_ref__ } = schema;\n    const errors = [];\n    if ($recursiveAnchor === true && recursiveAnchor === null) {\n        recursiveAnchor = schema;\n    }\n    if ($recursiveRef === '#') {\n        const refSchema = recursiveAnchor === null\n            ? lookup[__absolute_recursive_ref__]\n            : recursiveAnchor;\n        const keywordLocation = `${schemaLocation}/$recursiveRef`;\n        const result = validate(instance, recursiveAnchor === null ? schema : recursiveAnchor, draft, lookup, shortCircuit, refSchema, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$recursiveRef',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n    }\n    if ($ref !== undefined) {\n        const uri = __absolute_ref__ || $ref;\n        const refSchema = lookup[uri];\n        if (refSchema === undefined) {\n            let message = `Unresolved $ref \"${$ref}\".`;\n            if (__absolute_ref__ && __absolute_ref__ !== $ref) {\n                message += `  Absolute URI \"${__absolute_ref__}\".`;\n            }\n            message += `\\nKnown schemas:\\n- ${Object.keys(lookup).join('\\n- ')}`;\n            throw new Error(message);\n        }\n        const keywordLocation = `${schemaLocation}/$ref`;\n        const result = validate(instance, refSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated);\n        if (!result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: '$ref',\n                keywordLocation,\n                error: 'A subschema had errors.'\n            }, ...result.errors);\n        }\n        if (draft === '4' || draft === '7') {\n            return { valid: errors.length === 0, errors };\n        }\n    }\n    if (Array.isArray($type)) {\n        let length = $type.length;\n        let valid = false;\n        for (let i = 0; i < length; i++) {\n            if (instanceType === $type[i] ||\n                ($type[i] === 'integer' &&\n                    instanceType === 'number' &&\n                    instance % 1 === 0 &&\n                    instance === instance)) {\n                valid = true;\n                break;\n            }\n        }\n        if (!valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type.join('\", \"')}\".`\n            });\n        }\n    }\n    else if ($type === 'integer') {\n        if (instanceType !== 'number' || instance % 1 || instance !== instance) {\n            errors.push({\n                instanceLocation,\n                keyword: 'type',\n                keywordLocation: `${schemaLocation}/type`,\n                error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n            });\n        }\n    }\n    else if ($type !== undefined && instanceType !== $type) {\n        errors.push({\n            instanceLocation,\n            keyword: 'type',\n            keywordLocation: `${schemaLocation}/type`,\n            error: `Instance type \"${instanceType}\" is invalid. Expected \"${$type}\".`\n        });\n    }\n    if ($const !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!deepCompareStrict(instance, $const)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'const',\n                    keywordLocation: `${schemaLocation}/const`,\n                    error: `Instance does not match ${JSON.stringify($const)}.`\n                });\n            }\n        }\n        else if (instance !== $const) {\n            errors.push({\n                instanceLocation,\n                keyword: 'const',\n                keywordLocation: `${schemaLocation}/const`,\n                error: `Instance does not match ${JSON.stringify($const)}.`\n            });\n        }\n    }\n    if ($enum !== undefined) {\n        if (instanceType === 'object' || instanceType === 'array') {\n            if (!$enum.some(value => deepCompareStrict(instance, value))) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'enum',\n                    keywordLocation: `${schemaLocation}/enum`,\n                    error: `Instance does not match any of ${JSON.stringify($enum)}.`\n                });\n            }\n        }\n        else if (!$enum.some(value => instance === value)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'enum',\n                keywordLocation: `${schemaLocation}/enum`,\n                error: `Instance does not match any of ${JSON.stringify($enum)}.`\n            });\n        }\n    }\n    if ($not !== undefined) {\n        const keywordLocation = `${schemaLocation}/not`;\n        const result = validate(instance, $not, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation);\n        if (result.valid) {\n            errors.push({\n                instanceLocation,\n                keyword: 'not',\n                keywordLocation,\n                error: 'Instance matched \"not\" schema.'\n            });\n        }\n    }\n    let subEvaluateds = [];\n    if ($anyOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/anyOf`;\n        const errorsLength = errors.length;\n        let anyValid = false;\n        for (let i = 0; i < $anyOf.length; i++) {\n            const subSchema = $anyOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            anyValid = anyValid || result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (anyValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'anyOf',\n                keywordLocation,\n                error: 'Instance does not match any subschemas.'\n            });\n        }\n    }\n    if ($allOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/allOf`;\n        const errorsLength = errors.length;\n        let allValid = true;\n        for (let i = 0; i < $allOf.length; i++) {\n            const subSchema = $allOf[i];\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            allValid = allValid && result.valid;\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n        }\n        if (allValid) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'allOf',\n                keywordLocation,\n                error: `Instance does not match every subschema.`\n            });\n        }\n    }\n    if ($oneOf !== undefined) {\n        const keywordLocation = `${schemaLocation}/oneOf`;\n        const errorsLength = errors.length;\n        const matches = $oneOf.filter((subSchema, i) => {\n            const subEvaluated = Object.create(evaluated);\n            const result = validate(instance, subSchema, draft, lookup, shortCircuit, $recursiveAnchor === true ? recursiveAnchor : null, instanceLocation, `${keywordLocation}/${i}`, subEvaluated);\n            errors.push(...result.errors);\n            if (result.valid) {\n                subEvaluateds.push(subEvaluated);\n            }\n            return result.valid;\n        }).length;\n        if (matches === 1) {\n            errors.length = errorsLength;\n        }\n        else {\n            errors.splice(errorsLength, 0, {\n                instanceLocation,\n                keyword: 'oneOf',\n                keywordLocation,\n                error: `Instance does not match exactly one subschema (${matches} matches).`\n            });\n        }\n    }\n    if (instanceType === 'object' || instanceType === 'array') {\n        Object.assign(evaluated, ...subEvaluateds);\n    }\n    if ($if !== undefined) {\n        const keywordLocation = `${schemaLocation}/if`;\n        const conditionResult = validate(instance, $if, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, keywordLocation, evaluated).valid;\n        if (conditionResult) {\n            if ($then !== undefined) {\n                const thenResult = validate(instance, $then, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/then`, evaluated);\n                if (!thenResult.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'if',\n                        keywordLocation,\n                        error: `Instance does not match \"then\" schema.`\n                    }, ...thenResult.errors);\n                }\n            }\n        }\n        else if ($else !== undefined) {\n            const elseResult = validate(instance, $else, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${schemaLocation}/else`, evaluated);\n            if (!elseResult.valid) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'if',\n                    keywordLocation,\n                    error: `Instance does not match \"else\" schema.`\n                }, ...elseResult.errors);\n            }\n        }\n    }\n    if (instanceType === 'object') {\n        if ($required !== undefined) {\n            for (const key of $required) {\n                if (!(key in instance)) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'required',\n                        keywordLocation: `${schemaLocation}/required`,\n                        error: `Instance does not have required property \"${key}\".`\n                    });\n                }\n            }\n        }\n        const keys = Object.keys(instance);\n        if ($minProperties !== undefined && keys.length < $minProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minProperties',\n                keywordLocation: `${schemaLocation}/minProperties`,\n                error: `Instance does not have at least ${$minProperties} properties.`\n            });\n        }\n        if ($maxProperties !== undefined && keys.length > $maxProperties) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxProperties',\n                keywordLocation: `${schemaLocation}/maxProperties`,\n                error: `Instance does not have at least ${$maxProperties} properties.`\n            });\n        }\n        if ($propertyNames !== undefined) {\n            const keywordLocation = `${schemaLocation}/propertyNames`;\n            for (const key in instance) {\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(key, $propertyNames, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'propertyNames',\n                        keywordLocation,\n                        error: `Property name \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($dependentRequired !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependantRequired`;\n            for (const key in $dependentRequired) {\n                if (key in instance) {\n                    const required = $dependentRequired[key];\n                    for (const dependantKey of required) {\n                        if (!(dependantKey in instance)) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependentRequired',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if ($dependentSchemas !== undefined) {\n            for (const key in $dependentSchemas) {\n                const keywordLocation = `${schemaLocation}/dependentSchemas`;\n                if (key in instance) {\n                    const result = validate(instance, $dependentSchemas[key], draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`, evaluated);\n                    if (!result.valid) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'dependentSchemas',\n                            keywordLocation,\n                            error: `Instance has \"${key}\" but does not match dependant schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($dependencies !== undefined) {\n            const keywordLocation = `${schemaLocation}/dependencies`;\n            for (const key in $dependencies) {\n                if (key in instance) {\n                    const propsOrSchema = $dependencies[key];\n                    if (Array.isArray(propsOrSchema)) {\n                        for (const dependantKey of propsOrSchema) {\n                            if (!(dependantKey in instance)) {\n                                errors.push({\n                                    instanceLocation,\n                                    keyword: 'dependencies',\n                                    keywordLocation,\n                                    error: `Instance has \"${key}\" but does not have \"${dependantKey}\".`\n                                });\n                            }\n                        }\n                    }\n                    else {\n                        const result = validate(instance, propsOrSchema, draft, lookup, shortCircuit, recursiveAnchor, instanceLocation, `${keywordLocation}/${encodePointer(key)}`);\n                        if (!result.valid) {\n                            errors.push({\n                                instanceLocation,\n                                keyword: 'dependencies',\n                                keywordLocation,\n                                error: `Instance has \"${key}\" but does not match dependant schema.`\n                            }, ...result.errors);\n                        }\n                    }\n                }\n            }\n        }\n        const thisEvaluated = Object.create(null);\n        let stop = false;\n        if ($properties !== undefined) {\n            const keywordLocation = `${schemaLocation}/properties`;\n            for (const key in $properties) {\n                if (!(key in instance)) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $properties[key], draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(key)}`);\n                if (result.valid) {\n                    evaluated[key] = thisEvaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'properties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if (!stop && $patternProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/patternProperties`;\n            for (const pattern in $patternProperties) {\n                const regex = new RegExp(pattern);\n                const subSchema = $patternProperties[pattern];\n                for (const key in instance) {\n                    if (!regex.test(key)) {\n                        continue;\n                    }\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], subSchema, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, `${keywordLocation}/${encodePointer(pattern)}`);\n                    if (result.valid) {\n                        evaluated[key] = thisEvaluated[key] = true;\n                    }\n                    else {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'patternProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" matches pattern \"${pattern}\" but does not match associated schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if (!stop && $additionalProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/additionalProperties`;\n            for (const key in instance) {\n                if (thisEvaluated[key]) {\n                    continue;\n                }\n                const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                const result = validate(instance[key], $additionalProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                if (result.valid) {\n                    evaluated[key] = true;\n                }\n                else {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'additionalProperties',\n                        keywordLocation,\n                        error: `Property \"${key}\" does not match additional properties schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        else if (!stop && $unevaluatedProperties !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedProperties`;\n            for (const key in instance) {\n                if (!evaluated[key]) {\n                    const subInstancePointer = `${instanceLocation}/${encodePointer(key)}`;\n                    const result = validate(instance[key], $unevaluatedProperties, draft, lookup, shortCircuit, recursiveAnchor, subInstancePointer, keywordLocation);\n                    if (result.valid) {\n                        evaluated[key] = true;\n                    }\n                    else {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'unevaluatedProperties',\n                            keywordLocation,\n                            error: `Property \"${key}\" does not match unevaluated properties schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'array') {\n        if ($maxItems !== undefined && instance.length > $maxItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxItems',\n                keywordLocation: `${schemaLocation}/maxItems`,\n                error: `Array has too many items (${instance.length} > ${$maxItems}).`\n            });\n        }\n        if ($minItems !== undefined && instance.length < $minItems) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minItems',\n                keywordLocation: `${schemaLocation}/minItems`,\n                error: `Array has too few items (${instance.length} < ${$minItems}).`\n            });\n        }\n        const length = instance.length;\n        let i = 0;\n        let stop = false;\n        if ($prefixItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/prefixItems`;\n            const length2 = Math.min($prefixItems.length, length);\n            for (; i < length2; i++) {\n                const result = validate(instance[i], $prefixItems[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    stop = shortCircuit;\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'prefixItems',\n                        keywordLocation,\n                        error: `Items did not match schema.`\n                    }, ...result.errors);\n                    if (stop)\n                        break;\n                }\n            }\n        }\n        if ($items !== undefined) {\n            const keywordLocation = `${schemaLocation}/items`;\n            if (Array.isArray($items)) {\n                const length2 = Math.min($items.length, length);\n                for (; i < length2; i++) {\n                    const result = validate(instance[i], $items[i], draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, `${keywordLocation}/${i}`);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            else {\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $items, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'items',\n                            keywordLocation,\n                            error: `Items did not match schema.`\n                        }, ...result.errors);\n                        if (stop)\n                            break;\n                    }\n                }\n            }\n            if (!stop && $additionalItems !== undefined) {\n                const keywordLocation = `${schemaLocation}/additionalItems`;\n                for (; i < length; i++) {\n                    const result = validate(instance[i], $additionalItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                    evaluated[i] = true;\n                    if (!result.valid) {\n                        stop = shortCircuit;\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'additionalItems',\n                            keywordLocation,\n                            error: `Items did not match additional items schema.`\n                        }, ...result.errors);\n                    }\n                }\n            }\n        }\n        if ($contains !== undefined) {\n            if (length === 0 && $minContains === undefined) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'contains',\n                    keywordLocation: `${schemaLocation}/contains`,\n                    error: `Array is empty. It must contain at least one item matching the schema.`\n                });\n            }\n            else if ($minContains !== undefined && length < $minContains) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minContains',\n                    keywordLocation: `${schemaLocation}/minContains`,\n                    error: `Array has less items (${length}) than minContains (${$minContains}).`\n                });\n            }\n            else {\n                const keywordLocation = `${schemaLocation}/contains`;\n                const errorsLength = errors.length;\n                let contained = 0;\n                for (let j = 0; j < length; j++) {\n                    const result = validate(instance[j], $contains, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${j}`, keywordLocation);\n                    if (result.valid) {\n                        evaluated[j] = true;\n                        contained++;\n                    }\n                    else {\n                        errors.push(...result.errors);\n                    }\n                }\n                if (contained >= ($minContains || 0)) {\n                    errors.length = errorsLength;\n                }\n                if ($minContains === undefined &&\n                    $maxContains === undefined &&\n                    contained === 0) {\n                    errors.splice(errorsLength, 0, {\n                        instanceLocation,\n                        keyword: 'contains',\n                        keywordLocation,\n                        error: `Array does not contain item matching schema.`\n                    });\n                }\n                else if ($minContains !== undefined && contained < $minContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'minContains',\n                        keywordLocation: `${schemaLocation}/minContains`,\n                        error: `Array must contain at least ${$minContains} items matching schema. Only ${contained} items were found.`\n                    });\n                }\n                else if ($maxContains !== undefined && contained > $maxContains) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'maxContains',\n                        keywordLocation: `${schemaLocation}/maxContains`,\n                        error: `Array may contain at most ${$maxContains} items matching schema. ${contained} items were found.`\n                    });\n                }\n            }\n        }\n        if (!stop && $unevaluatedItems !== undefined) {\n            const keywordLocation = `${schemaLocation}/unevaluatedItems`;\n            for (i; i < length; i++) {\n                if (evaluated[i]) {\n                    continue;\n                }\n                const result = validate(instance[i], $unevaluatedItems, draft, lookup, shortCircuit, recursiveAnchor, `${instanceLocation}/${i}`, keywordLocation);\n                evaluated[i] = true;\n                if (!result.valid) {\n                    errors.push({\n                        instanceLocation,\n                        keyword: 'unevaluatedItems',\n                        keywordLocation,\n                        error: `Items did not match unevaluated items schema.`\n                    }, ...result.errors);\n                }\n            }\n        }\n        if ($uniqueItems) {\n            for (let j = 0; j < length; j++) {\n                const a = instance[j];\n                const ao = typeof a === 'object' && a !== null;\n                for (let k = 0; k < length; k++) {\n                    if (j === k) {\n                        continue;\n                    }\n                    const b = instance[k];\n                    const bo = typeof b === 'object' && b !== null;\n                    if (a === b || (ao && bo && deepCompareStrict(a, b))) {\n                        errors.push({\n                            instanceLocation,\n                            keyword: 'uniqueItems',\n                            keywordLocation: `${schemaLocation}/uniqueItems`,\n                            error: `Duplicate items at indexes ${j} and ${k}.`\n                        });\n                        j = Number.MAX_SAFE_INTEGER;\n                        k = Number.MAX_SAFE_INTEGER;\n                    }\n                }\n            }\n        }\n    }\n    else if (instanceType === 'number') {\n        if (draft === '4') {\n            if ($minimum !== undefined &&\n                (($exclusiveMinimum === true && instance <= $minimum) ||\n                    instance < $minimum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum ? 'or equal to ' : ''} ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined &&\n                (($exclusiveMaximum === true && instance >= $maximum) ||\n                    instance > $maximum)) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$exclusiveMaximum ? 'or equal to ' : ''} ${$maximum}.`\n                });\n            }\n        }\n        else {\n            if ($minimum !== undefined && instance < $minimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'minimum',\n                    keywordLocation: `${schemaLocation}/minimum`,\n                    error: `${instance} is less than ${$minimum}.`\n                });\n            }\n            if ($maximum !== undefined && instance > $maximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'maximum',\n                    keywordLocation: `${schemaLocation}/maximum`,\n                    error: `${instance} is greater than ${$maximum}.`\n                });\n            }\n            if ($exclusiveMinimum !== undefined && instance <= $exclusiveMinimum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMinimum',\n                    keywordLocation: `${schemaLocation}/exclusiveMinimum`,\n                    error: `${instance} is less than ${$exclusiveMinimum}.`\n                });\n            }\n            if ($exclusiveMaximum !== undefined && instance >= $exclusiveMaximum) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'exclusiveMaximum',\n                    keywordLocation: `${schemaLocation}/exclusiveMaximum`,\n                    error: `${instance} is greater than or equal to ${$exclusiveMaximum}.`\n                });\n            }\n        }\n        if ($multipleOf !== undefined) {\n            const remainder = instance % $multipleOf;\n            if (Math.abs(0 - remainder) >= 1.1920929e-7 &&\n                Math.abs($multipleOf - remainder) >= 1.1920929e-7) {\n                errors.push({\n                    instanceLocation,\n                    keyword: 'multipleOf',\n                    keywordLocation: `${schemaLocation}/multipleOf`,\n                    error: `${instance} is not a multiple of ${$multipleOf}.`\n                });\n            }\n        }\n    }\n    else if (instanceType === 'string') {\n        const length = $minLength === undefined && $maxLength === undefined\n            ? 0\n            : ucs2length(instance);\n        if ($minLength !== undefined && length < $minLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'minLength',\n                keywordLocation: `${schemaLocation}/minLength`,\n                error: `String is too short (${length} < ${$minLength}).`\n            });\n        }\n        if ($maxLength !== undefined && length > $maxLength) {\n            errors.push({\n                instanceLocation,\n                keyword: 'maxLength',\n                keywordLocation: `${schemaLocation}/maxLength`,\n                error: `String is too long (${length} > ${$maxLength}).`\n            });\n        }\n        if ($pattern !== undefined && !new RegExp($pattern).test(instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'pattern',\n                keywordLocation: `${schemaLocation}/pattern`,\n                error: `String does not match pattern.`\n            });\n        }\n        if ($format !== undefined &&\n            fastFormat[$format] &&\n            !fastFormat[$format](instance)) {\n            errors.push({\n                instanceLocation,\n                keyword: 'format',\n                keywordLocation: `${schemaLocation}/format`,\n                error: `String does not match format \"${$format}\".`\n            });\n        }\n    }\n    return { valid: errors.length === 0, errors };\n}\n","import { dereference } from './dereference.js';\nimport { validate } from './validate.js';\nexport class Validator {\n    constructor(schema, draft = '2019-09', shortCircuit = true) {\n        this.schema = schema;\n        this.draft = draft;\n        this.shortCircuit = shortCircuit;\n        this.lookup = dereference(schema);\n    }\n    validate(instance) {\n        return validate(instance, this.schema, this.draft, this.lookup, this.shortCircuit);\n    }\n    addSchema(schema, id) {\n        if (id) {\n            schema = { ...schema, $id: id };\n        }\n        dereference(schema, this.lookup);\n    }\n}\n"],"names":["entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","undefined","l","element","lcElement","clone","object","newObject","property","value","lookupGetter","prop","desc","get","fallbackValue","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","_","createDOMPurify","DOMPurify","root","version","removed","document","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","childCount","i","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","_getDefaults","async","breaks","extensions","gfm","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","unescapeTest","unescape","n","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","getRegex","cleanUrl","href","encodeURI","noopTest","exec","splitCells","tableRow","count","row","offset","str","escaped","curr","cells","split","shift","splice","rtrim","c","invert","suffLen","currChar","slice","findClosingBracket","b","level","outputLink","cap","link","raw","lexer","title","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","join","_Tokenizer","options","rules","this","src","block","newline","code","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","bull","isordered","ordered","start","loose","items","itemRegex","itemContents","endsWithBlankLine","endEarly","line","t","repeat","nextLine","indent","trimStart","search","blankLine","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","istask","ischecked","task","checked","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","def","r","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","reflink","nolink","maskedSrc","prevChar","emStrong","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","lastCharLength","index","hasNonSpaceChars","hasSpaceCharsOnBothEnds","e","br","del","autolink","url","prevCapZero","_backpedal","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","anyPunctuation","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","_Lexer","inlineQueue","xe","lex","lexInline","next","leading","tabs","lastToken","cutSrc","lastParagraphClipped","extTokenizer","space","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","charCodeAt","error","Error","keepPrevChar","keys","includes","lastIndexOf","codespan","startInline","inlineText","_Renderer","infostring","quote","startatt","flags","cleanHref","out","_TextRenderer","_Parser","textRenderer","parse","parseInline","renderers","genericToken","ret","parser","headingToken","codeToken","tableToken","cell","tablecell","tablerow","blockquoteToken","listToken","itemBody","checkbox","unshift","listitem","htmlToken","paragraphToken","textToken","escapeToken","tagToken","linkToken","imageToken","image","strongToken","emToken","codespanToken","delToken","_Hooks","markdown","static","Set","Marked","defaults","__privateAdd","_e","_t","setOptions","parseMarkdown","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","use","callback","values","concat","childTokens","pack","opts","ext","prevRenderer","extLevel","rendererFunc","rendererKey","tokenizerFunc","tokenizerKey","prevTokenizer","hooksFunc","hooksKey","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","e_fn","origOpt","throwError","preprocess","all","postprocess","catch","t_fn","onError","message","msg","reject","markedInstance","marked","getDefaults","mangle","startsWith","email","mangledEmail","mangleEmail","random","slugger","headings","gfmHeadingId","prefix","headerIds","GithubSlugger","id","slug","_self","WorkerGlobalScope","self","Prism","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","Token","alias","isArray","o","objId","defineProperty","deepClone","visited","key","hasOwnProperty","v","getLanguage","m","className","parentElement","setLanguage","language","classList","add","err","stack","scripts","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","inside","before","insert","grammar","newToken","old","DFS","propertyType","plugins","highlightAll","highlightAllUnder","container","env","selector","run","elements","querySelectorAll","highlightElement","insertHighlightedCode","highlightedCode","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","callbacks","matchedStr","s","classes","aliases","matchPattern","pattern","pos","lookbehind","lookbehindLength","startNode","startPos","rematch","patterns","cause","patternObj","greedy","global","tail","reach","removeCount","to","p","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","newNode","addEventListener","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","string","cdata","namespace","entity","includedCdataInside","mathml","ssml","atom","rss","css","atrule","rule","keyword","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","parameter","constant","hashbang","interpolation","js","msMatchesSelector","webkitMatchesSelector","LOADING_MESSAGE","FAILURE_MESSAGE","status","FAILURE_EMPTY_MESSAGE","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","STATUS_FAILED","SELECTOR","loadFile","success","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","send","parseRange","range","Number","comma","end","extension","autoloader","loadLanguages","lines","max","fileHighlight","logged","char","macro","directive","expression","modName","cpp","generic","lua","json","null","webmanifest","python","decorator","builtin","inner","createInline","tableCell","tableLine","yaml","variable","bold","italic","strike","codeLang","codeBlock","cls","Date","valueOf","floor","ele","getElementById","tagPattern","KNOWN_ENTITY_NAMES","amp","lt","gt","quot","fromCodePoint","known","md","deepCompareStrict","a","typeofa","aKeys","bKeys","encodePointer","escapePointer","schemaArrayKeyword","prefixItems","allOf","anyOf","oneOf","schemaMapKeyword","$defs","definitions","properties","patternProperties","dependentSchemas","ignoredKeyword","$id","$ref","$schema","$anchor","$vocabulary","$comment","default","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","initialBaseURI","location","origin","URL","pathname","dereference","schema","lookup","baseURI","basePointer","hash","schemaURI","__absolute_uri__","__absolute_ref__","$recursiveRef","__absolute_recursive_ref__","keyBase","subSchema","subKey","DATE","DAYS","TIME","HOSTNAME","URIREF","URITEMPLATE","URL_","UUID","JSON_POINTER","JSON_POINTER_URI_FRAGMENT","RELATIVE_JSON_POINTER","FASTDATE","FASTTIME","FASTDATETIME","FASTURIREFERENCE","EMAIL","input","host","endsWith","every","part","IPV4","IPV6","DURATION","bind","fullFormat","date","time","date_time","duration","uri","$t","hostname","ipv4","ipv6","uuid","fastFormat","isLeapYear","year","month","day","full","hour","minute","second","timeZone","DATE_TIME_SEPARATOR","dateTime","NOT_URI_FRAGMENT","URI_PATTERN","Z_ANCHOR","ucs2length","result","charCode","validate","instance","draft","shortCircuit","recursiveAnchor","instanceLocation","schemaLocation","evaluated","valid","errors","keywordLocation","rawInstanceType","instanceType","$recursiveAnchor","$type","$const","$enum","$required","not","$not","$anyOf","$allOf","$oneOf","if","$if","$then","else","$else","$format","$properties","$patternProperties","additionalProperties","$additionalProperties","unevaluatedProperties","$unevaluatedProperties","$minProperties","$maxProperties","propertyNames","$propertyNames","dependentRequired","$dependentRequired","$dependentSchemas","dependencies","$dependencies","$prefixItems","$items","additionalItems","$additionalItems","unevaluatedItems","$unevaluatedItems","$contains","minContains","$minContains","maxContains","$maxContains","$minItems","$maxItems","$uniqueItems","$minimum","$maximum","$exclusiveMinimum","$exclusiveMaximum","$multipleOf","$minLength","$maxLength","$pattern","refSchema","ne","subEvaluateds","errorsLength","anyValid","subEvaluated","allValid","assign","thenResult","elseResult","subInstancePointer","dependantKey","propsOrSchema","thisEvaluated","stop","length2","contained","ao","MAX_SAFE_INTEGER","remainder","abs","Validator"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]}