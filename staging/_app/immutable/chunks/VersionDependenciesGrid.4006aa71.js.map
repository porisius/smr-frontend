{"version":3,"file":"VersionDependenciesGrid.4006aa71.js","sources":["../../../../../../src/lib/components/versions/VersionTargetSupportGrid.svelte","../../../../../../src/lib/components/versions/VersionDependenciesGrid.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { VersionTarget } from '$lib/generated';\n  import { Icon } from '@smui/common';\n  import DataTable, { Body, Row, Cell } from '@smui/data-table';\n\n  export let targets!: Pick<VersionTarget, 'targetName'>[];\n\n  function formatTooltip(found: boolean, selectedTarget: string) {\n    if (found) {\n      return `This version supports the ${selectedTarget} target`;\n    }\n\n    return `This version lacks files for the ${selectedTarget} target`;\n  }\n\n  const yesGlyph = 'checkmark';\n  const noGlyph = 'cancel';\n\n  $: HasWindows = targets.some((target) => target.targetName === 'Windows');\n  $: HasWindowsServer = targets.some((target) => target.targetName === 'WindowsServer');\n  $: HasLinuxServer = targets.some((target) => target.targetName === 'LinuxServer');\n  $: WindowsSupport = {\n    glyph: HasWindows ? yesGlyph : noGlyph,\n    tooltip: formatTooltip(HasWindows, 'Windows')\n  };\n  $: WindowsServerSupport = {\n    glyph: HasWindowsServer ? yesGlyph : noGlyph,\n    tooltip: formatTooltip(HasWindowsServer, 'Windows Server')\n  };\n  $: LinuxServerSupport = {\n    glyph: HasLinuxServer ? yesGlyph : noGlyph,\n    tooltip: formatTooltip(HasLinuxServer, 'Linux Server')\n  };\n</script>\n\n<div class=\"grid grid-flow-row\">\n  <DataTable\n    table$aria-label=\"Available Releases\"\n    class=\"max-w-auto\"\n    container$class=\"!overflow-visible\"\n    table$class=\"!overflow-visible\">\n    <Body>\n      <Row>\n        <Cell style=\"width: 20%;\" />\n        <Cell style=\"width: 40%;\"><div class=\"text-center\" title=\"Game client\">Client</div></Cell>\n        <Cell style=\"width: 40%;\"><div class=\"text-center\" title=\"Dedicated server\">Server</div></Cell>\n      </Row>\n      <Row>\n        <Cell>Windows</Cell>\n        <Cell\n          ><div class=\"text-center\">\n            <Icon class=\"material-icons text-center\" style=\"width: 20px\" title={WindowsSupport.tooltip}\n              >{WindowsSupport.glyph}</Icon>\n          </div></Cell>\n        <Cell\n          ><div class=\"text-center\">\n            <Icon class=\"material-icons text-center\" style=\"width: 20px\" title={WindowsServerSupport.tooltip}\n              >{WindowsServerSupport.glyph}</Icon>\n          </div></Cell>\n      </Row>\n      <Row>\n        <Cell>Linux</Cell>\n        <Cell\n          ><div class=\"text-center\" title=\"There is no Client distribution of Satisfactory for Linux\">N/A</div></Cell>\n        <Cell\n          ><div class=\"text-center\">\n            <Icon class=\"material-icons text-center\" style=\"width: 20px\" title={LinuxServerSupport.tooltip}\n              >{LinuxServerSupport.glyph}</Icon>\n          </div></Cell>\n      </Row>\n    </Body>\n  </DataTable>\n</div>\n","<script lang=\"ts\">\n  import { base } from '$app/paths';\n  import DataTable, { Body, Row, Cell } from '@smui/data-table';\n  import type { VersionDependency } from '$lib/generated';\n\n  export let dependencies!: Pick<VersionDependency, 'mod_id' | 'condition'>[];\n</script>\n\n<div class=\"grid grid-flow-row\">\n  <DataTable\n    table$aria-label=\"Mod Dependency\"\n    class=\"max-w-auto\"\n    container$class=\"!overflow-visible\"\n    table$class=\"!overflow-visible\">\n    <Body>\n      <Row>\n        <Cell>Mod Dependency</Cell>\n        <Cell><div class=\"text-center\">Version Range</div></Cell>\n      </Row>\n      {#if dependencies?.length === 0}\n        <Row>\n          <Cell><div class=\"text-center\">None</div></Cell>\n          <Cell><div class=\"text-center\">N/A</div></Cell>\n        </Row>\n      {:else}\n        {#each dependencies as dependency}\n          <Row>\n            <Cell>\n              <a\n                title=\"Click to view mod page\"\n                href={dependency.mod_id === 'SML' ? `${base}/sml-versions` : `${base}/mod/${dependency.mod_id}`}\n                class=\"text-yellow-500\"><u>{dependency.mod_id}</u></a>\n            </Cell>\n            <Cell><div class=\"text-center\">{dependency.condition}</div></Cell>\n          </Row>\n        {/each}\n      {/if}\n    </Body>\n  </DataTable>\n</div>\n"],"names":["insert_hydration_dev","target","div","anchor","t_value","ctx","glyph","dirty","set_data_dev","t","title","tooltip","icon_changes","yesGlyph","noGlyph","formatTooltip","found","selectedTarget","targets","$$props","$$invalidate","HasWindows","some","targetName","HasWindowsServer","HasLinuxServer","WindowsSupport","WindowsServerSupport","LinuxServerSupport","length","i","each_blocks","mod_id","base","a","append_hydration_dev","u","condition","dependencies"],"mappings":"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"}