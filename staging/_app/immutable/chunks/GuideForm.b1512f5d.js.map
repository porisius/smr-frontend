{"version":3,"file":"GuideForm.b1512f5d.js","sources":["../../../../../../src/lib/models/guides.ts","../../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { getTranslate } from '@tolgee/svelte';\n\n  export const { t } = getTranslate();\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = $t('entry.create');\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: guideSchema }), reporter],\n    onSubmit: (submitted: GuideData) => onSubmit(trimNonSchema(submitted, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label={$t('entry.name')} required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label={$t('entry.short-description')} required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.guide}\n          label={$t('guide')}\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>{$t('preview')}:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["guideSchema","zod.object","name","zod.string","min","max","short_description","guide","t_1_value","ctx","insert_hydration_dev","target","span","anchor","dirty","set_data_dev","t_1","div","innerHTML","raw_value","t6_value","label","textfield0_props","value","message","textfield1_props","textfield2_props","handle_promise","promise","markdown","info","form_1","append_hydration_dev","div6","div0","div1","div4","div2","div3","div5","textfield0_changes","textfield1_changes","textfield2_changes","current","t6","t","getTranslate","onSubmit","$$props","initialValues","submitText","$t","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","$$self","$$","not_equal","$data","preview"],"mappings":"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"}