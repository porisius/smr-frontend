{"version":3,"file":"SMLVersionForm-15b02f3d.js","sources":["../../../../../../src/lib/models/sml-versions.ts","../../../../../../src/lib/components/sml-versions/SMLVersionForm.svelte"],"sourcesContent":["import * as zod from 'zod';\nimport type { VersionStabilities } from '$lib/generated';\n\nexport type SMLArchData = {\n  id: string;\n  SMLVersionArchID: string;\n  platform: string;\n  link: string;\n};\n\nexport type SMLVersionData = {\n  version: string;\n  satisfactory_version: number;\n  bootstrap_version?: string;\n  stability: VersionStabilities;\n  link: string;\n  arch: SMLArchData[];\n  changelog: string;\n  date: string;\n};\n\nconst versionRegex =\n  /^(<=|<|>|>=|\\^)?(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\nexport const smlLinksSchema = zod.object({\n  id: zod.string(),\n  SMLVersionArchID: zod.string(),\n  platform: zod.string(),\n  link: zod.string().url()\n});\n\nexport const smlVersionSchema = zod.object({\n  version: zod.string().regex(versionRegex),\n  satisfactory_version: zod.number(),\n  bootstrap_version: zod.string().regex(versionRegex),\n  stability: zod.string(),\n  link: zod.string().url(),\n  arch: zod.array(smlLinksSchema),\n  changelog: zod.string(),\n  date: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { reporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import type { SMLVersionData } from '$lib/models/sml-versions';\n  import { smlVersionSchema } from '$lib/models/sml-versions';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n  import { VersionStabilities } from '$lib/generated';\n  import Select, { Option } from '@smui/select';\n\n  export let onSubmit: (data: SMLVersionData) => void;\n\n  export let editing = false;\n\n  export let initialValues: SMLVersionData = {\n    link: '',\n    bootstrap_version: '0.0.0',\n    date: '',\n    changelog: '',\n    satisfactory_version: 0,\n    stability: VersionStabilities.Alpha,\n    arch: [{ id: '', SMLVersionArchID: '', platform: '', link: '' }],\n    version: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<SMLVersionData>({\n    initialValues: initialValues,\n    extend: [validator({ schema: smlVersionSchema }), reporter],\n    onSubmit: (submitted: SMLVersionData) => onSubmit(trimNonSchema(submitted, smlVersionSchema))\n  });\n\n  const add = () => {\n    $data.arch = $data.arch.concat();\n  };\n\n  const remove = (i) => () => {\n    $data.arch = $data.arch.filter((_, index) => index != i);\n  };\n\n  $: preview = ($data.changelog as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.version} label=\"Version\" required />\n      <ValidationMessage for=\"version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.satisfactory_version} label=\"Satisfactory Version\" required type=\"number\" />\n      <ValidationMessage for=\"satisfactory_version\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    {#if $data.bootstrap_version !== '0.0.0'}\n      <div class=\"grid grid-flow-row gap-2\">\n        <Textfield bind:value={$data.bootstrap_version} label=\"Bootstrap Version\" required />\n        <ValidationMessage for=\"bootstrap_version\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n    {/if}\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Select bind:value={$data.stability} label=\"Stability\">\n        <Option value=\"alpha\">Alpha</Option>\n        <Option value=\"beta\">Beta</Option>\n        <Option value=\"release\">Release</Option>\n      </Select>\n      <ValidationMessage for=\"stability\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield\n          textarea\n          class=\"vertical-textarea\"\n          bind:value={$data.changelog}\n          label=\"Changelog\"\n          required\n          input$rows={10} />\n        <ValidationMessage for=\"changelog\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      {#each $data.arch as data_link, index}\n        <div class=\"gap-6 auto-rows-max\">\n          <Select bind:value={data_link.platform} label=\"Platform\">\n            <Option value=\"WindowsNoEditor\">Windows Client</Option>\n            <Option value=\"WindowsServer\">Windows Server</Option>\n            <Option value=\"LinuxServer\">Linux Server</Option>\n          </Select>\n\n          <Textfield\n            name={`data_link.link`}\n            placeholder=\"URL\"\n            bind:value={data_link.link}\n            style=\"min-width: 850px;\"\n            label=\"URL\" />\n          <ValidationMessage for=\"data_link.link\" let:messages={message}>\n            <span class=\"validation-message\">{message || ''}</span>\n          </ValidationMessage>\n\n          {#if !editing}\n            <Button type=\"button\" on:click={add}>Add</Button>\n            <Button type=\"button\" disabled={$data.arch.length == 1} on:click={remove(index)}>Remove</Button>\n          {/if}\n        </div>\n      {/each}\n\n      <Textfield bind:value={$data.link} label=\"Link\" />\n      <ValidationMessage for=\"link\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.date} label=\"Date and Time\" required />\n      <ValidationMessage for=\"date\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["versionRegex","smlLinksSchema","zod.object","id","zod.string","SMLVersionArchID","platform","link","url","smlVersionSchema","version","regex","satisfactory_version","zod.number","bootstrap_version","stability","arch","zod.array","changelog","date","t_value","ctx","insert_hydration","target","span","anchor","dirty","set_data","t","textfield_props","value","message","div","textfield_changes","innerHTML","raw_value","disabled","length","button1","$on","button1_changes","select_props","create_if_block","select_changes","textfield0_props","textfield1_props","create_if_block_1","textfield2_props","handle_promise","promise","markdown","info","each_value","i","textfield3_props","textfield4_props","form_1","append_hydration","div9","div0","div1","div2","div5","div3","div4","div6","div7","div8","textfield0_changes","textfield1_changes","textfield2_changes","each_blocks","textfield3_changes","textfield4_changes","onSubmit","$$props","editing","initialValues","VersionStabilities","Alpha","submitText","form","data","createForm","extend","validator","schema","reporter","submitted","trimNonSchema","add","set_store_value","$data","concat","remove","filter","_","index","$$self","$$","not_equal","data_link","preview"],"mappings":"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"}