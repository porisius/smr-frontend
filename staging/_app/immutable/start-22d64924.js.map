{"version":3,"mappings":"6eA8C6CA,EAAO,QAA3B,WAAW,6OAASA,EAAO,aAA3B,eAAW,IAAC,gSAVQA,EAAO,KAA3B,cAAW,oRAASA,EAAO,aAA3B,kDAAW,IAAC,iSAMUA,EAAO,KAA3B,cAAW,6OAASA,EAAO,aAA3B,eAAW,IAAC,gSAJQA,EAAO,QAA3B,WAAW,oRAASA,EAAO,aAA3B,kDAAW,IAAC,iSACSA,EAAO,QAA3B,WAAW,6OAASA,EAAO,WAA3B,iBAAW,IAAC,8TAFjC,YAAW,GAAC,gVAcZA,EAAS,wdADfC,EAIKC,8BAHCF,EAAS,2HACZA,EAAK,iBAALA,EAAK,wCAALA,EAAK,sFAjBJ,YAAW,GAAC,gCAcZA,EAAO,kSAAPA,EAAO,oLA5CAG,GAAMC,QACNC,GAAID,cAEJE,GAAUF,EACVG,WAAU,MAAIH,GACdI,UAAU,MAAIJ,EACd,WAAU,MAAIA,EAEzBK,GAAW,aAAcN,GAGzBO,GAAYP,EAAOE,KAAKM,MAEpB,QAAU,GACVC,EAAY,GACZC,EAAQ,KAEZC,UAAO,IACA,SAAcX,EAAOE,KAAKU,UAAS,KACpCC,GACHC,OAAY,EACZA,QAAQC,SAASL,OAAS,eAI5BI,kBAAU,IACHE,gPAhBLhB,EAAOE,KAAKe,IAAIf,iJCfb,SAAMgB,IAAW,CCEjB,EAAMf,GAAa,CACzB,IAAMgB,aAAO,uCAAkC,2jBAC/C,IAAMA,aAAO,8BAAoC,8EACjD,IAAMA,aAAO,0CAAqC,6QAClD,UAAMC,OAAO,yuBACb,IAAKD,MAACC,OAAO,0bACb,IAAKD,MAACC,OAAO,kqBACb,IAAKD,MAACC,OAAO,obACb,IAAKD,MAACC,OAAO,mgBACb,UAAMA,OAAO,6CAAwC,gWACrD,IAAKD,MAACC,OAAO,mDAA8C,6oBAC3D,IAAKD,MAACC,OAAO,4rBACb,YAAMA,OAAO,2CAAsC,wkBACnD,IAAMD,aAAO,yCAAoC,6YACjD,MAAMA,aAAO,oCAA+B,kxBAC5C,MAAMA,aAAO,+CAA0C,yrBACvD,MAAMA,aAAO,gDAA2C,05BACxD,MAAKA,MAACC,OAAO,m4BACb,YAAMA,OAAO,65BACb,YAAMA,OAAO,yyBACb,UAAMA,OAAO,oLACb,MAAMD,aAAO,yCAAoC,00BACjD,UAAMC,OAAO,8CAAyC,imBACtD,UAAMA,OAAO,4CAAuC,ipBACpD,IAAKD,MAACC,OAAO,mDAA8C,+RAC3D,UAAMA,OAAO,6CAAwC,qeACrD,IAAMD,aAAO,iDAA4C,2cACzD,IAAMA,aAAO,0CAAqC,6XAClD,IAAMA,aAAO,wCAAmC,oRAChD,IAAMA,aAAO,kDAA8C,o2BAG/CE,GAAa,CACzB,GAAI,CAAC,CAAC,EAAG,IAAK,CAAC,IACfC,MAAS,CAAC,CAAC,EAAG,GAAI,CAAC,CACnB,cAAY,CAAC,CAAC,EAAG,CAAI,GAAC,CACtBC,UAAU,CAAC,CAAC,EAAG,IAAK,CAAC,IACrBC,KAAQ,CAAC,CAAC,EAAG,IAAK,CAAC,CACnBC,QAAQ,CAAC,CAAC,EAAG,EAAK,GAAC,CACnB,eAAa,CAAC,CAAC,EAAG,IAAK,CAAC,IACxB,UAAW,CAAC,CAAC,EAAG,IAAK,CAAC,CACtB,oBAAkB,CAAC,CAAC,EAAG,EAAK,GAAC,CAC7BC,YAAY,CAAC,CAAC,EAAG,IAAK,CAAC,IACvB,eAAgB,CAAC,CAAC,EAAG,IAAK,CAAC,CAC3BC,SAAS,CAAC,CAAC,EAAG,EAAK,GAAC,CACpBC,OAAO,CAAC,CAAC,EAAG,IAAK,CAAC,IAClB,qBAAsB,CAAC,CAAC,EAAG,GAAI,CAAC,CAChC,2BAAyB,CAAC,CAAC,EAAG,CAAI,GAAC,CACnC,+BAA6B,CAAC,CAAC,EAAG,GAAI,CAAC,IACvC,yBAA0B,CAAC,CAAC,EAAG,GAAI,CAAC,CACpC,4CAA0C,CAAC,CAAC,EAAG,CAAI,GAAC,CACpD,qBAAmB,CAAC,CAAC,EAAG,IAAK,CAAC,IAC9B,cAAe,CAAC,CAAC,EAAG,IAAK,CAAC,CAC1B,mBAAiB,CAAC,CAAC,EAAG,EAAK,GAAC,CAC5B,0BAAwB,CAAC,CAAC,EAAG,GAAI,CAAC,IAClC,mBAAoB,CAAC,CAAC,EAAG,IAAK,CAAC,CAC/B,6BAA2B,CAAC,CAAC,EAAG,EAAK,GAAC,CACtC,qCAAmC,CAAC,CAAC,EAAG,IAAK,CAAC,IAC9C,uCAAwC,CAAC,CAAC,EAAG,IAAK,CAAC,CACnD,0CAAwC,CAAC,CAAC,EAAG,EAAK,GAAC,CClDpD,gBAA2BC,EAC1B,OAAOA,aAAeC,QACpBD,GAA0B,EAAME,MAA2B,EAAMC,QACpE,EACI,GAAIF,OAAMG,KAAKC,UAAUL,IAO7B,YAAmBM,GAGlB,GAAIA,EAAOC,YACV,KAAM,IAAIN,OACT,2HAKF,GAAI,UAAYK,GACf,KAAM,IAAIL,OAAM,oDAGjB,KAAMO,GACLF,EAAOG,QAAUH,EAAOG,QAAU,KAAOH,EAAOG,QAAU,MAAQH,EAAOI,SAC1E,GAAIJ,EAAOK,OAASH,EAAkB,CACrC,KAAMC,GAASH,EAAOG,OAEtB,GAAKH,GAAOK,OAASH,EACpB,MAAO,CAAEC,OAAQA,GAAU,IAAKE,MAAO,GAAIV,QAG5C,KAAMU,GAAeL,SAAOK,OAAU,SAAW,GAAIV,OAAMK,EAAOK,KAASL,IAAOK,MAElF,MAAMA,aAAiBV,OASlBQ,IAAUA,EAAS,KAAOA,EAAS,IACvCG,SAAQC,KAAK,qFACN,CAAEJ,OAAQ,IAAKE,UAGhB,CAAEF,SAAQE,SAbT,CACNF,OAAQ,IACRE,MAAO,GAAIV,OACV,+FAAsGU,cAa1G,GAAIL,EAAOI,SAAU,CACpB,IAAKJ,EAAOG,QAAUK,KAAKC,MAAMT,EAAOG,OAAS,OAAS,EACzD,KAAM,IAAIR,OACT,qFAIF,GAAWK,SAAOI,UAAa,SAC9B,KAAM,IAAIT,OAAM,2DAIlB,KAAIK,EAAOU,cAERC,QAAMC,QAAQZ,EAAOU,eACtBV,EAAOU,aAAaG,KAAMC,GAAeA,UAAQ,WAEjD,KAAM,IAAInB,OAAM,yEAKlB,GAAuB,EAASoB,QAC/B,KAAM,IAAIpB,OACT,0HACC,EAIH,QAOD,aAAwBqB,EAAMC,GAC7B,MAAID,KAAS,KAAOC,IAAmB,SAAiBD,EAEpDC,IAAmB,QACfD,EAAKE,SAAS,KAAOF,EAAKG,MAAM,MAASH,EACtCC,IAAmB,UAAaD,GAAKE,SAAS,KACjDF,EAAO,IAGRA,EAGR,MAAMI,UAAgBC,IAEjBC,YACH,KAAM,IAAI3B,OACT,6HAMH,YAAsB4B,GACrB,GAAIC,GAAUD,EAAIC,QAElB,IAAKA,EAAS,CACb,KAAMC,GAAWF,EAAIG,qBAAqB,QAC1CF,EAAUC,EAASE,OAASF,EAAS,GAAGG,KAAOL,EAAIF,IAGpD,MAAOG,EAGR,cACC,OAAO,CACNK,EAAGC,YACHC,EAAGC,aAKL,YAAqBC,GAIpB,MAHaA,GACXC,aACAC,OAAMC,GAAMA,YAAaC,OAAQD,EAAEE,SAASC,gBAAkB,GAChE,EAID,YAAkBC,EACjB,OAAOA,aAAgBC,aACpB,GAAIpB,KAAImB,EAAKZ,KAAKc,QAAS9D,SAAS4C,SACpC,GAAIH,KAAImB,EAAKZ,IAIjB,cAA0Be,GACzB,KAAMC,GAAQC,GAASF,CACvB,KAAIG,GAAQ,GAEZ,YACCA,GAAQ,GACRF,EAAMG,OAAQC,GAAQA,CAIvB,aAAaC,EACZH,GAAQ,GACRF,EAAM9D,IAAImE,CAIX,aAAmBC,GAElB,GAAIC,GACJ,MAAOP,GAAMnE,UAAWwE,IACvB,CAAIE,IAAcC,QAAcN,GAASG,IAAcE,IACtDD,EAAKC,EAAYF,KAKpB,MAAO,CAAE5E,SAAQS,IAAKL,eAGvB,aACC,OAAMK,IAAEA,EAAGL,UAAEA,GAAcoE,GAAS,IAK9BQ,EAAU,gBAGhB,GAAIC,GAEJC,kBAAeC,CAGdC,aAAaH,CAIb,EAEA,KAAMI,GAAYC,YAAM,GAAGC,uBAAkB,CAC5CC,QAAS,CACRC,OAAQ,WACR,gBAAiB,UAInB,OAAIJ,EAAIK,GAAI,CACX,KAAMC,SAAEA,GAAkBN,QAAIO,OACxBC,EAAUF,IAAYX,EAE5B,MAAIa,IACHpF,GAAI,EACJ2E,eAAaH,IAGPY,MAEP,MAAM,IAAIvE,OAAM,yBAAyB+D,EAAIvD,UAM/C,MAAO,CACN1B,YACA+E,MAQF,eAAcb,EACb,IAAIrB,GAAO,KACP6C,EAAIxB,EAAMhB,OAEd,GAAWgB,UAAU,SACpB,KAAOwB,GAAG7C,EAAQA,EAAO,GAAMqB,EAAMyB,WAAaD,SAElD,MAAOA,GAAG7C,EAAQA,EAAO,GAAMqB,IAAQwB,GAGxC,MAAQ7C,KAAS,GAAG+C,SAAS,EAK9B,OAAMC,IAAeC,OAAOZ,MAuC5B,YAAuBa,EAAUC,GAGhC,GAAIC,GAAW,6DAFH5E,KAAKC,gBAAiByE,IAAa,SAAWA,EAAWA,EAASG,QAI9E,CAAIF,EAAeA,SAAKG,MAAS,UAChCF,IAAY,2BAA2BpD,GAAKmD,EAAKG,WAGlD,KAAMC,GAASjG,SAASkG,cAAcJ,GACtC,GAAIG,GAAUA,EAAOE,YAAa,CACjC,KAAMH,MAAEA,KAASI,GAASlF,KAAKmF,MAAMJ,EAAOE,aAC5C,MAAOG,SAAQC,QAAQ,GAAIC,UAASR,EAAMI,CAG3C,SAAOV,IAAaE,EAAUC,GAG/B,KAAMY,IAAgB,8BAGtB,YAAwBC,EAEvB,MAAMC,GAAQ,GAGRC,EAAQ,GAId,GAAIC,GAAqB,GA4DzB,MAAO,CAAEC,QAzDRJ,IAAO,GACJ,OACA,GAAIK,QACJ,IAAIC,mBAAmBN,GACrBO,MAAM,8BACNC,MAAI,CAACC,EAAS5B,EAAG6B,IAEjB,MAAMC,GAAQ,+BAA+BC,KAAKH,GAClD,GAAIE,EACHV,SAAMY,KAAKF,EAAM,IACjBT,EAAMW,KAAKF,EAAM,EACjB,EAAO,aAGR,KAAMG,GAAUjC,IAAM6B,EAASrE,OAAS,EAExC,MACCoE,IACA,IACCA,EACEF,MAAM,aACNC,IAAI,CAACO,EAASlC,IACd,IAAIA,EAAI,EAAG,CACV,KAAS,IAAMvE,EAAM0G,GACpBjB,GAAca,KAAKG,GAEpBd,SAAMY,KAAKvG,GACX4F,EAAMW,KAAKG,GACJC,EAAO,QAAU,WAGzB,MAAIH,IAAWC,EAAQG,SAAS,MAAMf,GAAqB,IAG1DY,EACEI,UAIAC,UAAQ,UAAW,GACnBA,UAAQ,UAAW,KAKnBA,QAAQ,KAAM,OACdA,QAAQ,MAAO,OAEfA,QAAQ,sBAAuB,MAGlCC,SAAK,MAGTA,KAAK,MAAMlB,EAAqB,KAAO,OAG3BF,MAAOC,WAS1B,YAAcS,EAAOV,EAAOC,EAAOzG,GAElC,KAAM6H,GAAS,CAEf,SAASzC,GAAI,EAAGA,EAAIoB,EAAM5D,OAAQwC,GAAK,EAAG,CACzC,KAAMvE,GAAO2F,EAAMpB,GACbmC,EAAOd,EAAMrB,GACbxB,EAAQsD,EAAM9B,EAAI,IAAM,GAE9B,GAAImC,EAAM,CACT,KAAMO,GAAU9H,EAASuH,GACzB,GAAKO,GAAS,KAAM,IAAIlH,OAAM,YAAY2G,oBAE1C,IAAKO,EAAQlE,GAAQ,MAGtBiE,GAAOhH,GAAQ+C,CAGhB,OAAOiE,GASR,YAAe5I,EAAYkB,EAAYH,GAiBtC,MAhBe+H,QAAOC,QAAQ7H,GAAY4G,IAAI,EAAER,GAAK0B,EAAGC,EAAGC,MAC1D,OAAMxB,QAAEA,EAAOH,MAAEA,EAAKC,MAAEA,GAAU2B,GAAe7B,CAEjD,QAAO,CACNA,KAEAY,KAAOlF,GACN,MAAMiF,GAAQP,EAAQQ,KAAKlF,CAC3B,KAAIiF,EAAO,MAAOC,IAAKD,EAAOV,EAAOC,EAAOzG,CAE7CiI,KAAGA,EAAElB,IAAKsB,GAAMpJ,EAAWoJ,IAC3BH,EAAGA,EAAEnB,IAAKsB,GAAMpJ,EAAWoJ,IAC3BF,WAAcA,MAITG,CAGR,KAAMC,IAAa,mBACbC,EAAY,kBAEZF,GAASpC,GAAMjH,GAAYkB,GAAYH,IAIvCyI,GAAiBxJ,GAAW,KAC5ByJ,GAAgBzJ,GAAW,GAEjC,EAAM0J,GAAa,CASnB,KAAIC,IAAmB,CACvB,MACCA,GAAmB7H,KAAKmF,MAAM2C,eAAeN,UAC5C,EAKF,YAAiCO,EAChCF,IAAiBE,GAASC,GAY3B,cAAuBlK,QAAEA,EAAMmK,QAAEA,EAAOC,KAAEA,EAAI/G,eAAEA,IAE/C,KAAMgH,GAAQ,GAAIC,KAGZC,EAAc,GAEdtK,EAAS,CACd8G,IAAKyD,GAAiB,CACtBrK,QAAMqK,GAAiB,CACvBC,cAAYxF,GAAQ,IACpBkF,UAASlF,GAASkF,CAClB7D,UAASoE,GAIV,GAAMC,EAAa,CAClBjD,GAAI,KACJkD,QAAS,MAGJC,EAAY,CAEjBC,gBAAiB,GAGjBC,eAAgB,IAIjB,GAAIC,GAAU,CACbC,OAAQ,CACRxI,QAAO,KACPyI,WAAY,EACZC,MAAOrB,GAEP/C,IAAK,MAGFqE,EAAU,GACVC,EAAa,GACbC,EAAW,GACXJ,EAAa,EAGbK,EAAe,KAGfC,GAGAC,GAEAvG,GAAQ,GACZjF,EAAOkK,QAAQtJ,UAAU8E,KAAOZ,KAG/B,CAFA0G,EAAW1G,EAENG,IACLgG,IAAc,EAEd/F,GAAO,GAAI1B,KAAIiI,SAAS1H,IAAO,KAAI,EAEpCkB,QAAQ,GAER,GAAIyG,GAAiB,GAGjBC,EAAwBC,QAAQC,QAAQnC,GAE5C,CAAKiC,EAGJA,GAAwBG,KAAKC,IAG7BH,UAAQI,aACP,CAAKJ,WAAQC,MAAOnC,CAACA,GAAYiC,CACjC,KACAF,SAAS1H,OAMX,KAAMkI,IAASnC,GAAiB6B,GAChC,CAAIM,GACHL,SAAQM,kBAAoB,SAC5BC,SAASF,GAAOjI,EAAGiI,GAAO/H,CAG3B,MAAIkI,IAAkB,GAGlBlM,GAGAmM,GAOJ3G,kBACCoB,GACAwF,SAAEA,EAAW,GAAKN,aAAEA,EAAe,GAAKO,UAAEA,EAAY,GAAKV,MAAEA,EAAQ,IACrEW,GAMA,GAJW1F,UAAQ,UAClBA,GAAM,GAAItD,KAAIsD,EAAK2F,GAAa1L,YAG7B2K,EACH,MAAOgB,IAAS,CACf5F,IACAmF,SAAQK,EAAWrC,KAAiB,KACpCsC,UACAC,mBACAG,QAAS,CACRd,QACAG,aAEDY,YAAU,OACVC,QAAS,cAILC,GAAkBhG,CAIzBpB,oBAAwBoB,GACvB,KAAMiG,GAASC,GAAsBlG,CAErC,MAAKiG,EACJ,KAAM,IAAIjL,OAAM,gEAGjB4I,SAAWC,QAAUsC,GAAWF,EAAQ,IACxCrC,EAAWjD,GAAKsF,EAAOtF,GAEhBiD,EAAWC,OAWnBjF,mBAAsBoB,EAAK0F,EAAgBU,EAAUtG,EAAMuG,EAC1D,MAAMJ,GAASC,GAAsBlG,GAE/BsG,EAAiBf,GAAQ,GAC/B,GAAIgB,GAAoBN,GAAiBE,SAAWF,EAAQG,CAE5D,EAkBA,GAlBA,CACEG,GACDvG,EAAIwG,SAAW7B,SAAS6B,QACxBxG,EAAIyG,WAAa9B,SAAS8B,UAO1BF,QAA0BG,GAAqB,CAC9ClL,OAAQ,IACRE,MAAO,GAAIV,OAAM,cAAcgF,EAAIyG,YACnCzG,IACA2G,UAAS,QAINJ,GACEP,eAAkBhG,GACjB,GAIR,GAAIuF,KAAUe,EAAe,MAAO,GAIpC,GAFA9C,EAAYxG,OAAS,EAEjBuJ,EAAkB9K,SACrB,GAAIiK,EAAe1I,OAAS,IAAM0I,EAAe7D,SAAS7B,EAAIyG,QAAW,EACxEF,OAA0BG,GAAqB,CAC9ClL,OAAQ,IACRE,MAAO,GAAIV,OAAM,iBACjBgF,IACA2G,UAAS,IAEJ,OACN,OAAI/B,GACHgC,GAAK,GAAIlK,KAAI6J,EAAkB9K,SAAUuE,GAAK/C,KAAM,GAAI,IACpDyI,EACH1F,EAAIyG,QAEC,QACAT,GAAkB,GAAItJ,KAAI6J,EAAkB9K,SAAUkJ,SAAS1H,IAGtE,GAAO,OAEF,CAAIsJ,EAAkBM,OAAOzN,MAAMoC,QAAU,KAC7BtC,QAAOqG,QAAQV,SACxB,KACNmH,GAAkBhG,GAM1B,GAFAuE,EAAW,GAEPzE,GAAQA,EAAK+F,QAAS,CACzB,MAAMA,QAAEA,GAAY/F,EACdgH,EAASjB,EAAQX,aAAe,EAAI,EAC1CW,EAAQd,MAAMnC,GAAaiC,GAAyBiC,EACpDhC,QAAQe,EAAQX,aAAe,eAAiB,aAAaW,EAAQd,MAAO,GAAI/E,CAGjF,EAaA,GAbA,CAAIqE,CACHJ,GAAUsC,EAAkBxB,MAExBwB,EAAkBM,MAAMzN,MAC3BmN,GAAkBM,MAAMzN,KAAK4G,IAAMA,GAGpCyE,GAAKsC,KAAKR,EAAkBM,QAE5BG,GAAWT,GAIRzG,EAAM,CACT,MAAMqF,OAAEA,EAAMM,UAAEA,GAAc3F,EAE9B,IAAK2F,EAAW,CAMf,KAAMhB,GAAOxK,SAASgG,KAChBgH,EAAWxC,EAAKyC,aAAa,YAEnCzC,EAAK0C,YACL1C,EAAK2C,MAAM,CAAEC,cAAe,EAE5BC,cAAW,KACVC,aAAgBC,uBAIjB,CAAIP,GAAa,KAChBxC,EAAKgD,aAAa,WAAYR,GAE9BxC,EAAKiD,gBAAgB,UAKjBC,EAEN,GAFMA,WAEFrD,EAAY,CACf,KAAMsD,GAAc5H,EAAIrD,MAAQ1C,SAAS4N,eAAe7H,EAAIrD,KAAKH,MAAM,IACvE,CAAI2I,CACHE,SAASF,EAAOjI,EAAGiI,EAAO/H,GACpB,CAAIwK,CAIVA,EAAYE,iBAEZzC,SAAS,EAAG,CAGR,aAEAsC,MAGP/D,EAAWC,QAAU,KACrBD,EAAWjD,GAAK,KAChB2D,EAAa,GAETiC,EAAkBM,MAAMzN,MAC3BA,IAAOmN,EAAkBM,MAAMzN,MAIhCwL,EAAiBmD,CADCxB,CAAkBxB,MAAMb,OAAOqC,EAAkBxB,MAAMb,OAAOlH,OAAS,IAC7DgL,OAAOC,SAAW,GAE1C5B,GAAUA,EAEd9B,IAAW,GAIZ,YAAoB2D,EACnBjE,GAAUiE,EAAOnD,MAEjB,KAAMoD,GAAQlO,SAASkG,cAAc,yBAWrC,GAVIgI,GAAOA,EAAMC,SAEjBhP,GAAO8O,EAAOrB,MAAMzN,KAEpBqL,GAAO,GAAI4D,IAAK,CACfpP,OACA4N,QAAO,IAAKqB,EAAOrB,MAAO3N,UAC1BoP,QAAS,KAGN1D,EAAgB,CACnB,KAAM2D,GAAa,CAAEC,KAAM,KAAMC,GAAI,GAAI/L,KAAIiI,SAAS1H,OACtD6G,EAAUE,eAAe0E,QAASC,GAAOA,EAAGJ,IAG7ClE,EAAU,GAeXzF,kBAAiDoB,KAChDA,EAAGiC,OACHA,EAAMmC,MACNA,EAAKF,OACLA,EAAM1I,OACNA,EAAME,MACNA,EAAKiL,QACLA,IAEA,KAAMiC,GAA2D1E,EAAO2E,OAAOC,SAIzEZ,EAAS,CACdzM,SAAUA,CAJMmN,CAASpL,KAAMuL,GAAMA,EAAE1N,QAAQI,WAI3BJ,QAAQI,SAC5BsJ,MAAO,CACN/E,MACAiC,SACAiC,OACAxI,UACA0I,QACAD,WAED0C,SAAO,CACNxN,WAAYuP,EAASzH,IAAKtD,GAASA,EAAKmK,OAAOgB,WAIjD,OAASxJ,GAAI,EAAGA,EAAIoJ,EAAS5L,OAAQwC,GAAK,EAAG,CAC5C,KAAMnE,GAASuN,EAASpJ,GAAGnE,OAC3B6M,EAAOrB,MAAM,SAASrH,KAAOnE,OAAeA,GAAOwL,MAAQ,KAS5D,GANMoC,CACJhF,EAAQjE,KACTA,EAAI/C,OAASgH,EAAQjE,IAAI/C,MACzBgH,EAAQvI,QAAUA,GAClBuI,EAAQG,QAAUA,EAED,CACjB8D,EAAOrB,MAAMzN,KAAO,CAAEsC,QAAOuG,SAAQ0E,QAASnL,WAAQ4I,QAAOpE,IAO7D,QAAMkJ,GAAc,CAACC,EAAUC,IAC9BjH,QAAOkH,eAAenB,EAAOrB,MAAMzN,KAAM+P,EAAU,CAClDG,IAAK,KACJ,KAAM,IAAItO,OAAM,SAASmO,oCAA2CC,SAKvEF,EAAY,SAAU,UACtBA,EAAY,OAAQ,UACpBA,IAAY,QAAS,cAGtB,EACA,KAAMtF,GAAa2F,CADNX,CAASA,EAAS5L,OAAS,IACf3B,QAAQiI,MAEjC,GAAIM,EAAY,CACf,KAAM4F,GAAMxJ,EAAIyG,SAAWzG,EAAIyJ,OAC/B,GAAItL,GAAQ,GAEZ,KAAMuL,GAAQ,IACb,EAAIpG,CAAMgG,IAAIE,KAAStB,GACtB5E,EAAMqG,OAAOH,GAGdtP,IACA4E,aAAaH,IAGRA,EAAU2I,WAAWoC,EAAO9F,EAAWgG,OAAS,KAEhD1P,EAAchB,EAAOkK,QAAQtJ,UAAU,KAC5C,CAAIqE,EAAOuL,MAGZvL,EAAQ,GAERmF,EAAMnJ,IAAIqP,EAAKtB,CAGhB,QAAOA,GAeRtJ,iBAAeiL,CAAUrO,OAAEA,EAAME,MAAEA,EAAKsM,OAAEA,EAAMhI,IAAEA,EAAGiC,OAAEA,EAAMmC,MAAEA,EAAKyC,MAAEA,EAAKF,QAAEA,IAE5E,KAAM9I,GAAO,CACZmK,OACA8B,OAAM,CACL7H,OAAQ,GAAI8H,KACZ/J,IAAK,GACLoD,QAAS,GACTgB,MAAO,GACPrI,aAAc,GAAIgO,MAEnB1O,OAAQ,KACR+I,SAID,WAAwBjI,GACvB,KAAMc,MAAEA,GAAS,GAAIP,KAAIP,EAAK6D,GAC9BnC,EAAKiM,KAAK/N,aAAaiO,IAAI/M,GAG5B,CAAI4J,EAEHhJ,EAAKiM,KAAK/N,aAAaiO,IAAIhK,EAAI/C,MAIhC,KAAMgN,GAAc,CACpB,WAAWT,KAAOvH,GACjBE,OAAOkH,eAAeY,EAAaT,EAAK,CACvCF,KACCzL,UAAKiM,KAAK7H,OAAO+H,IAAIR,CACrB,EAAOvH,EAAOuH,EAEfU,aAAY,EAId,QAAM9G,GAAUsB,GACVyF,EAAW,GAAI1N,IAAQuD,CAE7B,KAAIgI,EAAOoC,KAAM,CAEhB,KAAMC,GAAa,CAClB1D,QACA1E,SAAQgI,EACRpD,MAAOA,GAAS,CACZ7G,YACHnC,SAAKiM,KAAK9J,IAAM,GACTmK,GAEJ/G,GACHvF,oBAAKiM,KAAK1G,QAAU,GACbA,CAEJgB,cACHvG,SAAKiM,KAAK1F,MAAQ,GACX,CAAKA,OAEbxF,YAAYiB,EAAUQ,GACrB,GAAIiK,GAEJ,MAAWzK,IAAa,SACvByK,EAAYzK,EAEZyK,GAAYzK,EAASG,IAIrBK,EAAO,CAGNJ,KACCJ,EAAS0K,SAAW,OAAS1K,EAAS0K,SAAW,OAC9C9L,OACMoB,QAAS2K,OACnBlH,MAAOzD,EAASyD,MAChBmH,YAAa5K,EAAS4K,YACtBvL,QAASW,EAASX,QAClBwL,UAAW7K,EAAS6K,UACpBC,UAAW9K,EAAS8K,UACpBJ,OAAQ1K,EAAS0K,OACjBK,KAAM/K,EAAS+K,KACfnP,SAAUoE,EAASpE,SACnBoP,SAAUhL,EAASgL,SACnBC,eAAgBjL,EAASiL,eACzBC,OAAQlL,EAASkL,OACd1K,OAKL,KAAM2K,GAAa,GAAItO,KAAI4N,EAAWtK,CAAK/C,OAC3CgO,SAAeD,CAGf,EAAO3G,EAAU1E,GAAaqL,EAAY3K,GAAQ6K,GAAcZ,EAAWjK,CAE5E7E,UAAQA,GAAU,KAClBE,MAAOA,GAAS,MAYjB,GAAIL,GAaJ,GAHCA,EAAe2M,QAAOoC,KAAKe,KAAK,KAAMd,GAGlChP,GACJ,KAAM,IAAIL,OAAM,qCAGjB6C,EAAKxC,OAASyG,GAAUzG,CACxB,EAAIwC,EAAKxC,OAAO+I,OAAOvG,GAAKuG,MAAQvG,EAAKxC,OAAO+I,OAC5CvG,EAAKxC,OAAOU,cACf8B,EAAKxC,OAAOU,aAAa2M,QAAQuC,CAE5B,OAAIpE,GACVhJ,GAAKxC,OAASyG,GAAU,CAAE+E,WAG3B,MAAOhJ,EAORe,mBAA0B+B,IAAEA,EAAEX,IAAEA,EAAGiC,OAAEA,EAAMmJ,MAAEA,GAAShF,GACrD,GAAIxC,EAAWjD,KAAOA,GAAMiD,EAAWC,QACtC,MAAOD,GAAWC,QAGnB,IAAKuC,EAAU,CACd,KAAMiF,GAAS/H,EAAMgG,IAAI3I,GACzB,GAAI0K,EAAQ,MAAOA,EAGpB,OAAMhJ,EAAEA,EAACC,EAAEA,EAACC,WAAEA,GAAe6I,EAEvBE,EAAUrH,EAAQjE,KAAO,CAC9BA,IAAKW,IAAOsD,EAAQjE,IAAIyG,SAAWxC,EAAQjE,IAAIyJ,OAC/CxH,OAAQE,OAAOoJ,KAAKtJ,GAAQ4G,OAAQW,GAAQvF,EAAQhC,OAAOuH,KAASvH,EAAOuH,EAC3EpG,UAASe,IAAeF,EAAQE,YAIjC,GAAID,GAAS,GAGTE,EAAQrB,GACRyI,EAAgB,GAGhBhQ,EAAS,IAGTE,EAAQ,KAKZ2G,EAAEqG,QAAS+C,GAAWA,IAASC,MAAM,SAErCtB,EAAM,OAAS5K,GAAI,EAAGA,EAAI6C,EAAErF,OAAQwC,GAAK,EAAG,CAE3C,GAAI3B,GAEJ,GACC,KAAKwE,EAAE7C,GAAI,SAEX,KAAMwI,GAAe3F,QAAE7C,GACvB,EAAMmM,EAAW1H,EAAQC,OAAO1E,GAWhC,IAREmM,GACD3D,IAAW2D,EAAS3D,QACnBsD,EAAQtL,KAAO2L,EAAS7B,KAAK9J,KAC9BsL,EAAQrJ,OAAO/F,KAAM0P,GAAUD,EAAS7B,KAAK7H,OAAO4J,IAAID,KACvDN,EAAQlI,SAAWuI,EAAS7B,KAAK1G,SAClCpH,MAAMwM,KAAKmD,EAAS7B,KAAK/N,cAAcG,KAAMC,GAAQqH,EAAYtH,KAAMyM,IAAOA,GAAGxM,CAChFqP,QAAiBG,EAAS7B,KAAK1F,MAEF,CAE9B,GAAIyC,GAAQ,CAEZ,OAAMiF,IAAiBvJ,GAAc/C,IAAM6C,EAAErF,OAAS,EAEtD,GAAI8O,GAAgB,CACnB,KAAM/M,QAAYY,IACjB,GAAGK,EAAIyG,WAAWzG,EAAIyG,SAASlK,SAAS,KAAO,GAAK,iBAAiByD,EAAIyJ,SACzE,CACCvK,QAAS,CACR,mBAAoB,UAKvB,GAAIH,EAAIK,GAAI,CACX,KAAM3D,IAAWsD,EAAIG,QAAQoK,IAAI,wBAEjC,GAAI7N,GACH,MAAO,CACNA,SACAoL,SAAO,GACP9B,MAAOd,GAIT4C,EAAQ9H,EAAIvD,SAAW,IAAM,QAAWuD,GAAIO,KACtC,OACN9D,EAASuD,EAAIvD,OACb,GACCE,QAAcqD,GAAIO,YACjB,CACD5D,EAAQ,GAAIV,OAAM,yBAgBrB,GAXKU,GACJmC,GAAagM,QAAU,CACtB7B,OACAhI,QACAiC,OACA4E,UACAzC,QACAuC,QAASyE,EAAMzK,EAIjB,IAAI9C,GACCiO,KACHjO,GAAKiM,KAAK9J,IAAM,IAGbnC,EAAKxC,QAAQ,CAMhB,GALIwC,EAAKxC,OAAOK,OACfF,GAASqC,EAAKxC,OAAOG,OACrBE,EAAQmC,EAAKxC,OAAOK,OAGjBmC,EAAKxC,OAAOI,SACf,MAAO,CACNA,SAAUoC,EAAKxC,OAAOI,SACtBoL,MAAO,CACP9B,QAAOd,CAIT,GAAIpG,CAAKxC,OAAO+I,OACfoH,GAAgB,SAKnB3N,GAAO8N,QAEAlO,EAAP,CACDjC,EAAS,IACTE,EAAQqQ,GAAkBtO,GAG3B,GAAI/B,EAAO,CACV,KAAO8D,KACN,GAAI8C,EAAE9C,GAAI,CACT,GAAIwM,GAGAC,EACAC,EAAI1M,EACR,KAASyM,IAAc/H,EAAOgI,KAC7BA,GAAK,EAGN,GACCF,CAUA,GAVAA,OAAqBnC,GAAU,CAC9BrO,SACAE,QACAsM,OAAc1F,QAAE9C,KAChBQ,IACAiC,WACAmC,MAAO6H,EAAY7H,MACnBuC,QAASyE,EAAMzK,EAGhB,GAAIqL,GAAc3Q,QAAQK,MACzB,SAGD,CAAIsQ,EAAc3Q,QAAQ+I,OACzBA,GAAQ,IACJA,EACA4H,KAAa3Q,OAAO+I,QAIzBF,EAASA,EAAO1H,MAAM,EAAG0P,EAAI,GAAGC,OAAOH,GACvC,OAAM5B,MACL,CACD,UAKH,YAAa1D,GAAqB,CACjClL,SACAE,MACAsE,QACA2G,QAASyE,EAAMzK,SAGhB,CAAI9C,GAAMxC,QAAQ+I,OACjBA,GAAQ,CACJA,QACAvG,EAAKxC,OAAO+I,QAIjBF,EAAO1C,KAAK3D,GAId,YAAauO,IAAkC,CAC9CpM,IACAiC,WACAmC,QACAF,OACA1I,WACAE,MACAiL,UAASyE,EAAMzK,EAYjB/B,oBAAoCpD,QAAEA,EAAME,MAAEA,EAAKsE,IAAEA,EAAG2G,QAAEA,IAEzD,KAAM1E,GAAS,CAEf,EAAMoK,OAAoBxC,GAAU,CACnC7B,OAAcnF,SACd7C,MACAiC,OACAmC,QAAO,CACPuC,cAGK2F,EAAmBzC,QAAU,CAClCrO,OACAE,UACAsM,YAAclF,IACd9C,MACAiC,OACAmC,QAAQiI,GAAeA,EAAYhR,QAAUgR,EAAYhR,OAAO+I,OAAU,CAC1EuC,cAGD,MAAayF,UAAkC,CAC9CpM,IACAiC,WACAmC,MAAO,CACHiI,MAAahR,QAAQ+I,MACrBkI,MAAYjR,QAAQ+I,OAExBF,OAAQ,CAACmI,EAAaC,CACtB9Q,WACAE,QACAiL,QAKF,gBAA+B3G,GAC9B,GAAIA,EAAIwG,SAAW7B,SAAS6B,QAAWxG,GAAIyG,SAAS8F,WAAWlJ,GAAO,OAEtE,KAAMhH,GAAOmQ,UAAUxM,EAAIyG,SAASjK,MAAM6G,EAAKrG,MAAW,QAE1D,SAAWoO,KAAS1I,IAAQ,CAC3B,KAAMT,GAASmJ,EAAM7J,KAAKlF,CAE1B,KAAI4F,EASH,MAPe,CACdtB,GAAIX,EAAIyG,SAAWzG,EAAIyJ,OACvB2B,MACAnJ,WACAjC,MAGMiG,EAmBVrH,kBAAwBoB,KAAEA,EAAGmF,OAAEA,EAAMM,UAAEA,EAASC,eAAEA,EAAcG,QAAEA,EAAOC,SAAEA,EAAQC,QAAEA,IACpF,KAAMyC,GAAOvE,EAAQjE,IACrB,GAAIyM,GAAe,GAEnB,KAAMlE,GAAa,CAClBC,OACAC,GAAIzI,EACJ0M,OAAQ,IAAOD,EAAe,EAG/B3I,EAEA,GAFAA,EAAUC,gBAAgB2E,QAASC,GAAOA,EAAGJ,IAEzCkE,EAAc,CACjB1G,IACA,MAGD,MAAMU,GAAWkG,GAAe3M,EAAIyG,SAAUnK,GACxC0O,EAAa,GAAItO,KAAIsD,EAAIwG,OAASC,EAAWzG,EAAIyJ,OAASzJ,EAAIrD,MAEpEiQ,GAAwB/H,GAExBiB,IAEIzB,GACHnL,EAAOwK,WAAWvJ,IAAI,CACrBqO,KAAMvE,EAAQjE,IACdyI,GAAIuC,SAIA5M,IACL4M,EACAtF,EACA,GACA,CACCP,SACAM,UACAI,aAED,KACC,KAAM0C,GAAa,CAAEC,KAAMC,KAAIuC,CAC/BlH,IAAUE,eAAe0E,QAASC,GAAOA,EAAGJ,IAE5CrP,EAAOwK,WAAWvJ,IAAI,IAWzB,eAA2B6F,EAC1B2E,iBAAS1H,KAAO+C,EAAI/C,KACb,GAAIsD,SAAQ,IASpB,UAAO,CACNyD,eAAiB2E,IAChB9O,GAAQ,IACPiK,GAAUE,eAAexC,KAAKmH,CAE9B,EAAO,KACN,KAAMnJ,GAAIsE,EAAUE,eAAe6I,QAAQlE,GAC3C7E,EAAUE,eAAe8I,OAAOtN,EAAG,OAKtCuE,gBAAkB4E,IACjB9O,GAAQ,IACPiK,GAAUC,gBAAgBvC,KAAKmH,CAE/B,EAAO,KACN,KAAMnJ,GAAIsE,EAAUC,gBAAgB8I,QAAQlE,GAC5C7E,EAAUC,gBAAgB+I,OAAOtN,EAAG,OAKvCuN,wBAAyB,KAKxB,CAAIxI,IAAaF,IAChBC,GAAa,GAIfsC,OAAM,CAAC3J,EAAM6C,EAAO,KAAO8G,GAAK3J,EAAM6C,EAAM,CAE5CkN,cAAanN,GACZ,UAAWA,IAAa,WACvB2D,EAAYhC,KAAK3B,OACX,CACN,MAAM5C,KAAEA,GAAS,GAAIP,KAAImD,EAAU8E,SAAS1H,IAC5CuG,IAAYhC,KAAMrF,GAAQA,IAAQc,CAGnC,QAAKuH,IACJA,GAAejE,QAAQC,UAAUyM,KAAKrO,SAC/BR,UAAO,GAAI1B,KAAIiI,SAAS1H,IAAO,KAAI,IAEzCuH,EAAe,QAIVA,CAGR0I,WAAUtO,KAAO3B,KAChB,KAAM+C,GAAM,GAAItD,KAAIO,EAAM0I,GAAa1L,QACjCiT,YAASlN,CAIhBmN,mBAAiBvO,KAAOwO,IACvB,CAIA,KAAMC,GAAWC,CAJAF,EACd1K,GAAOmG,OAAQuC,GAAUgC,EAAUlR,KAAMuK,GAAa2E,EAAM7J,KAAKkF,KACjE/D,IAEuBvB,IAAKoM,GAAMhN,QAAQiN,IAAID,EAAElL,EAAElB,IAAKiJ,GAASA,YAE7D7J,SAAQiN,IAAIH,IAGnBI,cAAe,KACd3I,QAAQM,kBAAoB,SAM5BsI,iBAAiB,eAAiBjQ,IACjC,GAAIgP,GAAe,GAEnB,KAAMlE,GAAa,CAClBC,KAAMvE,EAAQjE,IACdyI,GAAI,KACJiE,OAAQ,IAAOD,EAAe,IAG/B3I,EAAUC,gBAAgB2E,QAASC,GAAOA,EAAGJ,IAE7C,CAAIkE,CACHhP,GAAEkQ,iBACFlQ,EAAEmQ,YAAc,IAEhB9I,QAAQM,kBAAoB,MAI9BsI,oBAAiB,mBAAoB,KACpC,GAAIzT,SAAS4T,kBAAoB,SAAU,CAC1CjB,GAAwB/H,CAExB,MACC5B,eAAeN,IAAcxH,KAAKC,UAAU4H,SAC3C,MAOJ,KAAM8K,GAAoBxQ,IACzB,KAAM+E,GAAI0L,GAAYzQ,GACtB,CAAI+E,EAAKA,EAAEpF,MAAQoF,EAAE2L,aAAa,oBAAuB,GACxDd,GAASe,GAAS5L,KAKpB,GAAI6L,GAGJ,KAAMC,GAAoB7Q,IACzBwB,aAAaoP,CACbA,IAAoB5G,WAAW,KAG9BhK,EAAMrE,QAAQmV,cACb,GAAIC,aAAY,6BAA8B,CAAEC,QAAS,EAExD,UAGJZ,iBAAiB,aAAcI,GAC/BJ,iBAAiB,YAAaS,GAC9BT,iBAAiB,6BAA8BI,GAG/CJ,iBAAiB,QAAUpQ,IAO1B,GANKsH,IAIDtH,EAAMiR,QAAUjR,EAAMkR,QAAU,GAChClR,EAAMmR,SAAWnR,EAAMoR,SAAWpR,EAAMqR,UAAYrR,EAAMsR,QAC1DtR,EAAMuR,iBAAkB,OAE5B,KAAMxM,GAAI0L,GAAYzQ,GAGtB,GAFK+E,IAEAA,GAAEpF,KAAM,OAEb,KAAM6R,GAAmBzM,YAAavE,aAChCkC,EAAMiO,GAAS5L,CAKrB,MAAKyM,GAAoB9O,EAAIwG,SAAW,OAAQ,OAKhD,KAAMuI,GAAO1M,GAAE6E,aAAa,QAAU,IAAIhG,MAAM,OAWhD,GARCmB,EAAE2L,aAAa,UACfe,KAAIlN,SAAS,UACbQ,KAAE2L,aAAa,qBAMZc,GAAmBzM,EAAEpJ,OAAO8E,QAAUsE,EAAEpJ,QAAQ,OAKpD,MAAOoK,EAAM1G,GAAQqD,EAAI/C,KAAKiE,MAAM,KACpC,GAAIvE,IAAS8B,QAAa4E,IAASsB,SAAS1H,KAAKiE,MAAM,GAAK,KAAI,CAG/DoE,GAAkB,GAElBsH,GAAwB/H,CAExB3L,IAAOE,KAAKe,IAAI,IAAKf,GAAM4G,QAC3B9G,EAAOE,KAAKM,SAEZ,MAGDkM,IAAS,CACR5F,IACAmF,SAAQ9C,EAAE2L,aAAa,sBAAwB7K,GAAiB,OAChEsC,UAAW,GACXC,eAAgB,GAChBG,QAAS,CACRd,MAAO,GACPG,aAAclF,EAAI/C,OAAS0H,SAAS1H,MAErC6I,SAAU,IAAMxI,EAAMqQ,eACtB5H,UAAS,IAAMzI,EAAMqQ,qBAIvBD,iBAAiB,WAAapQ,IAC7B,GAAIA,EAAMyH,OAASH,EAAgB,CAGlC,GAAItH,EAAMyH,MAAMnC,KAAeiC,EAAuB,OAEtDe,GAAS,CACR5F,IAAK,GAAItD,KAAIiI,SAAS1H,MACtBkI,OAAQnC,GAAiB1F,EAAMyH,MAAMnC,IACrC6C,UAAW,GACXC,eAAgB,GAChBG,QAAS,KACTC,SAAU,KACTjB,EAAwBvH,EAAMyH,MAAMnC,EAErCmD,UAAS,KACR,KAAMiJ,GAAQnK,EAAwBvH,EAAMyH,MAAMnC,GAClDkC,QAAQmK,GAAGD,CAMftB,yBAAiB,aAAc,IAG9B,EAAIpI,GACHA,IAAkB,GAClBR,QAAQI,aACP,IAAKJ,QAAQC,MAAOnC,CAACA,KAAciC,CACnC,KACAF,SAAS1H,IAMbiS,eAAUtQ,MAASpD,UAAQE,QAAOyT,MAAOlN,WAAQ0E,QAChD,WAAM3G,GAAM,GAAItD,KAAIiI,SAAS1H,MAGvBiH,EAAS,GAGf,GAAIE,GAAQ,GAGR8D,EAEAkH,EAEJ,IACC,OAAS5P,GAAI,EAAGA,EAAI2P,EAAMnS,OAAQwC,GAAK,EAAG,CACzC,KAAM6P,GAAU7P,IAAM2P,EAAMnS,OAAS,EAErC,GAAI6J,GAEJ,GAAIwI,EAAS,CACZ,KAAMC,GAAarV,SAASkG,cAAc,yCAC1C,CAAImP,EACHzI,GAAQ1L,KAAKmF,MAA6BgP,EAAsB,cAIlE,KAAMzR,GAAagM,QAAU,CAC5B7B,OAAc3O,SAAW8V,EAAM3P,MAC/BQ,MACAiC,OACAmC,UACA5I,OAAQ6T,EAAU7T,EAASiD,OAC3B/C,MAAO2T,EAAU3T,EAAQ+C,OACzBoI,MACAF,cAUD,GAPIE,GACHhJ,GAAKiM,KAAK/N,aAAaiO,IAAIhK,EAAI/C,MAC/BY,EAAKiM,KAAK9J,IAAM,IAGjBkE,EAAO1C,KAAK3D,GAERA,GAAQA,EAAKxC,OAChB,GAAIwC,EAAKxC,OAAOK,MAAO,CACtB,GAAIA,EAAO,KAAMmC,GAAKxC,OAAOK,MAC7B0T,EAAa,CACZ5T,OAAQqC,EAAKxC,OAAOG,OACpBE,MAAOmC,EAAKxC,OAAOK,MACnBsE,MACA2G,QAEK,QAAI9I,EAAKxC,OAAO+I,OACtBA,GAAQ,IACJA,EACAvG,KAAKxC,OAAO+I,QAMnB8D,EAASkH,EACA1I,QAAqB0I,CACrBhD,WAAkC,CACxCpM,IACAiC,WACAmC,QACAF,OACA1I,WACAE,QACAiL,QAEF,UAAOlJ,EAAP,CACD,GAAI/B,EAAO,KAAM+B,GAEjByK,EAAexB,QAAqB,CACnClL,OAAQ,IACRE,MAAOqQ,GAAkBtO,GACzBuC,IACA2G,cAIF,CAAIuB,CAAOzM,eAGJuK,GAAkB,GAAItJ,KAAIwL,EAAOzM,SAAUkJ,SAAS1H,OAG3D+J,GAAWkB,KAyBdtJ,kBAAqB2Q,OAAEA,EAAKtW,OAAEA,EAAMmK,QAAEA,EAAOgI,MAAEA,EAAKoE,IAAEA,EAAGlT,eAAEA,EAAcgM,QAAEA,IAC1E,KAAMmH,GAASC,GAAc,CAC5BzW,SACAmK,UACAC,KAAMkM,EAAMlM,KACZ/G,mBAGD+D,GAAK,CAAEoP,WACPE,GAAUJ,CAEV,EAAIjH,GACGmH,QAAOP,SAAS5G,GAGnB8C,GACCoE,IAAKC,EAAO7I,KAAKjC,SAAS1H,KAAM,CAAEiI,aAAc,EACpDuK,KAAOhC,iBAGRW,cAAc,GAAIC,aAAY","names":["ctx","insert_hydration","target","stores","$$props","page","components","props_0","props_1","setContext","afterUpdate","notify","navigated","title","onMount","subscribe","mounted","$$invalidate","document","unsubscribe","set","matchers","__vitePreload","import","dictionary","admin","guides","help","mods","settings","tools","tos","err","Error","name","message","JSON","stringify","loaded","fallthrough","has_error_status","status","redirect","error","console","warn","Math","floor","dependencies","Array","isArray","some","dep","context","path","trailing_slash","endsWith","slice","LoadURL","URL","hash","doc","baseURI","baseTags","getElementsByTagName","length","href","x","pageXOffset","y","pageYOffset","event","composedPath","find","e","Node","nodeName","toUpperCase","node","SVGAElement","baseVal","value","store","writable","ready","update","val","new_value","run","old_value","undefined","initial","timeout","async","check","clearTimeout","res","fetch","assets","headers","pragma","ok","version","json","updated","i","charCodeAt","toString","native_fetch","window","resource","opts","selector","url","body","script","querySelector","textContent","init","parse","Promise","resolve","Response","param_pattern","id","names","types","add_trailing_slash","pattern","RegExp","decodeURIComponent","split","map","segment","segments","match","exec","push","is_last","content","type","rest","includes","normalize","replace","join","params","matcher","Object","entries","a","b","has_shadow","parse_route_id","n","routes","SCROLL_KEY","INDEX_KEY","default_layout","default_error","root_stuff","scroll_positions","sessionStorage","index","scroll_state","session","base","cache","Map","invalidated","notifiable_store","navigating","create_updated_store","load_cache","promise","callbacks","before_navigate","after_navigate","current","branch","session_id","stuff","started","autoscroll","updating","invalidating","root","$session","location","router_enabled","current_history_index","history","state","Date","now","replaceState","scroll","scrollRestoration","scrollTo","hash_navigating","token","noscroll","keepfocus","redirect_chain","get_base_uri","navigate","details","accepted","blocked","native_navigation","intent","get_navigation_intent","load_route","no_cache","callback","current_token","navigation_result","origin","pathname","load_root_error_page","routeId","goto","props","change","$set","initialize","tabindex","getAttribute","tabIndex","focus","preventScroll","setTimeout","getSelection","removeAllRanges","setAttribute","removeAttribute","tick","deep_linked","getElementById","scrollIntoView","leaf_node","module","router","result","style","remove","Root","hydrate","navigation","from","to","forEach","fn","filtered","filter","Boolean","f","default","page_changed","print_error","property","replacement","defineProperty","get","leaf","key","search","clear","delete","maxage","load_node","uses","Set","add","uses_params","enumerable","load_url","load","load_input","requested","method","blob","credentials","integrity","keepalive","mode","referrer","referrerPolicy","signal","normalized","add_dependency","initial_fetch","call","route","cached","changed","keys","stuff_changed","loader","catch","previous","param","has","is_shadow_page","coalesce_to_error","error_loaded","node_loaded","j","concat","get_navigation_result_from_branch","root_layout","root_error","startsWith","decodeURI","should_block","cancel","normalize_path","update_scroll_positions","indexOf","splice","disable_scroll_handling","invalidate","then","prefetch","prefetch_routes","pathnames","promises","matching","r","all","_start_router","addEventListener","preventDefault","returnValue","visibilityState","trigger_prefetch","find_anchor","hasAttribute","get_href","mousemove_timeout","handle_mousemove","dispatchEvent","CustomEvent","bubbles","button","which","metaKey","ctrlKey","shiftKey","altKey","defaultPrevented","is_svg_a_element","rel","delta","go","_hydrate","nodes","error_args","is_leaf","serialized","paths","spa","client","create_client","set_paths"],"sources":["../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../runtime/client/start.js"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const components = [\n\t() => import(\"../../src/routes/__layout.svelte\"),\n\t() => import(\"../runtime/components/error.svelte\"),\n\t() => import(\"../../src/routes/admin/index.svelte\"),\n\t() => import(\"../../src/routes/admin/sml-versions/[smlVersionId]/edit.svelte\"),\n\t() => import(\"../../src/routes/admin/sml-versions/index.svelte\"),\n\t() => import(\"../../src/routes/admin/sml-versions/new.svelte\"),\n\t() => import(\"../../src/routes/admin/unapproved-mods.svelte\"),\n\t() => import(\"../../src/routes/admin/unapproved-versions.svelte\"),\n\t() => import(\"../../src/routes/api-docs/index.svelte\"),\n\t() => import(\"../../src/routes/guide/[guideId]/edit.svelte\"),\n\t() => import(\"../../src/routes/guide/[guideId]/index.svelte\"),\n\t() => import(\"../../src/routes/guides/index.svelte\"),\n\t() => import(\"../../src/routes/help/index.svelte\"),\n\t() => import(\"../../src/routes/index.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/edit.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/index.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/new-version.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/version/[versionId]/edit.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/version/[versionId]/index.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/version/[versionId]/view.svelte\"),\n\t() => import(\"../../src/routes/mods/index.svelte\"),\n\t() => import(\"../../src/routes/new-guide/index.svelte\"),\n\t() => import(\"../../src/routes/new-mod/index.svelte\"),\n\t() => import(\"../../src/routes/privacy-policy/index.svelte\"),\n\t() => import(\"../../src/routes/settings/index.svelte\"),\n\t() => import(\"../../src/routes/sml-versions/index.svelte\"),\n\t() => import(\"../../src/routes/tools/index.svelte\"),\n\t() => import(\"../../src/routes/tos/index.svelte\"),\n\t() => import(\"../../src/routes/user/[userId]/index.svelte\")\n];\n\nexport const dictionary = {\n\t\"\": [[0, 13], [1]],\n\t\"admin\": [[0, 2], [1]],\n\t\"api-docs\": [[0, 8], [1]],\n\t\"guides\": [[0, 11], [1]],\n\t\"help\": [[0, 12], [1]],\n\t\"mods\": [[0, 20], [1]],\n\t\"new-guide\": [[0, 21], [1]],\n\t\"new-mod\": [[0, 22], [1]],\n\t\"privacy-policy\": [[0, 23], [1]],\n\t\"settings\": [[0, 24], [1]],\n\t\"sml-versions\": [[0, 25], [1]],\n\t\"tools\": [[0, 26], [1]],\n\t\"tos\": [[0, 27], [1]],\n\t\"admin/sml-versions\": [[0, 4], [1]],\n\t\"admin/unapproved-mods\": [[0, 6], [1]],\n\t\"admin/unapproved-versions\": [[0, 7], [1]],\n\t\"admin/sml-versions/new\": [[0, 5], [1]],\n\t\"admin/sml-versions/[smlVersionId]/edit\": [[0, 3], [1]],\n\t\"guide/[guideId]\": [[0, 10], [1]],\n\t\"mod/[modId]\": [[0, 15], [1]],\n\t\"user/[userId]\": [[0, 28], [1]],\n\t\"guide/[guideId]/edit\": [[0, 9], [1]],\n\t\"mod/[modId]/edit\": [[0, 14], [1]],\n\t\"mod/[modId]/new-version\": [[0, 16], [1]],\n\t\"mod/[modId]/version/[versionId]\": [[0, 18], [1]],\n\t\"mod/[modId]/version/[versionId]/edit\": [[0, 17], [1]],\n\t\"mod/[modId]/version/[versionId]/view\": [[0, 19], [1]]\n};","import { onMount, tick } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { assets, set_paths } from '../paths.js';\nimport Root from '__GENERATED__/root.svelte';\nimport { components, dictionary, matchers } from '__GENERATED__/client-manifest.js';\nimport { init } from './singletons.js';\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * @param {import('types').LoadOutput} loaded\n * @returns {import('types').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\t// TODO remove for 1.0\n\t// @ts-expect-error\n\tif (loaded.fallthrough) {\n\t\tthrow new Error(\n\t\t\t'fallthrough is no longer supported. Use matchers instead: https://kit.svelte.dev/docs/routing#advanced-routing-matching'\n\t\t);\n\t}\n\n\t// TODO remove for 1.0\n\tif ('maxage' in loaded) {\n\t\tthrow new Error('maxage should be replaced with cache: { maxage }');\n\t}\n\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn { status: status || 500, error: new Error() };\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code — defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\tthrow new Error(\n\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\tthrow new Error('\"redirect\" property returned from load() must be a string');\n\t\t}\n\t}\n\n\tif (loaded.dependencies) {\n\t\tif (\n\t\t\t!Array.isArray(loaded.dependencies) ||\n\t\t\tloaded.dependencies.some((dep) => typeof dep !== 'string')\n\t\t) {\n\t\t\tthrow new Error('\"dependencies\" property returned from load() must be of type string[]');\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nfunction normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\nclass LoadURL extends URL {\n\t/** @returns {string} */\n\tget hash() {\n\t\tthrow new Error(\n\t\t\t'url.hash is inaccessible from load. Consider accessing hash from the page store within the script tag of your component.'\n\t\t);\n\t}\n}\n\n/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/** @param {HTMLAnchorElement | SVGAElement} node */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nfunction create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = +(\n\t\t/** @type {string} */ (import.meta.env.VITE_SVELTEKIT_APP_VERSION_POLL_INTERVAL)\n\t);\n\tconst initial = import.meta.env.VITE_SVELTEKIT_APP_VERSION;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst file = import.meta.env.VITE_SVELTEKIT_APP_VERSION_FILE;\n\n\t\tconst res = await fetch(`${assets}/${file}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== initial;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n\n/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\nlet loading = 0;\n\nconst native_fetch = window.fetch;\n\nfunction lock_fetch() {\n\tloading += 1;\n}\n\nfunction unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\tconst heuristic = can_inspect_stack_trace ? stack.includes('load_node') : loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/loading#input-fetch`\n\t\t\t);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = JSON.stringify(typeof resource === 'string' ? resource : resource.url);\n\n\tlet selector = `script[sveltekit\\\\:data-type=\"data\"][sveltekit\\\\:data-url=${url}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[sveltekit\\\\:data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\nconst param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nfunction parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${decodeURIComponent(id)\n\t\t\t\t\t\t.split(/(?:@[a-zA-Z0-9_-]+)?(?:\\/|$)/)\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tsegment &&\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\t\tsegment\n\t\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = /** @type {RegExpMatchArray} */ (\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam_pattern.exec(content)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nfunction exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {import('types').CSRComponentLoader[]} components\n * @param {Record<string, [number[], number[], 1?]>} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nfunction parse(components, dictionary, matchers) {\n\tconst routes = Object.entries(dictionary).map(([id, [a, b, has_shadow]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\treturn {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\ta: a.map((n) => components[n]),\n\t\t\tb: b.map((n) => components[n]),\n\t\t\thas_shadow: !!has_shadow\n\t\t};\n\t});\n\n\treturn routes;\n}\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(components, dictionary, matchers);\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nconst default_layout = components[0]();\nconst default_error = components[1]();\n\nconst root_stuff = {};\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: Element;\n *   session: App.Session;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nfunction create_client({ target, session, base, trailing_slash }) {\n\t/** @type {Map<string, import('./types').NavigationResult>} */\n\tconst cache = new Map();\n\n\t/** @type {Array<((href: string) => boolean)>} */\n\tconst invalidated = [];\n\n\tconst stores = {\n\t\turl: notifiable_store({}),\n\t\tpage: notifiable_store({}),\n\t\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\t\tsession: writable(session),\n\t\tupdated: create_updated_store()\n\t};\n\n\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult | undefined> | null}} */\n\tconst load_cache = {\n\t\tid: null,\n\t\tpromise: null\n\t};\n\n\tconst callbacks = {\n\t\t/** @type {Array<(opts: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(opts: { from: URL | null, to: URL }) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\tsession_id: 0,\n\t\tstuff: root_stuff,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet session_id = 1;\n\n\t/** @type {Promise<void> | null} */\n\tlet invalidating = null;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t/** @type {App.Session} */\n\tlet $session;\n\n\tlet ready = false;\n\tstores.session.subscribe(async (value) => {\n\t\t$session = value;\n\n\t\tif (!ready) return;\n\t\tsession_id += 1;\n\n\t\tupdate(new URL(location.href), [], true);\n\t});\n\tready = true;\n\n\tlet router_enabled = true;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/**\n\t * @param {string | URL} url\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t */\n\tasync function goto(\n\t\turl,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain\n\t) {\n\t\tif (typeof url === 'string') {\n\t\t\turl = new URL(url, get_base_uri(document));\n\t\t}\n\n\t\tif (router_enabled) {\n\t\t\treturn navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tredirect_chain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tawait native_navigation(url);\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache.promise = load_route(intent, false);\n\t\tload_cache.id = intent.id;\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(url, redirect_chain, no_cache, opts, callback) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tconst current_token = (token = {});\n\t\tlet navigation_result = intent && (await load_route(intent, no_cache));\n\n\t\tif (\n\t\t\t!navigation_result &&\n\t\t\turl.origin === location.origin &&\n\t\t\turl.pathname === location.pathname\n\t\t) {\n\t\t\t// this could happen in SPA fallback mode if the user navigated to\n\t\t\t// `/non-existent-page`. if we fall back to reloading the page, it\n\t\t\t// will create an infinite loop. so whereas we normally handle\n\t\t\t// unknown routes by going to the server, in this special case\n\t\t\t// we render a client-side error page instead\n\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\tstatus: 404,\n\t\t\t\terror: new Error(`Not found: ${url.pathname}`),\n\t\t\t\turl,\n\t\t\t\trouteId: null\n\t\t\t});\n\t\t}\n\n\t\tif (!navigation_result) {\n\t\t\tawait native_navigation(url);\n\t\t\treturn false; // unnecessary, but TypeScript prefers it this way\n\t\t}\n\n\t\t// abort if user navigated during update\n\t\tif (token !== current_token) return false;\n\n\t\tinvalidated.length = 0;\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (router_enabled) {\n\t\t\t\t\tgoto(new URL(navigation_result.redirect, url).href, {}, [\n\t\t\t\t\t\t...redirect_chain,\n\t\t\t\t\t\turl.pathname\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tawait native_navigation(new URL(navigation_result.redirect, location.href));\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\troot.$set(navigation_result.props);\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus({ preventScroll: true });\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\t});\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tload_cache.promise = null;\n\t\tload_cache.id = null;\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\trouter_enabled = leaf_node?.module.router !== false;\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\n\t\tif (router_enabled) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: Error | null;\n\t *   routeId: string | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tstuff,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\trouteId\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded?.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect?.loaded?.redirect,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\tstuff,\n\t\t\t\tsession_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst loaded = filtered[i].loaded;\n\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\tcurrent.stuff !== stuff;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = { error, params, routeId, status, stuff, url };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst load_cache = leaf?.loaded?.cache;\n\n\t\tif (load_cache) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (cache.get(key) === result) {\n\t\t\t\t\tcache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, load_cache.maxage * 1000);\n\n\t\t\tconst unsubscribe = stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tcache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: import('types').CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   props?: Record<string, any>;\n\t *   routeId: string | null;\n\t * }} options\n\t */\n\tasync function load_node({ status, error, module, url, params, stuff, props, routeId }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: new Set()\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\t/** @param dep {string} */\n\t\tfunction add_dependency(dep) {\n\t\t\tconst { href } = new URL(dep, url);\n\t\t\tnode.uses.dependencies.add(href);\n\t\t}\n\n\t\tif (props) {\n\t\t\t// shadow endpoint props means we need to mark this URL as a dependency of itself\n\t\t\tnode.uses.dependencies.add(url.href);\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = $session;\n\t\tconst load_url = new LoadURL(url);\n\n\t\tif (module.load) {\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: uses_params,\n\t\t\t\tprops: props || {},\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\treturn load_url;\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (typeof resource === 'string') {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst normalized = new URL(requested, url).href;\n\t\t\t\t\tadd_dependency(normalized);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be normalized\n\t\t\t\t\treturn started ? native_fetch(normalized, init) : initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tstatus: status ?? null,\n\t\t\t\terror: error ?? null\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet loaded;\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tloaded = await module.load.call(null, load_input);\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloaded = await module.load.call(null, load_input);\n\t\t\t}\n\n\t\t\tif (!loaded) {\n\t\t\t\tthrow new Error('load function must return a value');\n\t\t\t}\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t\tif (node.loaded.dependencies) {\n\t\t\t\tnode.loaded.dependencies.forEach(add_dependency);\n\t\t\t}\n\t\t} else if (props) {\n\t\t\tnode.loaded = normalize({ props });\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @param {boolean} no_cache\n\t */\n\tasync function load_route({ id, url, params, route }, no_cache) {\n\t\tif (load_cache.id === id && load_cache.promise) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = cache.get(id);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst { a, b, has_shadow } = route;\n\n\t\tconst changed = current.url && {\n\t\t\turl: id !== current.url.pathname + current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => current.params[key] !== params[key]),\n\t\t\tsession: session_id !== current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = root_stuff;\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number | undefined} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | null} */\n\t\tlet error = null;\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\ta.forEach((loader) => loader().catch(() => {}));\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tArray.from(previous.uses.dependencies).some((dep) => invalidated.some((fn) => fn(dep))) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\tlet props = {};\n\n\t\t\t\t\tconst is_shadow_page = has_shadow && i === a.length - 1;\n\n\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\tconst res = await native_fetch(\n\t\t\t\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'x-sveltekit-load': 'true'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\tconst redirect = res.headers.get('x-sveltekit-location');\n\n\t\t\t\t\t\t\tif (redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprops = res.status === 204 ? {} : await res.json();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus = res.status;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\terror = await res.json();\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\terror = new Error('Failed to load data');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tnode = await load_node({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tprops,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded) {\n\t\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff,\n\t\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await load_root_error_page({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: route.id\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node?.loaded?.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId: route.id\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst root_layout = await load_node({\n\t\t\tmodule: await default_layout,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {},\n\t\t\trouteId\n\t\t});\n\n\t\tconst root_error = await load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await default_error,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (root_layout && root_layout.loaded && root_layout.loaded.stuff) || {},\n\t\t\trouteId\n\t\t});\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {\n\t\t\t\t...root_layout?.loaded?.stuff,\n\t\t\t\t...root_error?.loaded?.stuff\n\t\t\t},\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tfunction get_navigation_intent(url) {\n\t\tif (url.origin !== location.origin || !url.pathname.startsWith(base)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = {\n\t\t\t\t\tid: url.pathname + url.search,\n\t\t\t\t\troute,\n\t\t\t\t\tparams,\n\t\t\t\t\turl\n\t\t\t\t};\n\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({ url, scroll, keepfocus, redirect_chain, details, accepted, blocked }) {\n\t\tconst from = current.url;\n\t\tlet should_block = false;\n\n\t\tconst navigation = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathname = normalize_path(url.pathname, trailing_slash);\n\t\tconst normalized = new URL(url.origin + pathname + url.search + url.hash);\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tif (started) {\n\t\t\tstores.navigating.set({\n\t\t\t\tfrom: current.url,\n\t\t\t\tto: normalized\n\t\t\t});\n\t\t}\n\n\t\tawait update(\n\t\t\tnormalized,\n\t\t\tredirect_chain,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst navigation = { from, to: normalized };\n\t\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((dep) => dep === href);\n\t\t\t}\n\n\t\t\tif (!invalidating) {\n\t\t\t\tinvalidating = Promise.resolve().then(async () => {\n\t\t\t\t\tawait update(new URL(location.href), [], true);\n\n\t\t\t\t\tinvalidating = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn invalidating;\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => Promise.all(r.a.map((load) => load())));\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: current.url,\n\t\t\t\t\tto: null,\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\t\tprefetch(get_href(a));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\tif (!router_enabled) return;\n\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tif (!a.href) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\t\t\t\tconst url = get_href(a);\n\n\t\t\t\t// Ignore if url does not have origin (e.g. `mailto:`, `tel:`.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See: https://github.com/sveltejs/kit/issues/4045\n\t\t\t\tif (!is_svg_a_element && url.origin === 'null') return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (\n\t\t\t\t\ta.hasAttribute('download') ||\n\t\t\t\t\trel.includes('external') ||\n\t\t\t\t\ta.hasAttribute('sveltekit:reload')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state && router_enabled) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\tconst delta = current_history_index - event.state[INDEX_KEY];\n\t\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, nodes, params, routeId }) => {\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\t\tconst branch = [];\n\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tlet stuff = {};\n\n\t\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\t\tlet result;\n\n\t\t\tlet error_args;\n\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\t\tlet props;\n\n\t\t\t\t\tif (is_leaf) {\n\t\t\t\t\t\tconst serialized = document.querySelector('script[sveltekit\\\\:data-type=\"props\"]');\n\t\t\t\t\t\tif (serialized) {\n\t\t\t\t\t\t\tprops = JSON.parse(/** @type {string} */ (serialized.textContent));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst node = await load_node({\n\t\t\t\t\t\tmodule: await components[nodes[i]](),\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\t\terror: is_leaf ? error : undefined,\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\trouteId\n\t\t\t\t\t});\n\n\t\t\t\t\tif (props) {\n\t\t\t\t\t\tnode.uses.dependencies.add(url.href);\n\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tbranch.push(node);\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\t\tstatus: node.loaded.status,\n\t\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\trouteId\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult = error_args\n\t\t\t\t\t? await load_root_error_page(error_args)\n\t\t\t\t\t: await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\tbranch,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\trouteId\n\t\t\t\t\t  });\n\t\t\t} catch (e) {\n\t\t\t\tif (error) throw e;\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result.redirect) {\n\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t// a redirect but only in the browser\n\t\t\t\tawait native_navigation(new URL(result.redirect, location.href));\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: number[];\n *     params: Record<string, string>;\n *     routeId: string | null;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tconst client = create_client({\n\t\ttarget,\n\t\tsession,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\tset_paths(paths);\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t}\n\n\tif (route) {\n\t\tif (spa) client.goto(location.href, { replaceState: true });\n\t\tclient._start_router();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"file":"immutable/start-22d64924.js"}