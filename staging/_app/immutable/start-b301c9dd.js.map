{"version":3,"mappings":"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","names":["ctx","insert_hydration_dev","target","stores","$$props","page","components","props_1","props_2","setContext","afterUpdate","notify","navigated","title","onMount","subscribe","mounted","$$invalidate","document","unsubscribe","set","matchers","__vitePreload","dictionary","admin","guides","help","mods","settings","tools","tos","err","Error","name","message","JSON","stringify","loaded","fallthrough","has_error_status","status","redirect","error","console","warn","Math","floor","dependencies","Array","isArray","some","dep","context","path","trailing_slash","endsWith","slice","doc","baseURI","baseTags","getElementsByTagName","length","href","URL","x","pageXOffset","y","pageYOffset","event","composedPath","find","e","Node","nodeName","toUpperCase","node","SVGAElement","baseVal","value","store","writable","ready","update","val","new_value","run","old_value","undefined","async","check","hash","i","charCodeAt","toString","loading","native_fetch","window","fetch","unlock_fetch","can_inspect_stack_trace","check_stack_trace","stack","includes","input","init","url","Request","heuristic","resource","opts","selector","body","script","querySelector","textContent","parse","Promise","resolve","Response","param_pattern","id","names","types","add_trailing_slash","pattern","RegExp","decodeURIComponent","split","map","segment","segments","match","exec","push","is_last","content","type","rest","normalize","replace","join","params","matcher","Object","entries","a","b","has_shadow","parse_route_id","n","SCROLL_KEY","INDEX_KEY","routes","default_layout","default_error","root_stuff","scroll_positions","sessionStorage","index","scroll_state","session","base","cache","Map","invalidated","notifiable_store","navigating","updated","create_updated_store","load_cache","promise","callbacks","before_navigate","after_navigate","current","branch","session_id","stuff","started","autoscroll","updating","invalidating","root","$session","location","router_enabled","current_history_index","history","state","Date","now","replaceState","scroll","scrollRestoration","scrollTo","hash_navigating","token","noscroll","keepfocus","redirect_chain","get_base_uri","navigate","details","accepted","blocked","native_navigation","intent","get_navigation_intent","load_route","no_cache","callback","current_token","navigation_result","origin","pathname","load_root_error_page","routeId","goto","props","change","$set","initialize","tabindex","getAttribute","getSelection","removeAllRanges","tabIndex","focus","preventScroll","setAttribute","removeAttribute","tick","deep_linked","getElementById","scrollIntoView","leaf_node","module","router","result","style","remove","Root","hydrate","navigation","from","to","forEach","fn","filtered","filter","Boolean","f","default","print_error","property","replacement","defineProperty","get","leaf","key","search","clear","delete","clearTimeout","timeout","setTimeout","maxage","uses","Set","add","uses_params","enumerable","load","load_input","Proxy","Reflect","requested","method","blob","credentials","headers","integrity","keepalive","mode","referrer","referrerPolicy","signal","normalized","add_dependency","initial_fetch","lock_fetch","call","route","cached","changed","keys","stuff_changed","loader","catch","previous","param","has","is_shadow_page","res","ok","json","load_node","coalesce_to_error","error_loaded","node_loaded","j","concat","get_navigation_result_from_branch","root_layout","root_error","startsWith","decodeURI","should_block","cancel","normalize_path","update_scroll_positions","indexOf","splice","disable_scroll_handling","invalidate","then","prefetch","prefetch_routes","pathnames","promises","matching","r","all","_start_router","addEventListener","preventDefault","returnValue","visibilityState","trigger_prefetch","find_anchor","hasAttribute","get_href","mousemove_timeout","handle_mousemove","dispatchEvent","CustomEvent","bubbles","button","which","metaKey","ctrlKey","shiftKey","altKey","defaultPrevented","is_svg_a_element","rel","delta","go","_hydrate","nodes","error_args","is_leaf","serialized","paths","spa","client","create_client","set_paths"],"sources":["../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../runtime/client/start.js"],"sourcesContent":["<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const components = [\n\t() => import(\"../../src/routes/__layout.svelte\"),\n\t() => import(\"../runtime/components/error.svelte\"),\n\t() => import(\"../../src/routes/admin/index.svelte\"),\n\t() => import(\"../../src/routes/admin/sml-versions/[smlVersionId]/edit.svelte\"),\n\t() => import(\"../../src/routes/admin/sml-versions/index.svelte\"),\n\t() => import(\"../../src/routes/admin/sml-versions/new.svelte\"),\n\t() => import(\"../../src/routes/admin/unapproved-mods.svelte\"),\n\t() => import(\"../../src/routes/admin/unapproved-versions.svelte\"),\n\t() => import(\"../../src/routes/api-docs/index.svelte\"),\n\t() => import(\"../../src/routes/guide/[guideId]/edit.svelte\"),\n\t() => import(\"../../src/routes/guide/[guideId]/index.svelte\"),\n\t() => import(\"../../src/routes/guides/index.svelte\"),\n\t() => import(\"../../src/routes/help/index.svelte\"),\n\t() => import(\"../../src/routes/index.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/edit.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/index.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/new-version.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/version/[versionId]/edit.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/version/[versionId]/index.svelte\"),\n\t() => import(\"../../src/routes/mod/[modId]/version/[versionId]/view.svelte\"),\n\t() => import(\"../../src/routes/mods/index.svelte\"),\n\t() => import(\"../../src/routes/new-guide/index.svelte\"),\n\t() => import(\"../../src/routes/new-mod/index.svelte\"),\n\t() => import(\"../../src/routes/privacy-policy/index.svelte\"),\n\t() => import(\"../../src/routes/settings/index.svelte\"),\n\t() => import(\"../../src/routes/sml-versions/index.svelte\"),\n\t() => import(\"../../src/routes/tools/index.svelte\"),\n\t() => import(\"../../src/routes/tos/index.svelte\"),\n\t() => import(\"../../src/routes/user/[userId]/index.svelte\")\n];\n\nexport const dictionary = {\n\t\"\": [[0, 13], [1]],\n\t\"admin\": [[0, 2], [1]],\n\t\"api-docs\": [[0, 8], [1]],\n\t\"guides\": [[0, 11], [1]],\n\t\"help\": [[0, 12], [1]],\n\t\"mods\": [[0, 20], [1]],\n\t\"new-guide\": [[0, 21], [1]],\n\t\"new-mod\": [[0, 22], [1]],\n\t\"privacy-policy\": [[0, 23], [1]],\n\t\"settings\": [[0, 24], [1]],\n\t\"sml-versions\": [[0, 25], [1]],\n\t\"tools\": [[0, 26], [1]],\n\t\"tos\": [[0, 27], [1]],\n\t\"admin/sml-versions\": [[0, 4], [1]],\n\t\"admin/unapproved-mods\": [[0, 6], [1]],\n\t\"admin/unapproved-versions\": [[0, 7], [1]],\n\t\"admin/sml-versions/new\": [[0, 5], [1]],\n\t\"admin/sml-versions/[smlVersionId]/edit\": [[0, 3], [1]],\n\t\"guide/[guideId]\": [[0, 10], [1]],\n\t\"mod/[modId]\": [[0, 15], [1]],\n\t\"user/[userId]\": [[0, 28], [1]],\n\t\"guide/[guideId]/edit\": [[0, 9], [1]],\n\t\"mod/[modId]/edit\": [[0, 14], [1]],\n\t\"mod/[modId]/new-version\": [[0, 16], [1]],\n\t\"mod/[modId]/version/[versionId]\": [[0, 18], [1]],\n\t\"mod/[modId]/version/[versionId]/edit\": [[0, 17], [1]],\n\t\"mod/[modId]/version/[versionId]/view\": [[0, 19], [1]]\n};","import { onMount, tick } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { assets, set_paths } from '../paths.js';\nimport Root from '__GENERATED__/root.svelte';\nimport { components, dictionary, matchers } from '__GENERATED__/client-manifest.js';\nimport { init } from './singletons.js';\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * @param {import('types').LoadOutput} loaded\n * @returns {import('types').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\t// TODO remove for 1.0\n\t// @ts-expect-error\n\tif (loaded.fallthrough) {\n\t\tthrow new Error(\n\t\t\t'fallthrough is no longer supported. Use matchers instead: https://kit.svelte.dev/docs/routing#advanced-routing-matching'\n\t\t);\n\t}\n\n\t// TODO remove for 1.0\n\tif ('maxage' in loaded) {\n\t\tthrow new Error('maxage should be replaced with cache: { maxage }');\n\t}\n\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn { status: status || 500, error: new Error() };\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code — defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\tthrow new Error(\n\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\tthrow new Error('\"redirect\" property returned from load() must be a string');\n\t\t}\n\t}\n\n\tif (loaded.dependencies) {\n\t\tif (\n\t\t\t!Array.isArray(loaded.dependencies) ||\n\t\t\tloaded.dependencies.some((dep) => typeof dep !== 'string')\n\t\t) {\n\t\t\tthrow new Error('\"dependencies\" property returned from load() must be of type string[]');\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nfunction normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/** @param {HTMLAnchorElement | SVGAElement} node */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nfunction create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = +(\n\t\t/** @type {string} */ (import.meta.env.VITE_SVELTEKIT_APP_VERSION_POLL_INTERVAL)\n\t);\n\tconst initial = import.meta.env.VITE_SVELTEKIT_APP_VERSION;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst file = import.meta.env.VITE_SVELTEKIT_APP_VERSION_FILE;\n\n\t\tconst res = await fetch(`${assets}/${file}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== initial;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n\n/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\nlet loading = 0;\n\nconst native_fetch = window.fetch;\n\nfunction lock_fetch() {\n\tloading += 1;\n}\n\nfunction unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\tconst heuristic = can_inspect_stack_trace ? stack.includes('load_node') : loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/loading#input-fetch`\n\t\t\t);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = JSON.stringify(typeof resource === 'string' ? resource : resource.url);\n\n\tlet selector = `script[sveltekit\\\\:data-type=\"data\"][sveltekit\\\\:data-url=${url}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[sveltekit\\\\:data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\nconst param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nfunction parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${decodeURIComponent(id)\n\t\t\t\t\t\t.split(/(?:@[a-zA-Z0-9_-]+)?(?:\\/|$)/)\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tsegment &&\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\t\tsegment\n\t\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = /** @type {RegExpMatchArray} */ (\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam_pattern.exec(content)\n\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nfunction exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {import('types').CSRComponentLoader[]} components\n * @param {Record<string, [number[], number[], 1?]>} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nfunction parse(components, dictionary, matchers) {\n\tconst routes = Object.entries(dictionary).map(([id, [a, b, has_shadow]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\treturn {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\ta: a.map((n) => components[n]),\n\t\t\tb: b.map((n) => components[n]),\n\t\t\thas_shadow: !!has_shadow\n\t\t};\n\t});\n\n\treturn routes;\n}\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(components, dictionary, matchers);\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nconst default_layout = components[0]();\nconst default_error = components[1]();\n\nconst root_stuff = {};\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: Element;\n *   session: App.Session;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nfunction create_client({ target, session, base, trailing_slash }) {\n\t/** @type {Map<string, import('./types').NavigationResult>} */\n\tconst cache = new Map();\n\n\t/** @type {Array<((href: string) => boolean)>} */\n\tconst invalidated = [];\n\n\tconst stores = {\n\t\turl: notifiable_store({}),\n\t\tpage: notifiable_store({}),\n\t\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\t\tsession: writable(session),\n\t\tupdated: create_updated_store()\n\t};\n\n\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult | undefined> | null}} */\n\tconst load_cache = {\n\t\tid: null,\n\t\tpromise: null\n\t};\n\n\tconst callbacks = {\n\t\t/** @type {Array<(opts: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(opts: { from: URL | null, to: URL }) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\tsession_id: 0,\n\t\tstuff: root_stuff,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet session_id = 1;\n\n\t/** @type {Promise<void> | null} */\n\tlet invalidating = null;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t/** @type {App.Session} */\n\tlet $session;\n\n\tlet ready = false;\n\tstores.session.subscribe(async (value) => {\n\t\t$session = value;\n\n\t\tif (!ready) return;\n\t\tsession_id += 1;\n\n\t\tupdate(new URL(location.href), [], true);\n\t});\n\tready = true;\n\n\tlet router_enabled = true;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/**\n\t * @param {string} href\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t */\n\tasync function goto(\n\t\thref,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain\n\t) {\n\t\tconst url = new URL(href, get_base_uri(document));\n\n\t\tif (router_enabled) {\n\t\t\treturn navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tredirect_chain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tawait native_navigation(url);\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache.promise = load_route(intent, false);\n\t\tload_cache.id = intent.id;\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(url, redirect_chain, no_cache, opts, callback) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tconst current_token = (token = {});\n\t\tlet navigation_result = intent && (await load_route(intent, no_cache));\n\n\t\tif (\n\t\t\t!navigation_result &&\n\t\t\turl.origin === location.origin &&\n\t\t\turl.pathname === location.pathname\n\t\t) {\n\t\t\t// this could happen in SPA fallback mode if the user navigated to\n\t\t\t// `/non-existent-page`. if we fall back to reloading the page, it\n\t\t\t// will create an infinite loop. so whereas we normally handle\n\t\t\t// unknown routes by going to the server, in this special case\n\t\t\t// we render a client-side error page instead\n\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\tstatus: 404,\n\t\t\t\terror: new Error(`Not found: ${url.pathname}`),\n\t\t\t\turl,\n\t\t\t\trouteId: null\n\t\t\t});\n\t\t}\n\n\t\tif (!navigation_result) {\n\t\t\tawait native_navigation(url);\n\t\t\treturn false; // unnecessary, but TypeScript prefers it this way\n\t\t}\n\n\t\t// abort if user navigated during update\n\t\tif (token !== current_token) return false;\n\n\t\tinvalidated.length = 0;\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (router_enabled) {\n\t\t\t\t\tgoto(new URL(navigation_result.redirect, url).href, {}, [\n\t\t\t\t\t\t...redirect_chain,\n\t\t\t\t\t\turl.pathname\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tawait native_navigation(new URL(navigation_result.redirect, location.href));\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\troot.$set(navigation_result.props);\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus({ preventScroll: true });\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tload_cache.promise = null;\n\t\tload_cache.id = null;\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\trouter_enabled = leaf_node?.module.router !== false;\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\n\t\tif (router_enabled) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: Error | null;\n\t *   routeId: string | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tstuff,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\trouteId\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded?.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect?.loaded?.redirect,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\tstuff,\n\t\t\t\tsession_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst loaded = filtered[i].loaded;\n\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\tcurrent.stuff !== stuff;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = { error, params, routeId, status, stuff, url };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst load_cache = leaf?.loaded?.cache;\n\n\t\tif (load_cache) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (cache.get(key) === result) {\n\t\t\t\t\tcache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, load_cache.maxage * 1000);\n\n\t\t\tconst unsubscribe = stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tcache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: import('types').CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   props?: Record<string, any>;\n\t *   routeId: string | null;\n\t * }} options\n\t */\n\tasync function load_node({ status, error, module, url, params, stuff, props, routeId }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: new Set()\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\t/** @param dep {string} */\n\t\tfunction add_dependency(dep) {\n\t\t\tconst { href } = new URL(dep, url);\n\t\t\tnode.uses.dependencies.add(href);\n\t\t}\n\n\t\tif (props) {\n\t\t\t// shadow endpoint props means we need to mark this URL as a dependency of itself\n\t\t\tnode.uses.dependencies.add(url.href);\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = $session;\n\n\t\tif (module.load) {\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: uses_params,\n\t\t\t\tprops: props || {},\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\n\t\t\t\t\treturn new Proxy(url, {\n\t\t\t\t\t\tget: (target, property) => {\n\t\t\t\t\t\t\tif (property === 'hash') {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t'url.hash is inaccessible from load. Consider accessing hash from the page store within the script tag of your component.'\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn Reflect.get(target, property, target);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (typeof resource === 'string') {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst normalized = new URL(requested, url).href;\n\t\t\t\t\tadd_dependency(normalized);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be normalized\n\t\t\t\t\treturn started ? native_fetch(normalized, init) : initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tstatus: status ?? null,\n\t\t\t\terror: error ?? null\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet loaded;\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tloaded = await module.load.call(null, load_input);\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloaded = await module.load.call(null, load_input);\n\t\t\t}\n\n\t\t\tif (!loaded) {\n\t\t\t\tthrow new Error('load function must return a value');\n\t\t\t}\n\n\t\t\tnode.loaded = normalize(loaded);\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t\tif (node.loaded.dependencies) {\n\t\t\t\tnode.loaded.dependencies.forEach(add_dependency);\n\t\t\t}\n\t\t} else if (props) {\n\t\t\tnode.loaded = normalize({ props });\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @param {boolean} no_cache\n\t */\n\tasync function load_route({ id, url, params, route }, no_cache) {\n\t\tif (load_cache.id === id && load_cache.promise) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = cache.get(id);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst { a, b, has_shadow } = route;\n\n\t\tconst changed = current.url && {\n\t\t\turl: id !== current.url.pathname + current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => current.params[key] !== params[key]),\n\t\t\tsession: session_id !== current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = root_stuff;\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number | undefined} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | null} */\n\t\tlet error = null;\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\ta.forEach((loader) => loader().catch(() => {}));\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tArray.from(previous.uses.dependencies).some((dep) => invalidated.some((fn) => fn(dep))) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\tlet props = {};\n\n\t\t\t\t\tconst is_shadow_page = has_shadow && i === a.length - 1;\n\n\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\tconst res = await native_fetch(\n\t\t\t\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'x-sveltekit-load': 'true'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\tconst redirect = res.headers.get('x-sveltekit-location');\n\n\t\t\t\t\t\t\tif (redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprops = res.status === 204 ? {} : await res.json();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus = res.status;\n\t\t\t\t\t\t\terror = new Error('Failed to load data');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tnode = await load_node({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tprops,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded) {\n\t\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\t\tstatus = node.loaded.status;\n\t\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff,\n\t\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await load_root_error_page({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: route.id\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node?.loaded?.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId: route.id\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst root_layout = await load_node({\n\t\t\tmodule: await default_layout,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {},\n\t\t\trouteId\n\t\t});\n\n\t\tconst root_error = await load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await default_error,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (root_layout && root_layout.loaded && root_layout.loaded.stuff) || {},\n\t\t\trouteId\n\t\t});\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {\n\t\t\t\t...root_layout?.loaded?.stuff,\n\t\t\t\t...root_error?.loaded?.stuff\n\t\t\t},\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tfunction get_navigation_intent(url) {\n\t\tif (url.origin !== location.origin || !url.pathname.startsWith(base)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = {\n\t\t\t\t\tid: url.pathname + url.search,\n\t\t\t\t\troute,\n\t\t\t\t\tparams,\n\t\t\t\t\turl\n\t\t\t\t};\n\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({ url, scroll, keepfocus, redirect_chain, details, accepted, blocked }) {\n\t\tconst from = current.url;\n\t\tlet should_block = false;\n\n\t\tconst navigation = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathname = normalize_path(url.pathname, trailing_slash);\n\t\tconst normalized = new URL(url.origin + pathname + url.search + url.hash);\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tif (started) {\n\t\t\tstores.navigating.set({\n\t\t\t\tfrom: current.url,\n\t\t\t\tto: normalized\n\t\t\t});\n\t\t}\n\n\t\tawait update(\n\t\t\tnormalized,\n\t\t\tredirect_chain,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst navigation = { from, to: normalized };\n\t\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((dep) => dep === href);\n\t\t\t}\n\n\t\t\tif (!invalidating) {\n\t\t\t\tinvalidating = Promise.resolve().then(async () => {\n\t\t\t\t\tawait update(new URL(location.href), [], true);\n\n\t\t\t\t\tinvalidating = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn invalidating;\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => Promise.all(r.a.map((load) => load())));\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: current.url,\n\t\t\t\t\tto: null,\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\t\tprefetch(get_href(a));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\tif (!router_enabled) return;\n\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tif (!a.href) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\t\t\t\tconst url = get_href(a);\n\n\t\t\t\t// Ignore if url does not have origin (e.g. `mailto:`, `tel:`.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See: https://github.com/sveltejs/kit/issues/4045\n\t\t\t\tif (!is_svg_a_element && url.origin === 'null') return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (\n\t\t\t\t\ta.hasAttribute('download') ||\n\t\t\t\t\trel.includes('external') ||\n\t\t\t\t\ta.hasAttribute('sveltekit:reload')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state && router_enabled) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\tconst delta = current_history_index - event.state[INDEX_KEY];\n\t\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, nodes, params, routeId }) => {\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\t\tconst branch = [];\n\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tlet stuff = {};\n\n\t\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\t\tlet result;\n\n\t\t\tlet error_args;\n\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\t\tlet props;\n\n\t\t\t\t\tif (is_leaf) {\n\t\t\t\t\t\tconst serialized = document.querySelector('script[sveltekit\\\\:data-type=\"props\"]');\n\t\t\t\t\t\tif (serialized) {\n\t\t\t\t\t\t\tprops = JSON.parse(/** @type {string} */ (serialized.textContent));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst node = await load_node({\n\t\t\t\t\t\tmodule: await components[nodes[i]](),\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\t\terror: is_leaf ? error : undefined,\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\trouteId\n\t\t\t\t\t});\n\n\t\t\t\t\tif (props) {\n\t\t\t\t\t\tnode.uses.dependencies.add(url.href);\n\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tbranch.push(node);\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\t\tstatus: node.loaded.status,\n\t\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\trouteId\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult = error_args\n\t\t\t\t\t? await load_root_error_page(error_args)\n\t\t\t\t\t: await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\tbranch,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\trouteId\n\t\t\t\t\t  });\n\t\t\t} catch (e) {\n\t\t\t\tif (error) throw e;\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result.redirect) {\n\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t// a redirect but only in the browser\n\t\t\t\tawait native_navigation(new URL(result.redirect, location.href));\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: number[];\n *     params: Record<string, string>;\n *     routeId: string | null;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tconst client = create_client({\n\t\ttarget,\n\t\tsession,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\tset_paths(paths);\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t}\n\n\tif (route) {\n\t\tif (spa) client.goto(location.href, { replaceState: true });\n\t\tclient._start_router();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"file":"start-b301c9dd.js"}