{"version":3,"file":"index.svelte-93963109.js","sources":["../../../../../../../../../../src/lib/components/versions/VersionDescription.svelte","../../../../../../../../../../src/lib/components/versions/VersionInfo.svelte","../../../../../../../../../../src/routes/mod/[modId]/version/[versionId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { markdown } from '$lib/utils/markdown';\n  import Card, { Content } from '@smui/card';\n\n  export let changelog!: string;\n</script>\n\n<Card class=\"h-fit\">\n  <Content>\n    <div class=\"markdown-content\">\n      {#await markdown(changelog) then changelogRendered}\n        <p>{@html changelogRendered}</p>\n      {/await}\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { Version } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyBytes, prettyDate, prettyNumber } from '$lib/utils/formatting';\n\n  export let version!: Pick<Version, 'created_at' | 'sml_version' | 'size' | 'stability' | 'downloads' | 'hash'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg break-words\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(version.created_at)}</span><br />\n      <span><strong>Downloads:</strong> {prettyNumber(version.downloads)}</span><br />\n      <span><strong>SML Version:</strong> {version.sml_version}</span><br />\n      <span><strong>Stability:</strong> {version.stability}</span><br />\n      <span><strong>Size:</strong> {prettyBytes(version.size)}</span><br />\n      <span><strong>Hash:</strong> {version.hash}</span>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetModVersionDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n\n  const versionQ = operationStore(GetModVersionDocument, { version: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    versionQ.variables.version = input.params.versionId;\n    return loadWaitForNoFetch({\n      version: versionQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation } from '@urql/svelte';\n  import { DeleteVersionDocument } from '$lib/generated';\n  import VersionDescription from '$lib/components/versions/VersionDescription.svelte';\n  import VersionInfo from '$lib/components/versions/VersionInfo.svelte';\n  import { API_REST } from '$lib/core';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { writable } from 'svelte/store';\n  import { goto } from '$app/navigation';\n  import { user } from '$lib/stores/user';\n  import { base } from '$app/paths';\n  import Button, { Label, Icon } from '@smui/button';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import type { MenuComponentDev } from '@smui/menu';\n  import Menu from '@smui/menu';\n  import List, { Item } from '@smui/list';\n  import { installMod } from '$lib/stores/launcher';\n  import { prettyTarget } from '$lib/utils/formatting';\n  import VersionTargetSupportGrid from '$lib/components/versions/VersionTargetSupportGrid.svelte';\n  import VersionDependenciesGrid from '$lib/components/versions/VersionDependenciesGrid.svelte';\n\n  export let modId!: string;\n  export let versionId!: string;\n  export let version: typeof versionQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n  let menu: MenuComponentDev;\n\n  const deleteVersion = mutation({\n    query: DeleteVersionDocument\n  });\n\n  $: canUserEdit =\n    $user?.roles?.deleteContent ||\n    $version?.data?.getVersion.mod?.authors?.findIndex((author) => author.user_id == $user?.id) >= 0;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteVersionFn = () => {\n    deleteVersion({ versionId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting version: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/mod/' + modId);\n      }\n    });\n  };\n</script>\n\n<svelte:head>\n  {#if !$version.fetching && !$version.error && $version.data.getVersion}\n    <MetaDescriptors\n      description=\"Information for mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\"\n      title=\"Mod version {$version.data.getVersion.mod.name} {$version.data.getVersion.version}\" />\n  {/if}\n</svelte:head>\n\n{#if $version.fetching}\n  <p>Loading...</p>\n{:else if $version.error}\n  <p>Oh no... {$version.error.message}</p>\n{:else if $version.data.getVersion}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl font-bold\">\n        {$version.data.getVersion.mod.name}\n        Version {$version.data.getVersion.version}\n      </h1>\n\n      <div class=\"grid grid-flow-col gap-4\">\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/mod/' + modId + '/version/' + versionId + '/edit')}>\n            Edit\n          </Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n        {#if $version.data.getVersion.targets.length != 0}\n          <Button variant=\"outlined\" on:click={() => menu.setOpen(true)}>\n            <Label>Download</Label>\n            <Icon class=\"material-icons\" style=\"margin: 0;\">arrow_drop_down</Icon>\n          </Button>\n          <Menu bind:this={menu} anchorCorner=\"BOTTOM_LEFT\">\n            <List>\n              {#each $version.data.getVersion.targets as target}\n                <Item>\n                  <Button\n                    variant=\"outlined\"\n                    class=\"w-full\"\n                    href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/' + target.targetName + '/download'}\n                    >Download {prettyTarget(target.targetName)}</Button>\n                </Item>\n              {/each}\n            </List>\n          </Menu>\n        {:else}\n          <Button variant=\"outlined\" href={base + '/mod/' + modId + '/version/' + versionId}>View</Button>\n          <Button variant=\"outlined\" href={API_REST + '/mod/' + modId + '/versions/' + versionId + '/download'}\n            >Download</Button>\n        {/if}\n        <Button variant=\"outlined\" on:click={() => installMod(version.data.getVersion.mod.mod_reference)}>\n          <Label>Install</Label>\n          <Icon class=\"material-icons\">download</Icon>\n        </Button>\n\n        <Button variant=\"outlined\" href={base + '/mod/' + modId}>\n          <Label>Mod</Label>\n          <Icon class=\"material-icons\">extension</Icon>\n        </Button>\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      <VersionDescription changelog={$version.data.getVersion.changelog} />\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <VersionInfo version={$version.data.getVersion} />\n        <VersionTargetSupportGrid targets={$version.data.getVersion.targets} />\n        <VersionDependenciesGrid dependencies={$version.data.getVersion.dependencies} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title id=\"simple-title\">Delete Version?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this version</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteVersionFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["ctx","insert_hydration","target","p","anchor","innerHTML","raw_value","handle_promise","promise","markdown","info","div","dirty","changelog","$$props","prettyDate","created_at","prettyNumber","downloads","t12_value","sml_version","t16_value","stability","prettyBytes","size","t24_value","hash","append_hydration","h3","span0","strong0","br0","span1","strong1","br1","span2","strong2","br2","span3","strong3","br3","span4","strong4","br4","span5","strong5","set_data","t4","t4_value","t8","t8_value","t12","t16","t20","t20_value","t24","version","description","data","getVersion","mod","name","title","metadescriptors_changes","t0_value","t2_value","create_if_block_5","targets","length","base","dependencies","create_if_block_3","div4","div1","h1","div0","div3","div2","current","t0","t2","versiondescription_changes","versiontargetsupportgrid_changes","versiondependenciesgrid_changes","error","message","t1","t1_value","href","API_REST","button0_changes","prettyTarget","targetName","button_changes","each_value","i","each_blocks","span","fetching","create_if_block_6","versionQ","operationStore","GetModVersionDocument","undefined","load","paramsToProps","async","variables","input","params","versionId","loadWaitForNoFetch","modId","errorMessage","errorToast","menu","deleteVersion","mutation","query","DeleteVersionDocument","deleteDialogOpen","writable","deleteVersionFn","then","value","console","$$invalidate","goto","set","setOpen","$$value","installMod","mod_reference","$deleteDialogOpen","canUserEdit","$user","roles","deleteContent","$version","authors","findIndex","author","user_id","id"],"mappings":"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"}